// Generated by purs bundle 0.11.7
var PS = {};
(function(exports) {
    "use strict";

  exports.localStorage = window.localStorage;    

  exports.unsafeLength= function(storage) {
    return function(){
      return storage.length;
    }
  };

  exports.unsafeKey = function(null2Maybe,storage,num) {
    return function(){
      return null2Maybe(storage.key(num));
    }
  };

  exports.unsafeGetItem = function(null2Maybe,storage,str) {
    return function(){
      return null2Maybe(storage.getItem(str));
    }
  };

  exports.unsafeSetItem = function(storage,str,val) {
    return function(){
      storage.setItem(str, val);
      return {};
    }
  };

  exports.unsafeRemoveItem = function(storage,str) {
    return function(){
      storage.removeItem(str);
      return {};
    }
  };

  exports.unsafeClear = function(storage) {
    return function(){
      storage.clear();
      return {};
    }
  };

  exports.null2MaybeImpl = function(just, nothing, n) {
    return n == null ? nothing : just(n);
  };
})(PS["Browser.WebStorage"] = PS["Browser.WebStorage"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };

  exports.foreachE = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (Semigroupoid0, id) {
      this.Semigroupoid0 = Semigroupoid0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
  exports["on"] = on;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\x07": return "'\\a'";
        case "\b": return "'\\b'";
        case "\f": return "'\\f'";
        case "\n": return "'\\n'";
        case "\r": return "'\\r'";
        case "\t": return "'\\t'";
        case "\v": return "'\\v'";
      }
      return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var showBoolean = new Show(function (v) {
      if (v) {
          return "true";
      };
      if (!v) {
          return "false";
      };
      throw new Error("Failed pattern match at Data.Show line 12, column 1 - line 12, column 37: " + [ v.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showChar"] = showChar;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applyFirst = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
          };
      };
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
  exports["applyArray"] = applyArray;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 62, column 1 - line 62, column 65: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  }; 
  var applicativeArray = new Applicative(function () {
      return Control_Apply.applyArray;
  }, function (x) {
      return [ x ];
  });
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
  exports["when"] = when;
  exports["applicativeArray"] = applicativeArray;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
    "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var Discard = function (discard) {
      this.discard = discard;
  };
  var discard = function (dict) {
      return dict.discard;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.refEq);
  var eqNumber = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);
  var eqChar = new Eq($foreign.refEq);
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  }; 
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];        
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.numSub = function (n1) {
    return function (n2) {
      return n1 - n2;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
    "use strict";

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];        
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                 
  var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringNumber"] = semiringNumber;
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];        
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  }; 
  var ringNumber = new Ring(function () {
      return Data_Semiring.semiringNumber;
  }, $foreign.numSub);
  exports["Ring"] = Ring;
  exports["sub"] = sub;
  exports["ringNumber"] = ringNumber;
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordBoolean = new Ord(function () {
      return Data_Eq.eqBoolean;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  var greaterThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var lessThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return true;
              };
              return false;
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["lessThan"] = lessThan;
  exports["greaterThan"] = greaterThan;
  exports["ordBoolean"] = ordBoolean;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");  
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;
  exports["foreachE"] = $foreign.foreachE;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["runFn4"] = $foreign.runFn4;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];        
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];        
  var Alternative = function (Applicative0, Plus1) {
      this.Applicative0 = Applicative0;
      this.Plus1 = Plus1;
  };
  exports["Alternative"] = Alternative;
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var MonadZero = function (Alternative1, Monad0) {
      this.Alternative1 = Alternative1;
      this.Monad0 = Monad0;
  }; 
  var guard = function (dictMonadZero) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
          };
          throw new Error("Failed pattern match at Control.MonadZero line 54, column 1 - line 54, column 52: " + [ v.constructor.name ]);
      };
  };
  exports["MonadZero"] = MonadZero;
  exports["guard"] = guard;
})(PS["Control.MonadZero"] = PS["Control.MonadZero"] || {});
(function(exports) {
    "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Unit = PS["Data.Unit"];        
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                                 
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var showMaybe = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Just) {
              return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
          };
          if (v instanceof Nothing) {
              return "Nothing";
          };
          throw new Error("Failed pattern match at Data.Maybe line 207, column 1 - line 207, column 47: " + [ v.constructor.name ]);
      });
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 219, column 1 - line 219, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.id(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar34) {
                  return $dollar34;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 270, column 1 - line 270, column 46: " + [ v.constructor.name ]);
          })());
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 68, column 1 - line 68, column 35: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 127, column 1 - line 127, column 33: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var monadMaybe = new Control_Monad.Monad(function () {
      return applicativeMaybe;
  }, function () {
      return bindMaybe;
  });
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  var plusMaybe = new Control_Plus.Plus(function () {
      return altMaybe;
  }, Nothing.value);
  var alternativeMaybe = new Control_Alternative.Alternative(function () {
      return applicativeMaybe;
  }, function () {
      return plusMaybe;
  });
  var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
      return alternativeMaybe;
  }, function () {
      return monadMaybe;
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["plusMaybe"] = plusMaybe;
  exports["alternativeMaybe"] = alternativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monadMaybe"] = monadMaybe;
  exports["monadZeroMaybe"] = monadZeroMaybe;
  exports["eqMaybe"] = eqMaybe;
  exports["showMaybe"] = showMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Browser.WebStorage"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];        
  var Storage = function (clear, getItem, key, length, removeItem, setItem) {
      this.clear = clear;
      this.getItem = getItem;
      this.key = key;
      this.length = length;
      this.removeItem = removeItem;
      this.setItem = setItem;
  };
  var setItem = function (dict) {
      return dict.setItem;
  };
  var removeItem = function (dict) {
      return dict.removeItem;
  };
  var null2Maybe = function (n) {
      return $foreign.null2MaybeImpl(Data_Maybe.Just.create, Data_Maybe.Nothing.value, n);
  };
  var storageLocalStorage = new Storage(function (v) {
      return $foreign.unsafeClear($foreign.localStorage);
  }, function (v) {
      return function (k) {
          return $foreign.unsafeGetItem(null2Maybe, $foreign.localStorage, k);
      };
  }, function (v) {
      return function (n) {
          return $foreign.unsafeKey(null2Maybe, $foreign.localStorage, n);
      };
  }, function (v) {
      return $foreign.unsafeLength($foreign.localStorage);
  }, function (v) {
      return function (k) {
          return $foreign.unsafeRemoveItem($foreign.localStorage, k);
      };
  }, function (v) {
      return function (k) {
          return function (v1) {
              return $foreign.unsafeSetItem($foreign.localStorage, k, v1);
          };
      };
  });
  var length = function (dict) {
      return dict.length;
  };
  var key = function (dict) {
      return dict.key;
  };
  var getItem = function (dict) {
      return dict.getItem;
  };
  var clear = function (dict) {
      return dict.clear;
  };
  exports["Storage"] = Storage;
  exports["clear"] = clear;
  exports["getItem"] = getItem;
  exports["key"] = key;
  exports["length"] = length;
  exports["removeItem"] = removeItem;
  exports["setItem"] = setItem;
  exports["storageLocalStorage"] = storageLocalStorage;
  exports["localStorage"] = $foreign.localStorage;
})(PS["Browser.WebStorage"] = PS["Browser.WebStorage"] || {});
(function(exports) {
    "use strict";

  function id(x) {
    return x;
  }                       
  exports.fromString = id;
  exports.fromArray = id;
  exports.fromObject = id;

  exports.jsonNull = null;

  exports.stringify = function (j) {
    return JSON.stringify(j);
  };

  var objToString = Object.prototype.toString;

  function isArray(a) {
    return objToString.call(a) === "[object Array]";
  }

  exports._foldJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull(null);
    else if (typeof j === "boolean") return isBool(j);
    else if (typeof j === "number") return isNum(j);
    else if (typeof j === "string") return isStr(j);
    else if (objToString.call(j) === "[object Array]")
      return isArr(j);
    else return isObj(j);
  };
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
    "use strict";

  exports._copyEff = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f;
  };

  exports._fmapStrMap = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  };

  exports._mapWithKey = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(k)(m0[k]);
      }
    }
    return m;
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports.toArrayWithKey = toArrayWithKey;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
    "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };                    

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };

  //------------------------------------------------------------------------------
  // Partial ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unsafeIndexImpl = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCoerceEff = function (f) {
    return f;
  };
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var unsafePerformEff = function ($0) {
      return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0));
  };
  exports["unsafePerformEff"] = unsafePerformEff;
  exports["unsafeCoerceEff"] = $foreign.unsafeCoerceEff;
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var rmap = function (dictBifunctor) {
      return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
  exports["rmap"] = rmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };                 
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Prelude = PS["Prelude"];        
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          return function ($64) {
                              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeDisj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Disj);
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["newtypeDisj"] = newtypeDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($195) {
                  return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var fold = function (dictFoldable) {
      return function (dictMonoid) {
          return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["fold"] = fold;
  exports["traverse_"] = traverse_;
  exports["intercalate"] = intercalate;
  exports["any"] = any;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont(fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList(x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray(list) {
      var arr = [];
      var xs = list;
      while (xs !== emptyList) {
        arr.push(xs.head);
        xs = xs.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Traversable_Accum = PS["Data.Traversable.Accum"];
  var Data_Traversable_Accum_Internal = PS["Data.Traversable.Accum.Internal"];
  var Prelude = PS["Prelude"];        
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var showEither = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              if (v instanceof Left) {
                  return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
              };
              if (v instanceof Right) {
                  return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
              };
              throw new Error("Failed pattern match at Data.Either line 160, column 1 - line 160, column 61: " + [ v.constructor.name ]);
          });
      };
  };
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 36, column 1 - line 36, column 45: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });                                                                                                     
  var fromRight = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar62) {
                  return $dollar62;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Right) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Either line 252, column 1 - line 252, column 52: " + [ v.constructor.name ]);
          })());
      };
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 229, column 1 - line 229, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 43, column 1 - line 43, column 45: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 79, column 1 - line 79, column 41: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  var monadEither = new Control_Monad.Monad(function () {
      return applicativeEither;
  }, function () {
      return bindEither;
  });
  var altEither = new Control_Alt.Alt(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return v1;
          };
          return v;
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["fromRight"] = fromRight;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["altEither"] = altEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
  exports["showEither"] = showEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (v) {
          return f(v);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith(dictPartial)(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var tailRec = function (f) {
      var go = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Loop) {
                  $copy_v = f(v.value0);
                  return;
              };
              if (v instanceof Done) {
                  $tco_done = true;
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class line 96, column 3 - line 96, column 25: " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return function ($53) {
          return go(f($53));
      };
  }; 
  var monadRecEither = new MonadRec(function () {
      return Data_Either.monadEither;
  }, function (f) {
      return function (a0) {
          var g = function (v) {
              if (v instanceof Data_Either.Left) {
                  return new Done(new Data_Either.Left(v.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                  return new Loop(f(v.value0.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                  return new Done(new Data_Either.Right(v.value0.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class line 112, column 7 - line 112, column 33: " + [ v.constructor.name ]);
          };
          return tailRec(g)(f(a0));
      };
  });
  var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Loop) {
                  return new Loop(v(v2.value0));
              };
              if (v2 instanceof Done) {
                  return new Done(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class line 32, column 1 - line 32, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRec"] = tailRec;
  exports["tailRecM"] = tailRecM;
  exports["bifunctorStep"] = bifunctorStep;
  exports["monadRecEither"] = monadRecEither;
})(PS["Control.Monad.Rec.Class"] = PS["Control.Monad.Rec.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.FunctorWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var FunctorWithIndex = function (Functor0, mapWithIndex) {
      this.Functor0 = Functor0;
      this.mapWithIndex = mapWithIndex;
  };
  var mapWithIndex = function (dict) {
      return dict.mapWithIndex;
  };
  exports["FunctorWithIndex"] = FunctorWithIndex;
  exports["mapWithIndex"] = mapWithIndex;
})(PS["Data.FunctorWithIndex"] = PS["Data.FunctorWithIndex"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
      this.Foldable0 = Foldable0;
      this.foldMapWithIndex = foldMapWithIndex;
      this.foldlWithIndex = foldlWithIndex;
      this.foldrWithIndex = foldrWithIndex;
  };
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var foldlWithIndex = function (dict) {
      return dict.foldlWithIndex;
  };
  var foldMapWithIndex = function (dict) {
      return dict.foldMapWithIndex;
  };
  exports["FoldableWithIndex"] = FoldableWithIndex;
  exports["foldrWithIndex"] = foldrWithIndex;
  exports["foldlWithIndex"] = foldlWithIndex;
  exports["foldMapWithIndex"] = foldMapWithIndex;
})(PS["Data.FoldableWithIndex"] = PS["Data.FoldableWithIndex"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Traversable_Accum = PS["Data.Traversable.Accum"];
  var Data_Traversable_Accum_Internal = PS["Data.Traversable.Accum.Internal"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
      this.FoldableWithIndex1 = FoldableWithIndex1;
      this.FunctorWithIndex0 = FunctorWithIndex0;
      this.Traversable2 = Traversable2;
      this.traverseWithIndex = traverseWithIndex;
  };
  var traverseWithIndex = function (dict) {
      return dict.traverseWithIndex;
  };
  exports["TraversableWithIndex"] = TraversableWithIndex;
  exports["traverseWithIndex"] = traverseWithIndex;
})(PS["Data.TraversableWithIndex"] = PS["Data.TraversableWithIndex"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Prelude = PS["Prelude"];        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var showNonEmpty = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
          });
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["showNonEmpty"] = showNonEmpty;
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Distributive = PS["Data.Distributive"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Type_Equality = PS["Type.Equality"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  };
  var showTuple = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
          });
      };
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (v) {
          return new Tuple(v.value0, f(v.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["showTuple"] = showTuple;
  exports["functorTuple"] = functorTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
    "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Unfoldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var Unfoldable = function (unfoldr) {
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Array"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                                                        
  var unsafeIndex = function (dictPartial) {
      return $foreign.unsafeIndexImpl;
  };
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      return function (xs) {
          var len = $foreign.length(xs);
          var f = function (i) {
              if (i < len) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
              };
              if (Data_Boolean.otherwise) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Array line 139, column 3 - line 141, column 26: " + [ i.constructor.name ]);
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
      };
  }; 
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var v = comp(x)(y);
                  if (v instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Array line 698, column 15 - line 703, column 1: " + [ v.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };                                                                                  
  var init = function (xs) {
      if ($$null(xs)) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
      };
      throw new Error("Failed pattern match at Data.Array line 319, column 1 - line 319, column 45: " + [ xs.constructor.name ]);
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var unsnoc = function (xs) {
      return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return function (v1) {
              return {
                  init: v,
                  last: v1
              };
          };
      })(init(xs)))(last(xs));
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap(function ($94) {
          return Data_Maybe.maybe([  ])(singleton)(f($94));
      });
  };
  var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["singleton"] = singleton;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["last"] = last;
  exports["init"] = init;
  exports["uncons"] = uncons;
  exports["unsnoc"] = unsnoc;
  exports["index"] = index;
  exports["concatMap"] = concatMap;
  exports["mapMaybe"] = mapMaybe;
  exports["catMaybes"] = catMaybes;
  exports["sortBy"] = sortBy;
  exports["unsafeIndex"] = unsafeIndex;
  exports["range"] = $foreign.range;
  exports["length"] = $foreign.length;
  exports["snoc"] = $foreign.snoc;
  exports["zipWith"] = $foreign.zipWith;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };

  exports["delete"] = function (m) {
    return function (k) {
      return function () {
        delete m[k];
        return m;
      };
    };
  };
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.StrMap.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
  exports["delete"] = $foreign["delete"];
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.StrMap"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];        
  var values = $foreign.toArrayWithKey(function (v) {
      return function (v1) {
          return v1;
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      return function ($46) {
          return Data_Array.toUnfoldable(dictUnfoldable)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($46));
      };
  };                                                             
  var thawST = $foreign._copyEff;
  var pureST = function (f) {
      return Control_Monad_Eff.runPure($foreign.runST(f));
  };
  var singleton = function (k) {
      return function (v) {
          return pureST(function __do() {
              var v1 = Data_StrMap_ST["new"]();
              return Data_StrMap_ST.poke(v1)(k)(v)();
          });
      };
  };
  var mutate = function (f) {
      return function (m) {
          return pureST(function __do() {
              var v = thawST(m)();
              var v1 = f(v)();
              return v;
          });
      };
  };                                                                                                 
  var mapWithKey = function (f) {
      return function (m) {
          return $foreign._mapWithKey(m, f);
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(function (s) {
              return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(s)(k)(v));
          });
      };
  };
  var functorStrMap = new Data_Functor.Functor(function (f) {
      return function (m) {
          return $foreign._fmapStrMap(m, f);
      };
  });
  var functorWithIndexStrMap = new Data_FunctorWithIndex.FunctorWithIndex(function () {
      return functorStrMap;
  }, mapWithKey);
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return pureST(function __do() {
              var v = Data_StrMap_ST["new"]();
              Control_Monad_Eff.foreachE(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(v)(v1.value0)(v1.value1));
              })();
              return v;
          });
      };
  };
  var fold = $foreign._foldM(Data_Function.applyFlipped);
  var foldMap = function (dictMonoid) {
      return function (f) {
          return fold(function (acc) {
              return function (k) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  };
  var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return foldMap(dictMonoid)(Data_Function["const"](f));
      };
  }, function (f) {
      return fold(function (z) {
          return function (v) {
              return f(z);
          };
      });
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
          };
      };
  });
  var foldableWithIndexStrMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableStrMap;
  }, function (dictMonoid) {
      return foldMap(dictMonoid);
  }, function (f) {
      return fold(Data_Function.flip(f));
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
          };
      };
  });
  var traversableWithIndexStrMap = new Data_TraversableWithIndex.TraversableWithIndex(function () {
      return foldableWithIndexStrMap;
  }, function () {
      return functorWithIndexStrMap;
  }, function () {
      return traversableStrMap;
  }, function (dictApplicative) {
      return function (f) {
          return function (ms) {
              return fold(function (acc) {
                  return function (k) {
                      return function (v) {
                          return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                      };
                  };
              })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
          };
      };
  });
  var traversableStrMap = new Data_Traversable.Traversable(function () {
      return foldableStrMap;
  }, function () {
      return functorStrMap;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function ($48) {
          return Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexStrMap)(dictApplicative)(Data_Function["const"]($48));
      };
  });
  var $$delete = function (k) {
      return mutate(function (s) {
          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST["delete"](s)(k));
      });
  };
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["delete"] = $$delete;
  exports["mapWithKey"] = mapWithKey;
  exports["values"] = values;
  exports["fold"] = fold;
  exports["foldMap"] = foldMap;
  exports["thawST"] = thawST;
  exports["pureST"] = pureST;
  exports["functorStrMap"] = functorStrMap;
  exports["functorWithIndexStrMap"] = functorWithIndexStrMap;
  exports["foldableStrMap"] = foldableStrMap;
  exports["foldableWithIndexStrMap"] = foldableWithIndexStrMap;
  exports["traversableStrMap"] = traversableStrMap;
  exports["traversableWithIndexStrMap"] = traversableWithIndexStrMap;
  exports["empty"] = $foreign.empty;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Argonaut.Core"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var verbJsonType = function (def) {
      return function (f) {
          return function (fold) {
              return fold(def)(f);
          };
      };
  };
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var showJson = new Data_Show.Show($foreign.stringify);
  var jsonSingletonObject = function (key) {
      return function (val) {
          return $foreign.fromObject(Data_StrMap.singleton(key)(val));
      };
  };                                            
  var jsonEmptyObject = $foreign.fromObject(Data_StrMap.empty);
  var isJsonType = verbJsonType(false)(Data_Function["const"](true));
  var foldJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        
  var foldJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
          };
      };
  };                                        
  var toObject = toJsonType(foldJsonObject);
  var foldJsonNull = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };
  var isNull = isJsonType(foldJsonNull);      
  var foldJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
          };
      };
  };                                      
  var toArray = toJsonType(foldJsonArray);
  exports["foldJsonNull"] = foldJsonNull;
  exports["foldJsonString"] = foldJsonString;
  exports["foldJsonArray"] = foldJsonArray;
  exports["foldJsonObject"] = foldJsonObject;
  exports["isNull"] = isNull;
  exports["toArray"] = toArray;
  exports["toObject"] = toObject;
  exports["jsonEmptyObject"] = jsonEmptyObject;
  exports["jsonSingletonObject"] = jsonSingletonObject;
  exports["showJson"] = showJson;
  exports["fromString"] = $foreign.fromString;
  exports["fromArray"] = $foreign.fromArray;
  exports["fromObject"] = $foreign.fromObject;
  exports["jsonNull"] = $foreign.jsonNull;
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";     

  exports.isNaN = isNaN;

  exports.infinity = Infinity;

  exports.readInt = function (radix) {
    return function (n) {
      return parseInt(n, radix);
    };
  };                             

  exports.decodeURI = decodeURI;
  exports.encodeURI = encodeURI;
  exports.decodeURIComponent = decodeURIComponent;
  exports.encodeURIComponent = encodeURIComponent;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Global"];
  exports["isNaN"] = $foreign["isNaN"];
  exports["infinity"] = $foreign.infinity;
  exports["readInt"] = $foreign.readInt;
  exports["decodeURI"] = $foreign["decodeURI"];
  exports["encodeURI"] = $foreign["encodeURI"];
  exports["decodeURIComponent"] = $foreign["decodeURIComponent"];
  exports["encodeURIComponent"] = $foreign["encodeURIComponent"];
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
    "use strict";

  exports.round = Math.round;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Math"];
  exports["round"] = $foreign.round;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Int"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_DivisionRing = PS["Data.DivisionRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 64, column 29: " + [ x.constructor.name ]);
  };
  var round = function ($23) {
      return unsafeClamp($$Math.round($23));
  };
  exports["fromNumber"] = fromNumber;
  exports["round"] = round;
  exports["fromString"] = fromString;
  exports["fromStringAs"] = fromStringAs;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($158) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($158));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 81, column 12 - line 83, column 30: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          return function ($159) {
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($159));
          };
      };
  });
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var showList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Nil) {
              return "Nil";
          };
          return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
      });
  };
  var showNonEmptyList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
      });
  };                                               
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["showList"] = showList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
  exports["showNonEmptyList"] = showNonEmptyList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                                                   
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List line 259, column 1 - line 259, column 66: " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List line 245, column 1 - line 245, column 43: " + [ v.constructor.name ]);
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List line 368, column 3 - line 368, column 19: " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var manyRec = function (dictMonadRec) {
      return function (dictAlternative) {
          return function (p) {
              var go = function (acc) {
                  return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
                      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
                          return new Data_List_Types.Cons(v1, acc);
                      })(function (v1) {
                          return reverse(acc);
                      })(v));
                  });
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
          };
      };
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List line 230, column 1 - line 230, column 22: " + [ v.constructor.name ]);
  };
  exports["toUnfoldable"] = toUnfoldable;
  exports["manyRec"] = manyRec;
  exports["head"] = head;
  exports["tail"] = tail;
  exports["uncons"] = uncons;
  exports["reverse"] = reverse;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Lazy = PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = PS["Data.List.Lazy.Types"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map line 195, column 5 - line 195, column 22: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  }; 
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map line 413, column 3 - line 418, column 88: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 410, column 1 - line 410, column 80: " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map line 449, column 5 - line 454, column 108: " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map line 446, column 3 - line 446, column 56: " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map line 429, column 3 - line 429, column 55: " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function (ctxs) {
              return function (tree) {
                  if (ctxs instanceof Data_List_Types.Nil) {
                      return tree;
                  };
                  if (ctxs instanceof Data_List_Types.Cons) {
                      var __unused = function (dictPartial1) {
                          return function ($dollar57) {
                              return $dollar57;
                          };
                      };
                      return __unused()((function () {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              return up(ctxs.value1)(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              return up(ctxs.value1)(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map line 499, column 9 - line 516, column 136: " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      })());
                  };
                  throw new Error("Failed pattern match at Data.Map line 496, column 5 - line 516, column 136: " + [ ctxs.constructor.name ]);
              };
          };
          var removeMaxNode = function (ctx) {
              return function (m) {
                  var __unused = function (dictPartial1) {
                      return function ($dollar59) {
                          return $dollar59;
                      };
                  };
                  return __unused()((function () {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          return removeMaxNode(new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(m.value3);
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          return removeMaxNode(new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(m.value6);
                      };
                      throw new Error("Failed pattern match at Data.Map line 528, column 5 - line 532, column 107: " + [ m.constructor.name ]);
                  })());
              };
          };
          var maxNode = function (m) {
              var __unused = function (dictPartial1) {
                  return function ($dollar61) {
                      return $dollar61;
                  };
              };
              return __unused()((function () {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      return maxNode(m.value3);
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      return maxNode(m.value6);
                  };
                  throw new Error("Failed pattern match at Data.Map line 519, column 33 - line 523, column 45: " + [ m.constructor.name ]);
              })());
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map line 469, column 34 - line 492, column 80: " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var empty = Leaf.value;
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["delete"] = $$delete;
  exports["pop"] = pop;
  exports["member"] = member;
})(PS["Data.Map"] = PS["Data.Map"] || {});
(function(exports) {
    "use strict";

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.singleton = function (c) {
    return c;
  };

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports["_indexOf'"] = function (just) {
    return function (nothing) {
      return function (x) {
        return function (startAt) {
          return function (s) {
            if (startAt < 0 || startAt > s.length) return nothing;
            var i = s.indexOf(x, startAt);
            return i === -1 ? nothing : just(i);
          };
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.replace = function (s1) {
    return function (s2) {
      return function (s3) {
        return s3.replace(s1, s2);
      };
    };
  };

  exports.replaceAll = function (s1) {
    return function (s2) {
      return function (s3) {
        return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };

  exports.count = function (p) {
    return function (s) {
      var i = 0;
      while (i < s.length && p(s.charAt(i))) i++;
      return i;
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.String"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Prelude = PS["Prelude"];
  var Pattern = function (x) {
      return x;
  };                                                                              
  var takeWhile = function (p) {
      return function (s) {
          return $foreign.take($foreign.count(p)(s))(s);
      };
  };
  var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var stripPrefix = function (v) {
      return function (str) {
          var v1 = indexOf(v)(str);
          if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
              return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var contains = function (pat) {
      return function ($48) {
          return Data_Maybe.isJust(indexOf(pat)($48));
      };
  };                                                                                      
  var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["Pattern"] = Pattern;
  exports["charAt"] = charAt;
  exports["contains"] = contains;
  exports["indexOf"] = indexOf;
  exports["indexOf'"] = indexOf$prime;
  exports["takeWhile"] = takeWhile;
  exports["stripPrefix"] = stripPrefix;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["length"] = $foreign.length;
  exports["singleton"] = $foreign.singleton;
  exports["replaceAll"] = $foreign.replaceAll;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
  exports["split"] = $foreign.split;
  exports["toCharArray"] = $foreign.toCharArray;
  exports["joinWith"] = $foreign.joinWith;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  }; 
  var decodeJsonString = new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Value is not a String"))(Data_Either.Right.create));                               
  var decodeJsonJson = new DecodeJson(Data_Either.Right.create);                                                                                       
  var decodeJson = function (dict) {
      return dict.decodeJson;
  };                                
  var decodeJsonMaybe = function (dictDecodeJson) {
      return new DecodeJson(function (j) {
          if (Data_Argonaut_Core.isNull(j)) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (Data_Boolean.otherwise) {
              return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(decodeJson(dictDecodeJson)(j));
          };
          throw new Error("Failed pattern match at Data.Argonaut.Decode.Class line 23, column 1 - line 23, column 65: " + [ j.constructor.name ]);
      });
  };
  var decodeJObject = function ($33) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an Object"))(Data_Either.Right.create)(Data_Argonaut_Core.toObject($33));
  };
  var decodeStrMap = function (dictDecodeJson) {
      return new DecodeJson(function ($34) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode StrMap: " + v;
          })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJObject)($34));
      });
  };
  var decodeJArray = function ($35) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an Array"))(Data_Either.Right.create)(Data_Argonaut_Core.toArray($35));
  };
  var decodeArray = function (dictDecodeJson) {
      return new DecodeJson(function ($38) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode Array: " + v;
          })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJArray)($38));
      });
  };
  exports["DecodeJson"] = DecodeJson;
  exports["decodeJson"] = decodeJson;
  exports["decodeJsonMaybe"] = decodeJsonMaybe;
  exports["decodeJsonString"] = decodeJsonString;
  exports["decodeJsonJson"] = decodeJsonJson;
  exports["decodeStrMap"] = decodeStrMap;
  exports["decodeArray"] = decodeArray;
})(PS["Data.Argonaut.Decode.Class"] = PS["Data.Argonaut.Decode.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  var getField = function (dictDecodeJson) {
      return function (o) {
          return function (s) {
              return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Data_Show.show(Data_Show.showString)(s)))(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson))(Data_StrMap.lookup(s)(o));
          };
      };
  };
  exports["getField"] = getField;
})(PS["Data.Argonaut.Decode.Combinators"] = PS["Data.Argonaut.Decode.Combinators"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String = PS["Data.String"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Void = PS["Data.Void"];
  var Prelude = PS["Prelude"];        
  var EncodeJson = function (encodeJson) {
      this.encodeJson = encodeJson;
  };                                                
  var encodeJsonUnit = new EncodeJson(Data_Function["const"](Data_Argonaut_Core.jsonNull));
  var encodeJsonJson = new EncodeJson(Control_Category.id(Control_Category.categoryFn));
  var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
  var encodeJson = function (dict) {
      return dict.encodeJson;
  };
  var encodeJsonArray = function (dictEncodeJson) {
      return new EncodeJson(function (json) {
          return Data_Argonaut_Core.fromArray(Data_Functor.map(Data_Functor.functorArray)(encodeJson(dictEncodeJson))(json));
      });
  };
  exports["encodeJson"] = encodeJson;
  exports["EncodeJson"] = EncodeJson;
  exports["encodeJsonUnit"] = encodeJsonUnit;
  exports["encodeJsonJString"] = encodeJsonJString;
  exports["encodeJsonJson"] = encodeJsonJson;
  exports["encodeJsonArray"] = encodeJsonArray;
})(PS["Data.Argonaut.Encode.Class"] = PS["Data.Argonaut.Encode.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var extend = function (dictEncodeJson) {
      return function (v) {
          return function ($11) {
              return Data_Argonaut_Core.foldJsonObject(Data_Argonaut_Core.jsonSingletonObject(v.value0)(v.value1))(function ($12) {
                  return Data_Argonaut_Core.fromObject(Data_StrMap.insert(v.value0)(v.value1)($12));
              })(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($11));
          };
      };
  };
  var assoc = function (dictEncodeJson) {
      return function (k) {
          return function ($13) {
              return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($13));
          };
      };
  };
  exports["assoc"] = assoc;
  exports["extend"] = extend;
})(PS["Data.Argonaut.Encode.Combinators"] = PS["Data.Argonaut.Encode.Combinators"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var fail = function (dictShow) {
      return function (x) {
          return Data_Either.Left.create("Expected String or Number but found: " + Data_Show.show(dictShow)(x));
      };
  };
  exports["fail"] = fail;
})(PS["Data.Argonaut.JCursor"] = PS["Data.Argonaut.JCursor"] || {});
(function(exports) {
    "use strict";

  // module Data.Generic

  exports.zipAll = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        for (var i = 0; i < l; i++) {
          if (!f(xs[i])(ys[i])) {
            return false;
          }
        }
        return true;
      };
    };
  };

  exports.zipCompare = function (f) {
    return function (xs) {
      return function (ys) {
        var i = 0;
        var xlen = xs.length;
        var ylen = ys.length;
        while (i < xlen && i < ylen) {
          var o = f(xs[i])(ys[i]);
          if (o !== 0) {
            return o;
          }
          i++;
        }
        if (xlen === ylen) {
          return 0;
        } else if (xlen > ylen) {
          return -1;
        } else {
          return 1;
        }
      };
    };
  };
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS["Type.Proxy"] = PS["Type.Proxy"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Generic"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Prelude = PS["Prelude"];
  var Type_Proxy = PS["Type.Proxy"];        
  var SProd = (function () {
      function SProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SProd.create = function (value0) {
          return function (value1) {
              return new SProd(value0, value1);
          };
      };
      return SProd;
  })();
  var SRecord = (function () {
      function SRecord(value0) {
          this.value0 = value0;
      };
      SRecord.create = function (value0) {
          return new SRecord(value0);
      };
      return SRecord;
  })();
  var SNumber = (function () {
      function SNumber(value0) {
          this.value0 = value0;
      };
      SNumber.create = function (value0) {
          return new SNumber(value0);
      };
      return SNumber;
  })();
  var SBoolean = (function () {
      function SBoolean(value0) {
          this.value0 = value0;
      };
      SBoolean.create = function (value0) {
          return new SBoolean(value0);
      };
      return SBoolean;
  })();
  var SInt = (function () {
      function SInt(value0) {
          this.value0 = value0;
      };
      SInt.create = function (value0) {
          return new SInt(value0);
      };
      return SInt;
  })();
  var SString = (function () {
      function SString(value0) {
          this.value0 = value0;
      };
      SString.create = function (value0) {
          return new SString(value0);
      };
      return SString;
  })();
  var SChar = (function () {
      function SChar(value0) {
          this.value0 = value0;
      };
      SChar.create = function (value0) {
          return new SChar(value0);
      };
      return SChar;
  })();
  var SArray = (function () {
      function SArray(value0) {
          this.value0 = value0;
      };
      SArray.create = function (value0) {
          return new SArray(value0);
      };
      return SArray;
  })();
  var SUnit = (function () {
      function SUnit() {

      };
      SUnit.value = new SUnit();
      return SUnit;
  })();
  var SigProd = (function () {
      function SigProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SigProd.create = function (value0) {
          return function (value1) {
              return new SigProd(value0, value1);
          };
      };
      return SigProd;
  })();
  var SigString = (function () {
      function SigString() {

      };
      SigString.value = new SigString();
      return SigString;
  })();
  var SigArray = (function () {
      function SigArray(value0) {
          this.value0 = value0;
      };
      SigArray.create = function (value0) {
          return new SigArray(value0);
      };
      return SigArray;
  })();
  var Generic = function (fromSpine, toSignature, toSpine) {
      this.fromSpine = fromSpine;
      this.toSignature = toSignature;
      this.toSpine = toSpine;
  };
  var toSpine = function (dict) {
      return dict.toSpine;
  };
  var toSignature = function (dict) {
      return dict.toSignature;
  }; 
  var orderingToInt = function (v) {
      if (v instanceof Data_Ordering.EQ) {
          return 0;
      };
      if (v instanceof Data_Ordering.LT) {
          return 1;
      };
      if (v instanceof Data_Ordering.GT) {
          return -1 | 0;
      };
      throw new Error("Failed pattern match at Data.Generic line 538, column 17 - line 541, column 10: " + [ v.constructor.name ]);
  }; 
  var genericString = new Generic(function (v) {
      if (v instanceof SString) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (v) {
      return SigString.value;
  }, SString.create); 
  var fromSpine = function (dict) {
      return dict.fromSpine;
  };
  var force = function (f) {
      return f(Data_Unit.unit);
  };
  var genericArray = function (dictGeneric) {
      return new Generic(function (v) {
          if (v instanceof SArray) {
              return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function ($310) {
                  return fromSpine(dictGeneric)(force($310));
              })(v.value0);
          };
          return Data_Maybe.Nothing.value;
      }, function (x) {
          var lowerProxy = function (v) {
              return Type_Proxy["Proxy"].value;
          };
          return new SigArray(function (v) {
              return toSignature(dictGeneric)(lowerProxy(x));
          });
      }, function ($311) {
          return SArray.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
              return function (v) {
                  return toSpine(dictGeneric)(x);
              };
          })($311));
      });
  };
  var genericEither = function (dictGeneric) {
      return function (dictGeneric1) {
          return new Generic(function (v) {
              if (v instanceof SProd && (v.value0 === "Data.Either.Left" && v.value1.length === 1)) {
                  return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(fromSpine(dictGeneric)(force(v["value1"][0])));
              };
              if (v instanceof SProd && (v.value0 === "Data.Either.Right" && v.value1.length === 1)) {
                  return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(fromSpine(dictGeneric1)(force(v["value1"][0])));
              };
              return Data_Maybe.Nothing.value;
          }, function (x) {
              var rproxy = function (v) {
                  return Type_Proxy["Proxy"].value;
              };
              var lproxy = function (v) {
                  return Type_Proxy["Proxy"].value;
              };
              return new SigProd("Data.Either.Either", [ {
                  sigConstructor: "Data.Either.Left",
                  sigValues: [ function (v) {
                      return toSignature(dictGeneric)(lproxy(x));
                  } ]
              }, {
                  sigConstructor: "Data.Either.Right",
                  sigValues: [ function (v) {
                      return toSignature(dictGeneric1)(rproxy(x));
                  } ]
              } ]);
          }, function (v) {
              if (v instanceof Data_Either.Left) {
                  return new SProd("Data.Either.Left", [ function (v1) {
                      return toSpine(dictGeneric)(v.value0);
                  } ]);
              };
              if (v instanceof Data_Either.Right) {
                  return new SProd("Data.Either.Right", [ function (v1) {
                      return toSpine(dictGeneric1)(v.value0);
                  } ]);
              };
              throw new Error("Failed pattern match at Data.Generic line 180, column 1 - line 180, column 73: " + [ v.constructor.name ]);
          });
      };
  };
  var genericList = function (dictGeneric) {
      return new Generic(function (v) {
          if (v instanceof SProd && (v.value0 === "Data.List.Types.Cons" && v.value1.length === 2)) {
              return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Types.Cons.create)(fromSpine(dictGeneric)(force(v["value1"][0]))))(fromSpine(genericList(dictGeneric))(force(v["value1"][1])));
          };
          if (v instanceof SProd && (v.value0 === "Data.List.Types.Nil" && v.value1.length === 0)) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_List_Types.Nil.value);
          };
          return Data_Maybe.Nothing.value;
      }, function (x) {
          var headProxy = function (v) {
              return Type_Proxy["Proxy"].value;
          };
          return new SigProd("Data.List.Types.List", [ {
              sigConstructor: "Data.List.Types.Cons",
              sigValues: [ function (v) {
                  return toSignature(dictGeneric)(headProxy(x));
              }, function (v) {
                  return toSignature(genericList(dictGeneric))(x);
              } ]
          }, {
              sigConstructor: "Data.List.Types.Nil",
              sigValues: [  ]
          } ]);
      }, function (v) {
          if (v instanceof Data_List_Types.Cons) {
              return new SProd("Data.List.Types.Cons", [ function (v1) {
                  return toSpine(dictGeneric)(v.value0);
              }, function (v1) {
                  return toSpine(genericList(dictGeneric))(v.value1);
              } ]);
          };
          if (v instanceof Data_List_Types.Nil) {
              return new SProd("Data.List.Types.Nil", [  ]);
          };
          throw new Error("Failed pattern match at Data.Generic line 116, column 1 - line 116, column 58: " + [ v.constructor.name ]);
      });
  };
  var genericMaybe = function (dictGeneric) {
      return new Generic(function (v) {
          if (v instanceof SProd && (v.value0 === "Data.Maybe.Just" && v.value1.length === 1)) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(dictGeneric)(force(v["value1"][0])));
          };
          if (v instanceof SProd && (v.value0 === "Data.Maybe.Nothing" && v.value1.length === 0)) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
          };
          return Data_Maybe.Nothing.value;
      }, function (x) {
          var mbProxy = function (v) {
              return Type_Proxy["Proxy"].value;
          };
          return new SigProd("Data.Maybe.Maybe", [ {
              sigConstructor: "Data.Maybe.Just",
              sigValues: [ function (v) {
                  return toSignature(dictGeneric)(mbProxy(x));
              } ]
          }, {
              sigConstructor: "Data.Maybe.Nothing",
              sigValues: [  ]
          } ]);
      }, function (v) {
          if (v instanceof Data_Maybe.Just) {
              return new SProd("Data.Maybe.Just", [ function (v1) {
                  return toSpine(dictGeneric)(v.value0);
              } ]);
          };
          if (v instanceof Data_Maybe.Nothing) {
              return new SProd("Data.Maybe.Nothing", [  ]);
          };
          throw new Error("Failed pattern match at Data.Generic line 160, column 1 - line 160, column 56: " + [ v.constructor.name ]);
      });
  };
  var genericShowPrec = function (v) {
      return function (v1) {
          if (v1 instanceof SProd) {
              if (Data_Array["null"](v1.value1)) {
                  return v1.value0;
              };
              if (Data_Boolean.otherwise) {
                  var showParen = function (v2) {
                      return function (x) {
                          if (!v2) {
                              return x;
                          };
                          if (v2) {
                              return "(" + (x + ")");
                          };
                          throw new Error("Failed pattern match at Data.Generic line 467, column 7 - line 467, column 28: " + [ v2.constructor.name, x.constructor.name ]);
                      };
                  };
                  return showParen(v > 10)(v1.value0 + (" " + Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return genericShowPrec(11)(force(x));
                  })(v1.value1))));
              };
          };
          if (v1 instanceof SRecord) {
              var showLabelPart = function (x) {
                  return x.recLabel + (": " + genericShowPrec(0)(force(x.recValue)));
              };
              return "{" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showLabelPart)(v1.value0)) + "}");
          };
          if (v1 instanceof SBoolean) {
              return Data_Show.show(Data_Show.showBoolean)(v1.value0);
          };
          if (v1 instanceof SInt) {
              return Data_Show.show(Data_Show.showInt)(v1.value0);
          };
          if (v1 instanceof SNumber) {
              return Data_Show.show(Data_Show.showNumber)(v1.value0);
          };
          if (v1 instanceof SString) {
              return Data_Show.show(Data_Show.showString)(v1.value0);
          };
          if (v1 instanceof SChar) {
              return Data_Show.show(Data_Show.showChar)(v1.value0);
          };
          if (v1 instanceof SArray) {
              return "[" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return genericShowPrec(0)(force(x));
              })(v1.value0)) + "]");
          };
          if (v1 instanceof SUnit) {
              return "unit";
          };
          throw new Error("Failed pattern match at Data.Generic line 460, column 1 - line 460, column 49: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var gShow = function (dictGeneric) {
      return function ($312) {
          return genericShowPrec(0)(toSpine(dictGeneric)($312));
      };
  };
  var genericTuple = function (dictGeneric) {
      return function (dictGeneric1) {
          return new Generic(function (v) {
              if (v instanceof SProd && (v.value0 === "Data.Tuple.Tuple" && v.value1.length === 2)) {
                  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromSpine(dictGeneric)(force(v["value1"][0]))))(fromSpine(dictGeneric1)(force(v["value1"][1])));
              };
              return Data_Maybe.Nothing.value;
          }, function (x) {
              var sndProxy = function (v) {
                  return Type_Proxy["Proxy"].value;
              };
              var fstProxy = function (v) {
                  return Type_Proxy["Proxy"].value;
              };
              return new SigProd("Data.Tuple.Tuple", [ {
                  sigConstructor: "Data.Tuple.Tuple",
                  sigValues: [ function (v) {
                      return toSignature(dictGeneric)(fstProxy(x));
                  }, function (v) {
                      return toSignature(dictGeneric1)(sndProxy(x));
                  } ]
              } ]);
          }, function (v) {
              return new SProd("Data.Tuple.Tuple", [ function (v1) {
                  return toSpine(dictGeneric)(v.value0);
              }, function (v1) {
                  return toSpine(dictGeneric1)(v.value1);
              } ]);
          });
      };
  };                                                           
  var eqThunk = function (dictEq) {
      return function (x) {
          return function (y) {
              return Data_Eq.eq(dictEq)(force(x))(force(y));
          };
      };
  };
  var eqRecordSigs = function (dictEq) {
      return function (arr1) {
          return function (arr2) {
              var labelCompare = function (r1) {
                  return function (r2) {
                      return Data_Ord.compare(Data_Ord.ordString)(r1.recLabel)(r2.recLabel);
                  };
              };
              var sorted1 = Data_Array.sortBy(labelCompare)(arr1);
              var sorted2 = Data_Array.sortBy(labelCompare)(arr2);
              var doCmp = function (x) {
                  return function (y) {
                      return x.recLabel === y.recLabel && Data_Eq.eq(dictEq)(force(x.recValue))(force(y.recValue));
                  };
              };
              return Data_Array.length(arr1) === Data_Array.length(arr2) && $foreign.zipAll(doCmp)(sorted1)(sorted2);
          };
      };
  };
  var eqGenericSpine = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof SProd && v1 instanceof SProd) {
              return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value1)(v1.value1));
          };
          if (v instanceof SRecord && v1 instanceof SRecord) {
              return eqRecordSigs(eqGenericSpine)(v.value0)(v1.value0);
          };
          if (v instanceof SNumber && v1 instanceof SNumber) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SBoolean && v1 instanceof SBoolean) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SInt && v1 instanceof SInt) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SString && v1 instanceof SString) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SChar && v1 instanceof SChar) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SArray && v1 instanceof SArray) {
              return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value0)(v1.value0);
          };
          if (v instanceof SUnit && v1 instanceof SUnit) {
              return true;
          };
          return false;
      };
  });
  var gEq = function (dictGeneric) {
      return function (x) {
          return function (y) {
              return Data_Eq.eq(eqGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
          };
      };
  };
  var compareThunk = function (dictOrd) {
      return function (x) {
          return function (y) {
              return orderingToInt(Data_Ord.compare(dictOrd)(force(x))(force(y)));
          };
      };
  };
  var ordGenericSpine = new Data_Ord.Ord(function () {
      return eqGenericSpine;
  }, function (v) {
      return function (v1) {
          if (v instanceof SProd && v1 instanceof SProd) {
              var v2 = Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
              if (v2 instanceof Data_Ordering.EQ) {
                  return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value1)(v1.value1));
              };
              return v2;
          };
          if (v instanceof SProd) {
              return Data_Ordering.LT.value;
          };
          if (v1 instanceof SProd) {
              return Data_Ordering.GT.value;
          };
          if (v instanceof SRecord && v1 instanceof SRecord) {
              var go = function (x) {
                  return function (y) {
                      var v2 = Data_Ord.compare(Data_Ord.ordString)(x.recLabel)(y.recLabel);
                      if (v2 instanceof Data_Ordering.EQ) {
                          return orderingToInt(Data_Ord.compare(ordGenericSpine)(force(x.recValue))(force(y.recValue)));
                      };
                      return orderingToInt(v2);
                  };
              };
              return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(go)(v.value0)(v1.value0));
          };
          if (v instanceof SRecord) {
              return Data_Ordering.LT.value;
          };
          if (v1 instanceof SRecord) {
              return Data_Ordering.GT.value;
          };
          if (v instanceof SInt && v1 instanceof SInt) {
              return Data_Ord.compare(Data_Ord.ordInt)(v.value0)(v1.value0);
          };
          if (v instanceof SInt) {
              return Data_Ordering.LT.value;
          };
          if (v1 instanceof SInt) {
              return Data_Ordering.GT.value;
          };
          if (v instanceof SBoolean && v1 instanceof SBoolean) {
              return Data_Ord.compare(Data_Ord.ordBoolean)(v.value0)(v1.value0);
          };
          if (v instanceof SBoolean) {
              return Data_Ordering.LT.value;
          };
          if (v1 instanceof SBoolean) {
              return Data_Ordering.GT.value;
          };
          if (v instanceof SNumber && v1 instanceof SNumber) {
              return Data_Ord.compare(Data_Ord.ordNumber)(v.value0)(v1.value0);
          };
          if (v instanceof SNumber) {
              return Data_Ordering.LT.value;
          };
          if (v1 instanceof SNumber) {
              return Data_Ordering.GT.value;
          };
          if (v instanceof SString && v1 instanceof SString) {
              return Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
          };
          if (v instanceof SString) {
              return Data_Ordering.LT.value;
          };
          if (v1 instanceof SString) {
              return Data_Ordering.GT.value;
          };
          if (v instanceof SChar && v1 instanceof SChar) {
              return Data_Ord.compare(Data_Ord.ordChar)(v.value0)(v1.value0);
          };
          if (v instanceof SChar) {
              return Data_Ordering.LT.value;
          };
          if (v1 instanceof SChar) {
              return Data_Ordering.GT.value;
          };
          if (v instanceof SArray && v1 instanceof SArray) {
              return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value0)(v1.value0));
          };
          if (v instanceof SArray) {
              return Data_Ordering.LT.value;
          };
          if (v1 instanceof SArray) {
              return Data_Ordering.GT.value;
          };
          if (v instanceof SUnit && v1 instanceof SUnit) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Generic line 303, column 1 - line 303, column 45: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var gCompare = function (dictGeneric) {
      return function (x) {
          return function (y) {
              return Data_Ord.compare(ordGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
          };
      };
  };
  exports["Generic"] = Generic;
  exports["toSpine"] = toSpine;
  exports["toSignature"] = toSignature;
  exports["fromSpine"] = fromSpine;
  exports["SProd"] = SProd;
  exports["SRecord"] = SRecord;
  exports["SNumber"] = SNumber;
  exports["SBoolean"] = SBoolean;
  exports["SInt"] = SInt;
  exports["SString"] = SString;
  exports["SChar"] = SChar;
  exports["SArray"] = SArray;
  exports["SUnit"] = SUnit;
  exports["SigProd"] = SigProd;
  exports["SigString"] = SigString;
  exports["SigArray"] = SigArray;
  exports["gShow"] = gShow;
  exports["gEq"] = gEq;
  exports["gCompare"] = gCompare;
  exports["genericString"] = genericString;
  exports["genericArray"] = genericArray;
  exports["genericTuple"] = genericTuple;
  exports["genericList"] = genericList;
  exports["genericMaybe"] = genericMaybe;
  exports["genericEither"] = genericEither;
  exports["eqGenericSpine"] = eqGenericSpine;
  exports["ordGenericSpine"] = ordGenericSpine;
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Test_QuickCheck = PS["Test.QuickCheck"];
  var Test_QuickCheck_Arbitrary = PS["Test.QuickCheck.Arbitrary"];
  var Test_QuickCheck_Gen = PS["Test.QuickCheck.Gen"];        
  var AuthToken = function (x) {
      return x;
  };                                                                   
  var encodeJsonAuthToken = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v);
  });
  var decodeJsonAuthToken = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Data_Functor.map(Data_Either.functorEither)(AuthToken)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json));
  });
  exports["AuthToken"] = AuthToken;
  exports["encodeJsonAuthToken"] = encodeJsonAuthToken;
  exports["decodeJsonAuthToken"] = decodeJsonAuthToken;
})(PS["LocalCooking.Common.AuthToken"] = PS["LocalCooking.Common.AuthToken"] || {});
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          });
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt, canceler;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;
          canceler  = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            step   = bhead(step);
            if (btail === null) {
              bhead = null;
            } else {
              bhead = btail._1;
              btail = btail._2;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_BIND;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = tmp;
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item.
                if (interrupt && interrupt !== tmp) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._liftEff = Aff.Sync;

  exports.makeAff = Aff.Async;

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var MonadEff = function (Monad0, liftEff) {
      this.Monad0 = Monad0;
      this.liftEff = liftEff;
  };
  var monadEffEff = new MonadEff(function () {
      return Control_Monad_Eff.monadEff;
  }, Control_Category.id(Control_Category.categoryFn));
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["liftEff"] = liftEff;
  exports["MonadEff"] = MonadEff;
  exports["monadEffEff"] = monadEffEff;
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
    "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var $$throw = function ($1) {
      return $foreign.throwException($foreign.error($1));
  };
  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var MonadError = function (MonadThrow0, catchError) {
      this.MonadThrow0 = MonadThrow0;
      this.catchError = catchError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  }; 
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))(function ($21) {
              return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Data_Either.Left.create($21));
          });
      };
  };
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Milliseconds = function (x) {
      return x;
  };                                     
  var ringMilliseconds = Data_Ring.ringNumber;
  var ordMilliseconds = Data_Ord.ordNumber;
  exports["Milliseconds"] = Milliseconds;
  exports["ordMilliseconds"] = ordMilliseconds;
  exports["ringMilliseconds"] = ringMilliseconds;
})(PS["Data.Time.Duration"] = PS["Data.Time.Duration"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Canceler = function (x) {
      return x;
  };                                                                
  var functorAff = new Data_Functor.Functor($foreign._map);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Control.Monad.Aff line 398, column 21 - line 400, column 31: " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Control.Monad.Aff line 393, column 20 - line 397, column 3: " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Control.Monad.Aff line 388, column 12 - line 390, column 20: " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign._makeFiber(ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var v = makeFiber(aff)();
          v.run();
          return v;
      };
  };                                 
  var delay = function (v) {
      return $foreign._delay(Data_Either.Right.create, v);
  };
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign._bind);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign._pure);
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, $foreign._liftEff);
  var effCanceler = function ($50) {
      return Canceler(Data_Function["const"](Control_Monad_Eff_Class.liftEff(monadEffAff)($50)));
  }; 
  var killFiber = function (e) {
      return function (v) {
          return Control_Bind.bind(bindAff)(Control_Monad_Eff_Class.liftEff(monadEffAff)(v.isSuspended))(function (v1) {
              if (v1) {
                  return Control_Monad_Eff_Class.liftEff(monadEffAff)(Data_Functor["void"](Control_Monad_Eff.functorEff)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))));
              };
              return $foreign.makeAff(function (k) {
                  return Data_Functor.map(Control_Monad_Eff.functorEff)(effCanceler)(v.kill(e, k));
              });
          });
      };
  };
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, $foreign._throwError);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowAff;
  }, $foreign._catchError);                                     
  var runAff = function (k) {
      return function (aff) {
          return launchAff(Control_Bind.bindFlipped(bindAff)(function ($52) {
              return Control_Monad_Eff_Class.liftEff(monadEffAff)(k($52));
          })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
      };
  };
  var runAff_ = function (k) {
      return function (aff) {
          return Data_Functor["void"](Control_Monad_Eff.functorEff)(runAff(k)(aff));
      };
  };
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadAff;
  }, function (k) {
      var go = function (a) {
          return Control_Bind.bind(bindAff)(k(a))(function (v) {
              if (v instanceof Control_Monad_Rec_Class.Done) {
                  return Control_Applicative.pure(applicativeAff)(v.value0);
              };
              if (v instanceof Control_Monad_Rec_Class.Loop) {
                  return go(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Aff line 100, column 7 - line 102, column 22: " + [ v.constructor.name ]);
          });
      };
      return go;
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  exports["Canceler"] = Canceler;
  exports["launchAff"] = launchAff;
  exports["runAff"] = runAff;
  exports["runAff_"] = runAff_;
  exports["delay"] = delay;
  exports["killFiber"] = killFiber;
  exports["nonCanceler"] = nonCanceler;
  exports["effCanceler"] = effCanceler;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadRecAff"] = monadRecAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffAff"] = monadEffAff;
  exports["makeAff"] = $foreign.makeAff;
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
    "use strict";
  var scrypt =require("scrypt-js"); 

  exports.scryptImpl = function scryptImpl (params) {
    scrypt(params.password, params.salt, params.n, params.r, params.p, params.dkLen, function callback (error, progress, key) {
      if (error) {
        params.onError(error);
      } else if (key) {
        params.onComplete(key);
      } else {
        params.onProgress(progress);
      }
    });
  };
})(PS["Crypto.Scrypt"] = PS["Crypto.Scrypt"] || {});
(function(exports) {
    "use strict";

  exports.mkEffFn1 = function mkEffFn1(fn) {
    return function(x) {
      return fn(x)();
    };
  };

  exports.mkEffFn2 = function mkEffFn2(fn) {
    return function(a, b) {
      return fn(a)(b)();
    };
  };

  exports.runEffFn1 = function runEffFn1(fn) {
    return function(a) {
      return function() {
        return fn(a);
      };
    };
  };

  exports.runEffFn2 = function runEffFn2(fn) {
    return function(a) {
      return function(b) {
        return function() {
          return fn(a, b);
        };
      };
    };
  };

  exports.runEffFn3 = function runEffFn3(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function() {
            return fn(a, b, c);
          };
        };
      };
    };
  };

  exports.runEffFn4 = function runEffFn4(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function(d) {
            return function() {
              return fn(a, b, c, d);
            };
          };
        };
      };
    };
  };
})(PS["Control.Monad.Eff.Uncurried"] = PS["Control.Monad.Eff.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["mkEffFn1"] = $foreign.mkEffFn1;
  exports["mkEffFn2"] = $foreign.mkEffFn2;
  exports["runEffFn1"] = $foreign.runEffFn1;
  exports["runEffFn2"] = $foreign.runEffFn2;
  exports["runEffFn3"] = $foreign.runEffFn3;
  exports["runEffFn4"] = $foreign.runEffFn4;
})(PS["Control.Monad.Eff.Uncurried"] = PS["Control.Monad.Eff.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Crypto.Scrypt"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Prelude = PS["Prelude"];        
  var scrypt = function (v) {
      return Control_Monad_Aff.makeAff(function (resolve) {
          return Data_Functor.voidRight(Control_Monad_Eff.functorEff)(Control_Monad_Aff.nonCanceler)(Control_Monad_Eff_Uncurried.runEffFn1($foreign.scryptImpl)({
              password: v.password,
              salt: v.salt,
              n: v.n,
              r: v.r,
              p: v.p,
              dkLen: v.dkLen,
              onError: Control_Monad_Eff_Uncurried.mkEffFn1(function ($9) {
                  return resolve(Data_Either.Left.create(Control_Monad_Eff_Exception.error($9)));
              }),
              onProgress: Control_Monad_Eff_Uncurried.mkEffFn1(v.onProgress),
              onComplete: Control_Monad_Eff_Uncurried.mkEffFn1(function ($10) {
                  return resolve(Data_Either.Right.create($10));
              })
          }));
      });
  };
  exports["scrypt"] = scrypt;
})(PS["Crypto.Scrypt"] = PS["Crypto.Scrypt"] || {});
(function(exports) {
    "use strict";
  var nacl_util =require("tweetnacl-util"); 

  exports.encodeBase64 = nacl_util.encodeBase64;

  exports.decodeBase64Impl = function (s) {
    var r;
    try {
      r = nacl_util.decodeBase64(s);
    } catch(e) {
      console.warn("Base64 decoding error: ", e, ", data: ", s);
      r = null;
    }

    return r;
  };
})(PS["Data.ArrayBuffer.Base64"] = PS["Data.ArrayBuffer.Base64"] || {});
(function(exports) {
    "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.ArrayBuffer.Base64"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];        
  var decodeBase64 = function (s) {
      return Data_Nullable.toMaybe($foreign.decodeBase64Impl(s));
  };
  exports["decodeBase64"] = decodeBase64;
  exports["encodeBase64"] = $foreign.encodeBase64;
})(PS["Data.ArrayBuffer.Base64"] = PS["Data.ArrayBuffer.Base64"] || {});
(function(exports) {
    "use strict";
  var unorm =require("unorm");

  exports.nfkc = function nfkc (x) {
    return unorm.nfkc(x);
  };
})(PS["Data.String.Normalize"] = PS["Data.String.Normalize"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.String.Normalize"];
  exports["nfkc"] = $foreign.nfkc;
})(PS["Data.String.Normalize"] = PS["Data.String.Normalize"] || {});
(function(exports) {
    "use strict";

  // `TextEncoder` is not available in `node`, use polyfill in that case
  var TextEncoder =
    (typeof window === "object" && window.TextEncoder)
    || (typeof require === "function" && require("text-encoding").TextEncoder);

  exports._encode = function (utfLabel, str) {
    var encoder = new TextEncoder(utfLabel);

    return encoder.encode(str);
  };
})(PS["Data.TextEncoder"] = PS["Data.TextEncoder"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.TextEncoder"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Utf8 = (function () {
      function Utf8() {

      };
      Utf8.value = new Utf8();
      return Utf8;
  })();
  var Utf_16Be = (function () {
      function Utf_16Be() {

      };
      Utf_16Be.value = new Utf_16Be();
      return Utf_16Be;
  })();
  var Utf_16Le = (function () {
      function Utf_16Le() {

      };
      Utf_16Le.value = new Utf_16Le();
      return Utf_16Le;
  })();
  var showEncoding = new Data_Show.Show(function (v) {
      if (v instanceof Utf8) {
          return "utf-8";
      };
      if (v instanceof Utf_16Be) {
          return "utf-16be";
      };
      if (v instanceof Utf_16Le) {
          return "utf-16le";
      };
      throw new Error("Failed pattern match at Data.TextEncoder line 36, column 1 - line 36, column 39: " + [ v.constructor.name ]);
  });
  var encode = function (encoding) {
      return function (str) {
          return $foreign._encode(Data_Show.show(showEncoding)(encoding), str);
      };
  };
  var encodeUtf8 = encode(Utf8.value);
  exports["Utf8"] = Utf8;
  exports["Utf_16Be"] = Utf_16Be;
  exports["Utf_16Le"] = Utf_16Le;
  exports["encode"] = encode;
  exports["encodeUtf8"] = encodeUtf8;
  exports["showEncoding"] = showEncoding;
})(PS["Data.TextEncoder"] = PS["Data.TextEncoder"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Crypto_Scrypt = PS["Crypto.Scrypt"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_JCursor = PS["Data.Argonaut.JCursor"];
  var Data_ArrayBuffer_Base64 = PS["Data.ArrayBuffer.Base64"];
  var Data_ArrayBuffer_Extra = PS["Data.ArrayBuffer.Extra"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_String_Normalize = PS["Data.String.Normalize"];
  var Data_TextEncoder = PS["Data.TextEncoder"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Test_QuickCheck = PS["Test.QuickCheck"];
  var Test_QuickCheck_Arbitrary = PS["Test.QuickCheck.Arbitrary"];
  var Test_QuickCheck_Gen = PS["Test.QuickCheck.Gen"];        
  var HashedPassword = function (x) {
      return x;
  };
  var hashPassword = function (v) {
      return Data_Functor.map(Control_Monad_Aff.functorAff)(HashedPassword)(Crypto_Scrypt.scrypt({
          password: Data_TextEncoder.encodeUtf8(Data_String_Normalize.nfkc(v.password)),
          salt: v.salt,
          n: 32768,
          r: 8,
          p: 1,
          dkLen: 32,
          onProgress: function (v1) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
          }
      }));
  }; 
  var encodeJsonHashedPassword = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_ArrayBuffer_Base64.encodeBase64(v));
  });
  var decodeJsonHashedPassword = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json))(function (v) {
          var v1 = Data_ArrayBuffer_Base64.decodeBase64(v);
          if (v1 instanceof Data_Maybe.Nothing) {
              return Data_Argonaut_JCursor.fail(Data_Show.showString)("Not a HashedPassword");
          };
          if (v1 instanceof Data_Maybe.Just) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(v1.value0);
          };
          throw new Error("Failed pattern match at LocalCooking.Common.Password line 36, column 5 - line 38, column 40: " + [ v1.constructor.name ]);
      });
  });
  exports["HashedPassword"] = HashedPassword;
  exports["hashPassword"] = hashPassword;
  exports["encodeJsonHashedPassword"] = encodeJsonHashedPassword;
  exports["decodeJsonHashedPassword"] = decodeJsonHashedPassword;
})(PS["LocalCooking.Common.Password"] = PS["LocalCooking.Common.Password"] || {});
(function(exports) {
    "use strict";

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modifyRef'"] = function (ref) {
    return function (f) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.writeRef = function (ref) {
    return function (val) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var modifyRef = function (ref) {
      return function (f) {
          return $foreign["modifyRef'"](ref)(function (s) {
              return {
                  state: f(s),
                  value: Data_Unit.unit
              };
          });
      };
  };
  exports["modifyRef"] = modifyRef;
  exports["newRef"] = $foreign.newRef;
  exports["readRef"] = $foreign.readRef;
  exports["writeRef"] = $foreign.writeRef;
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Prelude = PS["Prelude"];        
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS["Control.Monad.Trans.Class"] = PS["Control.Monad.Trans.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
              })(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($98) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
      });
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, function ($102) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
      });
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Bound = (function () {
      function Bound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bound.create = function (value0) {
          return function (value1) {
              return new Bound(value0, value1);
          };
      };
      return Bound;
  })();
  var FreeT = (function () {
      function FreeT(value0) {
          this.value0 = value0;
      };
      FreeT.create = function (value0) {
          return new FreeT(value0);
      };
      return FreeT;
  })();
  var Bind = (function () {
      function Bind(value0) {
          this.value0 = value0;
      };
      Bind.create = function (value0) {
          return new Bind(value0);
      };
      return Bind;
  })();
  var monadTransFreeT = function (dictFunctor) {
      return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
          return function (ma) {
              return new FreeT(function (v) {
                  return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);
              });
          };
      });
  };
  var freeT = FreeT.create;
  var bound = function (m) {
      return function (f) {
          return new Bind(Data_Exists.mkExists(new Bound(m, f)));
      };
  };
  var functorFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  if (v instanceof FreeT) {
                      return new FreeT(function (v1) {
                          return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                      });
                  };
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function ($104) {
                              return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($104));
                          });
                      })(v.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans line 58, column 1 - line 58, column 71: " + [ f.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var monadFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeFreeT(dictFunctor)(dictMonad);
          }, function () {
              return bindFreeT(dictFunctor)(dictMonad);
          });
      };
  };
  var bindFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Bind.Bind(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (v) {
              return function (f) {
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function (x) {
                              return bound(function (v2) {
                                  return v1.value1(x);
                              })(f);
                          });
                      })(v.value0);
                  };
                  return bound(function (v1) {
                      return v;
                  })(f);
              };
          });
      };
  };
  var applyFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Apply.Apply(function () {
              return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());
          }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
      };
  };
  var applicativeFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Applicative.Applicative(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (a) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
              });
          });
      };
  };
  var resume = function (dictFunctor) {
      return function (dictMonadRec) {
          var go = function (v) {
              if (v instanceof FreeT) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
              };
              if (v instanceof Bind) {
                  return Data_Exists.runExists(function (v1) {
                      var v2 = v1.value0(Data_Unit.unit);
                      if (v2 instanceof FreeT) {
                          return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
                              };
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                      return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                                  })(v3.value0))));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 53, column 20 - line 55, column 67: " + [ v3.constructor.name ]);
                          });
                      };
                      if (v2 instanceof Bind) {
                          return Data_Exists.runExists(function (v3) {
                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
                              })));
                          })(v2.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 51, column 5 - line 56, column 98: " + [ v2.constructor.name ]);
                  })(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 48, column 3 - line 48, column 75: " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  var monadEffFreeT = function (dictFunctor) {
      return function (dictMonadEff) {
          return new Control_Monad_Eff_Class.MonadEff(function () {
              return monadFreeT(dictFunctor)(dictMonadEff.Monad0());
          }, function ($108) {
              return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($108));
          });
      };
  };
  exports["freeT"] = freeT;
  exports["resume"] = resume;
  exports["functorFreeT"] = functorFreeT;
  exports["applyFreeT"] = applyFreeT;
  exports["applicativeFreeT"] = applicativeFreeT;
  exports["bindFreeT"] = bindFreeT;
  exports["monadFreeT"] = monadFreeT;
  exports["monadTransFreeT"] = monadTransFreeT;
  exports["monadEffFreeT"] = monadEffFreeT;
})(PS["Control.Monad.Free.Trans"] = PS["Control.Monad.Free.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_List_Trans = PS["Control.Monad.List.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_RWS_Trans = PS["Control.Monad.RWS.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var MonadBase = function (Monad0, Monad1, liftBase) {
      this.Monad0 = Monad0;
      this.Monad1 = Monad1;
      this.liftBase = liftBase;
  };                                                   
  var liftBase = function (dict) {
      return dict.liftBase;
  };                                                   
  var freeTMonadBase = function (dictMonadBase) {
      return function (dictMonad) {
          return function (dictMonad1) {
              return function (dictFunctor) {
                  return new MonadBase(function () {
                      return dictMonad1;
                  }, function () {
                      return Control_Monad_Free_Trans.monadFreeT(dictFunctor)(dictMonad);
                  }, function (x) {
                      return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(dictFunctor))(dictMonad)(liftBase(dictMonadBase)(x));
                  });
              };
          };
      };
  };                                                   
  var effMonadBase = new MonadBase(function () {
      return Control_Monad_Eff.monadEff;
  }, function () {
      return Control_Monad_Eff.monadEff;
  }, Control_Category.id(Control_Category.categoryFn));
  var affMonadBase = new MonadBase(function () {
      return Control_Monad_Aff.monadAff;
  }, function () {
      return Control_Monad_Aff.monadAff;
  }, Control_Category.id(Control_Category.categoryFn));
  exports["liftBase"] = liftBase;
  exports["MonadBase"] = MonadBase;
  exports["affMonadBase"] = affMonadBase;
  exports["effMonadBase"] = effMonadBase;
  exports["freeTMonadBase"] = freeTMonadBase;
})(PS["Control.Monad.Base"] = PS["Control.Monad.Base"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Base = PS["Control.Monad.Base"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_RWS_Trans = PS["Control.Monad.RWS.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Compose = PS["Data.Functor.Compose"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var MonadBaseControl = function (MonadBase0, liftBaseWith, restoreM) {
      this.MonadBase0 = MonadBase0;
      this.liftBaseWith = liftBaseWith;
      this.restoreM = restoreM;
  };
  var runIdentity = function (v) {
      return v;
  };
  var restoreM = function (dict) {
      return dict.restoreM;
  };
  var liftBaseWith = function (dict) {
      return dict.liftBaseWith;
  };                                                           
  var effMonadBaseControl = new MonadBaseControl(function () {
      return Control_Monad_Base.effMonadBase;
  }, function (f) {
      return f(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Identity.Identity));
  }, Data_Functor.map(Control_Monad_Eff.functorEff)(runIdentity));
  exports["MonadBaseControl"] = MonadBaseControl;
  exports["liftBaseWith"] = liftBaseWith;
  exports["restoreM"] = restoreM;
  exports["effMonadBaseControl"] = effMonadBaseControl;
})(PS["Control.Monad.Trans.Control"] = PS["Control.Monad.Trans.Control"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Control = PS["Control.Monad.Trans.Control"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Compose = PS["Data.Functor.Compose"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var SingletonFunctor = function (Functor0, getSingleton) {
      this.Functor0 = Functor0;
      this.getSingleton = getSingleton;
  }; 
  var singletonFunctorIdentity = new SingletonFunctor(function () {
      return Data_Identity.functorIdentity;
  }, function (v) {
      return v;
  });
  var getSingleton = function (dict) {
      return dict.getSingleton;
  };
  var liftBaseWith_ = function (dictMonadBaseControl) {
      return function (dictSingletonFunctor) {
          return function (dictFunctor) {
              return function (f) {
                  return Control_Monad_Trans_Control.liftBaseWith(dictMonadBaseControl)(function (runInBase) {
                      return f(function ($28) {
                          return Data_Functor.map(dictFunctor)(getSingleton(dictSingletonFunctor))(runInBase($28));
                      });
                  });
              };
          };
      };
  };
  exports["getSingleton"] = getSingleton;
  exports["SingletonFunctor"] = SingletonFunctor;
  exports["liftBaseWith_"] = liftBaseWith_;
  exports["singletonFunctorIdentity"] = singletonFunctorIdentity;
})(PS["Data.Functor.Singleton"] = PS["Data.Functor.Singleton"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Queue_Scope = PS["Queue.Scope"];        
  var Queue = function (x) {
      return x;
  };
  var writeOnly = function (v) {
      return v;
  };
  var readOnly = function (v) {
      return v;
  };
  var putManyQueue = function (v) {
      return function (xs) {
          return function __do() {
              var v1 = Control_Monad_Eff_Ref.readRef(v)();
              if (v1 instanceof Data_Either.Left) {
                  return Control_Monad_Eff_Ref.writeRef(v)(new Data_Either.Left(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0)(xs)))();
              };
              if (v1 instanceof Data_Either.Right) {
                  return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v1.value0)(xs)();
              };
              throw new Error("Failed pattern match at Queue.One line 50, column 3 - line 52, column 30: " + [ v1.constructor.name ]);
          };
      };
  };
  var putQueue = function (q) {
      return function (x) {
          return putManyQueue(q)([ x ]);
      };
  };
  var onQueue = function (v) {
      return function (f) {
          return function __do() {
              var v1 = Control_Monad_Eff_Ref.readRef(v)();
              if (v1 instanceof Data_Either.Left) {
                  Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(f)(v1.value0)();
                  return Control_Monad_Eff_Ref.writeRef(v)(new Data_Either.Right(f))();
              };
              if (v1 instanceof Data_Either.Right) {
                  return Control_Monad_Eff_Ref.writeRef(v)(new Data_Either.Right(f))();
              };
              throw new Error("Failed pattern match at Queue.One line 58, column 3 - line 63, column 31: " + [ v1.constructor.name ]);
          };
      };
  };
  var newQueue = Data_Functor.map(Control_Monad_Eff.functorEff)(Queue)(Control_Monad_Eff_Ref.newRef(new Data_Either.Left([  ])));
  var delQueue = function (v) {
      return function __do() {
          var v1 = Control_Monad_Eff_Ref.readRef(v)();
          if (v1 instanceof Data_Either.Left) {
              return Data_Unit.unit;
          };
          if (v1 instanceof Data_Either.Right) {
              return Control_Monad_Eff_Ref.writeRef(v)(new Data_Either.Left([  ]))();
          };
          throw new Error("Failed pattern match at Queue.One line 110, column 3 - line 112, column 40: " + [ v1.constructor.name ]);
      };
  };
  var onceQueue = function (v) {
      return function (f$prime) {
          return function __do() {
              var v1 = Control_Monad_Eff_Ref.newRef(false)();
              var f = function (x) {
                  return function __do() {
                      var v2 = Control_Monad_Eff_Ref.readRef(v1)();
                      Control_Applicative.unless(Control_Monad_Eff.applicativeEff)(v2)(f$prime(x))();
                      Control_Monad_Eff_Ref.writeRef(v1)(true)();
                      return delQueue(v)();
                  };
              };
              var v2 = Control_Monad_Eff_Ref.readRef(v)();
              if (v2 instanceof Data_Either.Left) {
                  var v3 = Data_Array.uncons(v2.value0);
                  if (v3 instanceof Data_Maybe.Nothing) {
                      return Control_Monad_Eff_Ref.writeRef(v)(new Data_Either.Right(f))();
                  };
                  if (v3 instanceof Data_Maybe.Just) {
                      f(v3.value0.head)();
                      return Control_Monad_Eff_Ref.writeRef(v)(new Data_Either.Left(v3.value0.tail))();
                  };
                  throw new Error("Failed pattern match at Queue.One line 78, column 7 - line 83, column 37: " + [ v3.constructor.name ]);
              };
              if (v2 instanceof Data_Either.Right) {
                  return Control_Monad_Eff_Ref.writeRef(v)(new Data_Either.Right(f))();
              };
              throw new Error("Failed pattern match at Queue.One line 76, column 3 - line 85, column 31: " + [ v2.constructor.name ]);
          };
      };
  };
  var allowWriting = function (v) {
      return v;
  };
  var allowReading = function (v) {
      return v;
  };
  exports["Queue"] = Queue;
  exports["newQueue"] = newQueue;
  exports["readOnly"] = readOnly;
  exports["allowWriting"] = allowWriting;
  exports["writeOnly"] = writeOnly;
  exports["allowReading"] = allowReading;
  exports["putQueue"] = putQueue;
  exports["putManyQueue"] = putManyQueue;
  exports["onQueue"] = onQueue;
  exports["onceQueue"] = onceQueue;
  exports["delQueue"] = delQueue;
})(PS["Queue.One"] = PS["Queue.One"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Prelude = PS["Prelude"];
  var Queue_One = PS["Queue.One"];
  var newIOQueues = function __do() {
      var v = Data_Functor.map(Control_Monad_Eff.functorEff)(Queue_One.readOnly)(Queue_One.newQueue)();
      var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Queue_One.writeOnly)(Queue_One.newQueue)();
      return {
          input: v,
          output: v1
      };
  };
  var callAsync = function (v) {
      return function (x) {
          return Control_Monad_Aff.makeAff(function (resolve) {
              return function __do() {
                  Queue_One.onceQueue(Queue_One.allowReading(v.output))(function (y) {
                      return resolve(new Data_Either.Right(y));
                  })();
                  Queue_One.putQueue(Queue_One.allowWriting(v.input))(x)();
                  return Control_Monad_Aff.nonCanceler;
              };
          });
      };
  };
  exports["newIOQueues"] = newIOQueues;
  exports["callAsync"] = callAsync;
})(PS["Queue.One.Aff"] = PS["Queue.One.Aff"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Queue_Scope = PS["Queue.Scope"];
  var putManyIxQueue = function (v) {
      return function (k) {
          return function (xs) {
              return function __do() {
                  var v1 = Control_Monad_Eff_Ref.readRef(v.individual)();
                  var v2 = Data_StrMap.lookup(k)(v1);
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Control_Monad_Eff_Ref.writeRef(v.individual)(Data_StrMap.insert(k)(new Data_Either.Left(xs))(v1))();
                  };
                  if (v2 instanceof Data_Maybe.Just) {
                      if (v2.value0 instanceof Data_Either.Left) {
                          return Control_Monad_Eff_Ref.writeRef(v.individual)(Data_StrMap.insert(k)(new Data_Either.Left(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v2.value0.value0)(xs)))(v1))();
                      };
                      if (v2.value0 instanceof Data_Either.Right) {
                          return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v2.value0.value0)(xs)();
                      };
                      throw new Error("Failed pattern match at IxQueue line 60, column 17 - line 62, column 32: " + [ v2.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at IxQueue line 57, column 3 - line 62, column 32: " + [ v2.constructor.name ]);
              };
          };
      };
  };
  var putIxQueue = function (q) {
      return function (k) {
          return function (x) {
              return putManyIxQueue(q)(k)([ x ]);
          };
      };
  };
  var onIxQueue = function (v) {
      return function (k) {
          return function (f) {
              return function __do() {
                  var v1 = Control_Monad_Eff_Ref.readRef(v.broadcast)();
                  Control_Applicative.when(Control_Monad_Eff.applicativeEff)(Data_Array["null"](v1))(function __do() {
                      Control_Monad_Eff_Ref.writeRef(v.broadcast)([  ])();
                      return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(f)(v1)();
                  })();
                  var v2 = Control_Monad_Eff_Ref.readRef(v.individual)();
                  (function () {
                      var v3 = Data_StrMap.lookup(k)(v2);
                      if (v3 instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                      };
                      if (v3 instanceof Data_Maybe.Just) {
                          if (v3.value0 instanceof Data_Either.Left) {
                              return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(f)(v3.value0.value0);
                          };
                          if (v3.value0 instanceof Data_Either.Right) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                          };
                          throw new Error("Failed pattern match at IxQueue line 99, column 17 - line 101, column 27: " + [ v3.value0.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at IxQueue line 97, column 3 - line 101, column 27: " + [ v3.constructor.name ]);
                  })()();
                  return Control_Monad_Eff_Ref.writeRef(v.individual)(Data_StrMap.insert(k)(new Data_Either.Right(f))(v2))();
              };
          };
      };
  };
  var newIxQueue = function __do() {
      var v = Control_Monad_Eff_Ref.newRef(Data_StrMap.empty)();
      var v1 = Control_Monad_Eff_Ref.newRef([  ])();
      return {
          individual: v,
          broadcast: v1
      };
  };
  var delIxQueue = function (v) {
      return function (k) {
          return function __do() {
              var v1 = Control_Monad_Eff_Ref.readRef(v.individual)();
              var v2 = Data_StrMap.lookup(k)(v1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  return false;
              };
              if (v2 instanceof Data_Maybe.Just) {
                  if (v2.value0 instanceof Data_Either.Left) {
                      return false;
                  };
                  if (v2.value0 instanceof Data_Either.Right) {
                      Control_Monad_Eff_Ref.writeRef(v.individual)(Data_StrMap.insert(k)(new Data_Either.Left([  ]))(v1))();
                      return true;
                  };
                  throw new Error("Failed pattern match at IxQueue line 155, column 17 - line 159, column 18: " + [ v2.value0.constructor.name ]);
              };
              throw new Error("Failed pattern match at IxQueue line 153, column 3 - line 159, column 18: " + [ v2.constructor.name ]);
          };
      };
  };
  var onceIxQueue = function (q) {
      return function (k) {
          return function (f) {
              return function __do() {
                  var v = Control_Monad_Eff_Ref.newRef(false)();
                  return onIxQueue(q)(k)(function (x) {
                      return function __do() {
                          var v1 = Control_Monad_Eff_Ref.readRef(v)();
                          return Control_Applicative.unless(Control_Monad_Eff.applicativeEff)(v1)(function __do() {
                              f(x)();
                              Control_Monad_Eff_Ref.writeRef(v)(true)();
                              return Data_Functor.voidRight(Control_Monad_Eff.functorEff)(Data_Unit.unit)(delIxQueue(q)(k))();
                          })();
                      };
                  })();
              };
          };
      };
  };
  exports["newIxQueue"] = newIxQueue;
  exports["putIxQueue"] = putIxQueue;
  exports["putManyIxQueue"] = putManyIxQueue;
  exports["onIxQueue"] = onIxQueue;
  exports["onceIxQueue"] = onceIxQueue;
  exports["delIxQueue"] = delIxQueue;
})(PS["IxQueue"] = PS["IxQueue"] || {});
(function(exports) {
    'use strict';

  // module Data.UUID

  var mkV4UUID = null;
  exports.getUUIDImpl = function () {
    if (mkV4UUID === null) mkV4UUID = require('uuid').v4;
    return mkV4UUID();
  };
})(PS["Data.UUID"] = PS["Data.UUID"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.UUID"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var UUID = function (x) {
      return x;
  };
  var showUUID = new Data_Show.Show(function (v) {
      return v;
  });
  var genUUID = function __do() {
      var $21 = $foreign.getUUIDImpl();
      return UUID($21);
  };
  exports["genUUID"] = genUUID;
  exports["showUUID"] = showUUID;
})(PS["Data.UUID"] = PS["Data.UUID"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_JCursor = PS["Data.Argonaut.JCursor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var SessionID = function (x) {
      return x;
  };
  var showSessionID = new Data_Show.Show(function (v) {
      return Data_Show.show(Data_UUID.showUUID)(v);
  });
  var encodeJsonSessionID = new Data_Argonaut_Encode_Class.EncodeJson(function (x) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Show.show(showSessionID)(x));
  });
  exports["SessionID"] = SessionID;
  exports["showSessionID"] = showSessionID;
  exports["encodeJsonSessionID"] = encodeJsonSessionID;
})(PS["Sparrow.Session"] = PS["Sparrow.Session"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var ParseError = (function () {
      function ParseError(value0) {
          this.value0 = value0;
      };
      ParseError.create = function (value0) {
          return new ParseError(value0);
      };
      return ParseError;
  })();
  var unParser = function (v) {
      return v;
  };
  var $$try = function (v) {
      return function (v1) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v2) {
              var $34 = {};
              for (var $35 in v2) {
                  if ({}.hasOwnProperty.call(v2, $35)) {
                      $34[$35] = v2[$35];
                  };
              };
              $34.pos = v1.pos;
              return $34;
          })(v(v1));
      };
  };
  var showParseError = new Data_Show.Show(function (v) {
      return v.value0;
  });
  var runParser = function (v) {
      return function (s) {
          return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(function (v1) {
              return v1.error;
          })(function (v1) {
              return v1.result;
          })(v({
              str: s,
              pos: 0
          }));
      };
  }; 
  var functorParser = new Data_Functor.Functor(function (f) {
      return function (v) {
          return function ($83) {
              return Data_Functor.map(Data_Either.functorEither)(function (v1) {
                  return {
                      result: f(v1.result),
                      suffix: v1.suffix
                  };
              })(v($83));
          };
      };
  });
  var fail = function (msg) {
      return function (v) {
          return new Data_Either.Left({
              pos: v.pos,
              error: new ParseError(msg)
          });
      };
  }; 
  var applyParser = new Control_Apply.Apply(function () {
      return functorParser;
  }, function (v) {
      return function (v1) {
          return function (s) {
              return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(v1(v2.suffix))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          result: v2.result(v3.result),
                          suffix: v3.suffix
                      });
                  });
              });
          };
      };
  });
  var bindParser = new Control_Bind.Bind(function () {
      return applyParser;
  }, function (v) {
      return function (f) {
          return function (s) {
              return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v1) {
                  return unParser(f(v1.result))(v1.suffix);
              });
          };
      };
  });
  var applicativeParser = new Control_Applicative.Applicative(function () {
      return applyParser;
  }, function (a) {
      return function (s) {
          return new Data_Either.Right({
              result: a,
              suffix: s
          });
      };
  });
  var monadParser = new Control_Monad.Monad(function () {
      return applicativeParser;
  }, function () {
      return bindParser;
  });
  var monadRecParser = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadParser;
  }, function (f) {
      return function (a) {
          var split = function (v) {
              if (v.result instanceof Control_Monad_Rec_Class.Loop) {
                  return new Control_Monad_Rec_Class.Loop({
                      state: v.result.value0,
                      str: v.suffix
                  });
              };
              if (v.result instanceof Control_Monad_Rec_Class.Done) {
                  return new Control_Monad_Rec_Class.Done({
                      result: v.result.value0,
                      suffix: v.suffix
                  });
              };
              throw new Error("Failed pattern match at Text.Parsing.StringParser line 88, column 7 - line 88, column 70: " + [ v.constructor.name ]);
          };
          return function (str) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEither)(function (st) {
                  return Data_Functor.map(Data_Either.functorEither)(split)(unParser(f(st.state))(st.str));
              })({
                  state: a,
                  str: str
              });
          };
      };
  });
  var altParser = new Control_Alt.Alt(function () {
      return functorParser;
  }, function (v) {
      return function (v1) {
          return function (s) {
              var v2 = v(s);
              if (v2 instanceof Data_Either.Left) {
                  if (s.pos === v2.value0.pos) {
                      return v1(s);
                  };
                  if (Data_Boolean.otherwise) {
                      return new Data_Either.Left({
                          error: v2.value0.error,
                          pos: v2.value0.pos
                      });
                  };
              };
              return v2;
          };
      };
  });
  var plusParser = new Control_Plus.Plus(function () {
      return altParser;
  }, fail("No alternative"));
  var alternativeParser = new Control_Alternative.Alternative(function () {
      return applicativeParser;
  }, function () {
      return plusParser;
  });
  exports["ParseError"] = ParseError;
  exports["unParser"] = unParser;
  exports["runParser"] = runParser;
  exports["fail"] = fail;
  exports["try"] = $$try;
  exports["showParseError"] = showParseError;
  exports["functorParser"] = functorParser;
  exports["applyParser"] = applyParser;
  exports["applicativeParser"] = applicativeParser;
  exports["altParser"] = altParser;
  exports["plusParser"] = plusParser;
  exports["alternativeParser"] = alternativeParser;
  exports["bindParser"] = bindParser;
  exports["monadParser"] = monadParser;
  exports["monadRecParser"] = monadRecParser;
})(PS["Text.Parsing.StringParser"] = PS["Text.Parsing.StringParser"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];        
  var withError = function (p) {
      return function (msg) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Text_Parsing_StringParser.fail(msg));
      };
  };
  var optional = function (p) {
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
      }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit));
  };
  var option = function (a) {
      return function (p) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
      };
  };
  var optionMaybe = function (p) {
      return option(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Maybe.Just.create)(p));
  };
  var many = Data_List.manyRec(Text_Parsing_StringParser.monadRecParser)(Text_Parsing_StringParser.alternativeParser);
  var many1 = function (p) {
      return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_Types.Cons.create)(p))(many(p));
  };
  var sepBy1 = function (p) {
      return function (sep) {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(sep)(p)))(function (v1) {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_List_Types.Cons(v, v1));
              });
          });
      };
  };
  var sepBy = function (p) {
      return function (sep) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(sepBy1(p)(sep))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value));
      };
  };
  exports["many"] = many;
  exports["many1"] = many1;
  exports["withError"] = withError;
  exports["option"] = option;
  exports["optional"] = optional;
  exports["optionMaybe"] = optionMaybe;
  exports["sepBy"] = sepBy;
  exports["sepBy1"] = sepBy1;
})(PS["Text.Parsing.StringParser.Combinators"] = PS["Text.Parsing.StringParser.Combinators"] || {});
(function(exports) {
    "use strict";

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Char"];
  exports["fromCharCode"] = $foreign.fromCharCode;
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
    "use strict";

  exports["showRegex'"] = function (r) {
    return "" + r;
  };

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports.source = function (r) {
    return r.source;
  };

  exports["flags'"] = function (r) {
    return {
      multiline: r.multiline,
      ignoreCase: r.ignoreCase,
      global: r.global,
      sticky: !!r.sticky,
      unicode: !!r.unicode
    };
  };

  exports.test = function (r) {
    return function (s) {
      var lastIndex = r.lastIndex;
      var result = r.test(s);
      r.lastIndex = lastIndex;
      return result;
    };
  };

  exports._match = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var m = s.match(r);
          if (m == null) {
            return nothing;
          } else {
            for (var i = 0; i < m.length; i++) {
              m[i] = m[i] == null ? nothing : just(m[i]);
            }
            return just(m);
          }
        };
      };
    };
  };

  exports._search = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var result = s.search(r);
          return result === -1 ? nothing : just(result);
        };
      };
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];        
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var unicode = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: true
  });
  var sticky = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: true,
      unicode: false
  });
  var semigroupRegexFlags = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return new RegexFlags({
              global: v.value0.global || v1.value0.global,
              ignoreCase: v.value0.ignoreCase || v1.value0.ignoreCase,
              multiline: v.value0.multiline || v1.value0.multiline,
              sticky: v.value0.sticky || v1.value0.sticky,
              unicode: v.value0.unicode || v1.value0.unicode
          });
      };
  });
  var noFlags = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  var multiline = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: true,
      sticky: false,
      unicode: false
  });         
  var ignoreCase = new RegexFlags({
      global: false,
      ignoreCase: true,
      multiline: false,
      sticky: false,
      unicode: false
  });
  var global = new RegexFlags({
      global: true,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  exports["RegexFlags"] = RegexFlags;
  exports["noFlags"] = noFlags;
  exports["global"] = global;
  exports["ignoreCase"] = ignoreCase;
  exports["multiline"] = multiline;
  exports["sticky"] = sticky;
  exports["unicode"] = unicode;
  exports["semigroupRegexFlags"] = semigroupRegexFlags;
})(PS["Data.String.Regex.Flags"] = PS["Data.String.Regex.Flags"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Prelude = PS["Prelude"];        
  var showRegex = new Data_Show.Show($foreign["showRegex'"]);
  var search = $foreign._search(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  var match = $foreign._match(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var flags = function ($8) {
      return Data_String_Regex_Flags.RegexFlags.create($foreign["flags'"]($8));
  };
  exports["regex"] = regex;
  exports["flags"] = flags;
  exports["renderFlags"] = renderFlags;
  exports["match"] = match;
  exports["search"] = search;
  exports["showRegex"] = showRegex;
  exports["source"] = $foreign.source;
  exports["test"] = $foreign.test;
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Char = PS["Data.Char"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];        
  var string = function (nt) {
      return function (s) {
          if (Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String["indexOf'"](nt)(s.pos)(s.str))(new Data_Maybe.Just(s.pos))) {
              return new Data_Either.Right({
                  result: nt,
                  suffix: {
                      str: s.str,
                      pos: s.pos + Data_String.length(nt) | 0
                  }
              });
          };
          return new Data_Either.Left({
              pos: s.pos,
              error: new Text_Parsing_StringParser.ParseError("Expected '" + (nt + "'."))
          });
      };
  };
  var regex = function (pat) {
      var pattern = (function () {
          var v = Data_String.stripPrefix("^")(pat);
          if (v instanceof Data_Maybe.Nothing) {
              return "^" + pat;
          };
          return pat;
      })();
      var matchRegex = function (r) {
          return function (v) {
              var remainder = Data_String.drop(v.pos)(v.str);
              var v1 = Data_Array.uncons(Data_Maybe.fromMaybe([  ])(Data_String_Regex.match(r)(remainder)));
              if (v1 instanceof Data_Maybe.Just && v1.value0.head instanceof Data_Maybe.Just) {
                  return new Data_Either.Right({
                      result: v1.value0.head.value0,
                      suffix: {
                          str: v.str,
                          pos: v.pos + Data_String.length(v1.value0.head.value0) | 0
                      }
                  });
              };
              return new Data_Either.Left({
                  pos: v.pos,
                  error: new Text_Parsing_StringParser.ParseError("no match")
              });
          };
      };
      var v = Data_String_Regex.regex(pattern)(Data_String_Regex_Flags.noFlags);
      if (v instanceof Data_Either.Left) {
          return Text_Parsing_StringParser.fail("Text.Parsing.StringParser.String.regex': illegal regex " + pat);
      };
      if (v instanceof Data_Either.Right) {
          return matchRegex(v.value0);
      };
      throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 121, column 3 - line 125, column 19: " + [ v.constructor.name ]);
  };
  var eof = function (s) {
      if (s.pos < Data_String.length(s.str)) {
          return new Data_Either.Left({
              pos: s.pos,
              error: new Text_Parsing_StringParser.ParseError("Expected EOF")
          });
      };
      return new Data_Either.Right({
          result: Data_Unit.unit,
          suffix: s
      });
  };
  var anyChar = function (v) {
      var v1 = Data_String.charAt(v.pos)(v.str);
      if (v1 instanceof Data_Maybe.Just) {
          return new Data_Either.Right({
              result: v1.value0,
              suffix: {
                  str: v.str,
                  pos: v.pos + 1 | 0
              }
          });
      };
      if (v1 instanceof Data_Maybe.Nothing) {
          return new Data_Either.Left({
              pos: v.pos,
              error: new Text_Parsing_StringParser.ParseError("Unexpected EOF")
          });
      };
      throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 45, column 3 - line 47, column 64: " + [ v1.constructor.name ]);
  };  
  var satisfy = function (f) {
      return Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
          var $43 = f(v);
          if ($43) {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
          };
          return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(v) + " did not satisfy predicate"));
      }));
  };
  var $$char = function (c) {
      return Text_Parsing_StringParser_Combinators.withError(satisfy(function (v) {
          return v === c;
      }))("Could not match character " + Data_Show.show(Data_Show.showChar)(c));
  };
  exports["eof"] = eof;
  exports["anyChar"] = anyChar;
  exports["string"] = string;
  exports["satisfy"] = satisfy;
  exports["char"] = $$char;
  exports["regex"] = regex;
})(PS["Text.Parsing.StringParser.String"] = PS["Text.Parsing.StringParser.String"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Argonaut_JCursor = PS["Data.Argonaut.JCursor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Sparrow_Session = PS["Sparrow.Session"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];
  var Topic = function (x) {
      return x;
  };
  var WSUnsubscribe = (function () {
      function WSUnsubscribe(value0) {
          this.value0 = value0;
      };
      WSUnsubscribe.create = function (value0) {
          return new WSUnsubscribe(value0);
      };
      return WSUnsubscribe;
  })();
  var WSIncoming = (function () {
      function WSIncoming(value0) {
          this.value0 = value0;
      };
      WSIncoming.create = function (value0) {
          return new WSIncoming(value0);
      };
      return WSIncoming;
  })();
  var WSTopicsSubscribed = (function () {
      function WSTopicsSubscribed(value0) {
          this.value0 = value0;
      };
      WSTopicsSubscribed.create = function (value0) {
          return new WSTopicsSubscribed(value0);
      };
      return WSTopicsSubscribed;
  })();
  var WSTopicAdded = (function () {
      function WSTopicAdded(value0) {
          this.value0 = value0;
      };
      WSTopicAdded.create = function (value0) {
          return new WSTopicAdded(value0);
      };
      return WSTopicAdded;
  })();
  var WSTopicRemoved = (function () {
      function WSTopicRemoved(value0) {
          this.value0 = value0;
      };
      WSTopicRemoved.create = function (value0) {
          return new WSTopicRemoved(value0);
      };
      return WSTopicRemoved;
  })();
  var WSTopicRejected = (function () {
      function WSTopicRejected(value0) {
          this.value0 = value0;
      };
      WSTopicRejected.create = function (value0) {
          return new WSTopicRejected(value0);
      };
      return WSTopicRejected;
  })();
  var WSDecodingError = (function () {
      function WSDecodingError(value0) {
          this.value0 = value0;
      };
      WSDecodingError.create = function (value0) {
          return new WSDecodingError(value0);
      };
      return WSDecodingError;
  })();
  var WSOutgoing = (function () {
      function WSOutgoing(value0) {
          this.value0 = value0;
      };
      WSOutgoing.create = function (value0) {
          return new WSOutgoing(value0);
      };
      return WSOutgoing;
  })();                                                                                  
  var genericTopic = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Sparrow.Types.Topic" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Topic))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericString))(v["value1"][0](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Sparrow.Types.Topic", [ {
          sigConstructor: "Sparrow.Types.Topic",
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericString))(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      return new Data_Generic.SProd("Sparrow.Types.Topic", [ function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericString))(v);
      } ]);
  });
  var showTopic = new Data_Show.Show(Data_Generic.gShow(genericTopic));          
  var eqTopic = new Data_Eq.Eq(Data_Generic.gEq(genericTopic));
  var ordTopic = new Data_Ord.Ord(function () {
      return eqTopic;
  }, Data_Generic.gCompare(genericTopic));
  var encodeJsonWithSessionID = function (dictEncodeJson) {
      return new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
          return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Sparrow_Session.encodeJsonSessionID)("sessionID")(v.sessionID))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(dictEncodeJson)("content")(v.content))(Data_Argonaut_Core.jsonEmptyObject));
      });
  }; 
  var encodeJsonTopic = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_String.joinWith("/")(v));
  });
  var encodeJsonWSIncoming = function (dictEncodeJson) {
      return new Data_Argonaut_Encode_Class.EncodeJson(function (x) {
          if (x instanceof WSUnsubscribe) {
              return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(encodeJsonTopic)("unsubscribe")(x.value0))(Data_Argonaut_Core.jsonEmptyObject);
          };
          if (x instanceof WSIncoming) {
              return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(dictEncodeJson)("content")(x.value0))(Data_Argonaut_Core.jsonEmptyObject);
          };
          throw new Error("Failed pattern match at Sparrow.Types line 203, column 18 - line 205, column 54: " + [ x.constructor.name ]);
      });
  };
  var encodeJsonWithTopic = function (dictEncodeJson) {
      return new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
          return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(encodeJsonTopic)("topic")(v.topic))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(dictEncodeJson)("content")(v.content))(Data_Argonaut_Core.jsonEmptyObject));
      });
  }; 
  var decodeJsonTopic = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      var breaker = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray))(Text_Parsing_StringParser_Combinators.sepBy(Text_Parsing_StringParser_String.regex("[^\\/]*"))(Text_Parsing_StringParser_String["char"]("/")));
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json))(function (v) {
          var v1 = Text_Parsing_StringParser.runParser(breaker)(v);
          if (v1 instanceof Data_Either.Left) {
              return Data_Argonaut_JCursor.fail(Text_Parsing_StringParser.showParseError)(v1.value0);
          };
          if (v1 instanceof Data_Either.Right) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(v1.value0);
          };
          throw new Error("Failed pattern match at Sparrow.Types line 57, column 5 - line 59, column 32: " + [ v1.constructor.name ]);
      });
  });
  var decodeJsonWSOutgoing = function (dictDecodeJson) {
      return new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
              var subs = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(v)("subs"))(function (v1) {
                  var reject = Data_Functor.map(Data_Either.functorEither)(WSTopicRejected.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTopic)(v1)("reject"));
                  var init = Data_Functor.map(Data_Either.functorEither)(WSTopicsSubscribed.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonTopic))(v1)("init"));
                  var del = Data_Functor.map(Data_Either.functorEither)(WSTopicRemoved.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTopic)(v1)("del"));
                  var add = Data_Functor.map(Data_Either.functorEither)(WSTopicAdded.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTopic)(v1)("add"));
                  return Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(init)(add))(del))(reject);
              });
              var error$prime = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(v)("error"))(function (v1) {
                  return Data_Functor.map(Data_Either.functorEither)(WSDecodingError.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v1)("decoding"));
              });
              var content = Data_Functor.map(Data_Either.functorEither)(WSOutgoing.create)(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("content"));
              return Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(content)(error$prime))(subs);
          });
      });
  };
  var decodeJsonWithTopic = function (dictDecodeJson) {
      return new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTopic)(v)("topic"))(function (v1) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("content"))(function (v2) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          topic: v1,
                          content: v2
                      });
                  });
              });
          });
      });
  };
  exports["Topic"] = Topic;
  exports["WSUnsubscribe"] = WSUnsubscribe;
  exports["WSIncoming"] = WSIncoming;
  exports["WSTopicsSubscribed"] = WSTopicsSubscribed;
  exports["WSTopicAdded"] = WSTopicAdded;
  exports["WSTopicRemoved"] = WSTopicRemoved;
  exports["WSTopicRejected"] = WSTopicRejected;
  exports["WSDecodingError"] = WSDecodingError;
  exports["WSOutgoing"] = WSOutgoing;
  exports["genericTopic"] = genericTopic;
  exports["showTopic"] = showTopic;
  exports["eqTopic"] = eqTopic;
  exports["ordTopic"] = ordTopic;
  exports["decodeJsonTopic"] = decodeJsonTopic;
  exports["encodeJsonTopic"] = encodeJsonTopic;
  exports["encodeJsonWithSessionID"] = encodeJsonWithSessionID;
  exports["encodeJsonWithTopic"] = encodeJsonWithTopic;
  exports["decodeJsonWithTopic"] = decodeJsonWithTopic;
  exports["encodeJsonWSIncoming"] = encodeJsonWSIncoming;
  exports["decodeJsonWSOutgoing"] = decodeJsonWSOutgoing;
})(PS["Sparrow.Types"] = PS["Sparrow.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Base = PS["Control.Monad.Base"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Reader = PS["Control.Monad.Reader"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Trans_Control = PS["Control.Monad.Trans.Control"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Singleton = PS["Data.Functor.Singleton"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var IxQueue = PS["IxQueue"];
  var Prelude = PS["Prelude"];
  var Queue = PS["Queue"];
  var Sparrow_Types = PS["Sparrow.Types"];        
  var SparrowClientT = function (x) {
      return x;
  };
  var runSparrowClientT = function (env) {
      return function (v) {
          return v(env);
      };
  };
  var removeSubscription = function (dictMonadBase) {
      return function (v) {
          return function (topic) {
              return Control_Monad_Base.liftBase(dictMonadBase)(function __do() {
                  Data_Functor["void"](Control_Monad_Eff.functorEff)(IxQueue.delIxQueue(v.rejectQueue)(Data_Show.show(Sparrow_Types.showTopic)(topic)))();
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(IxQueue.delIxQueue(v.receiveQueue)(Data_Show.show(Sparrow_Types.showTopic)(topic)))();
              });
          };
      };
  };
  var registerSubscription = function (dictMonadBaseControl) {
      return function (dictSingletonFunctor) {
          return function (v) {
              return function (topic) {
                  return function (onDeltaOut) {
                      return function (onReject) {
                          return Data_Functor_Singleton.liftBaseWith_(dictMonadBaseControl)(dictSingletonFunctor)(Control_Monad_Eff.functorEff)(function (runM) {
                              return function __do() {
                                  IxQueue.onIxQueue(v.receiveQueue)(Data_Show.show(Sparrow_Types.showTopic)(topic))(function ($49) {
                                      return runM(onDeltaOut($49));
                                  })();
                                  return IxQueue.onceIxQueue(v.rejectQueue)(Data_Show.show(Sparrow_Types.showTopic)(topic))(function (v1) {
                                      return function __do() {
                                          Data_Functor["void"](Control_Monad_Eff.functorEff)(IxQueue.delIxQueue(v.receiveQueue)(Data_Show.show(Sparrow_Types.showTopic)(topic)))();
                                          return runM(onReject)();
                                      };
                                  })();
                              };
                          });
                      };
                  };
              };
          };
      };
  };
  var monadTransSparrowClientT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (x) {
          return function (v) {
              return x;
          };
      };
  });
  var functorSparrowClientT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (r) {
                  return Data_Functor.map(dictFunctor)(f)(v(r));
              };
          };
      });
  };
  var callReject = function (dictMonadBase) {
      return function (v) {
          return function (topic) {
              return Control_Monad_Base.liftBase(dictMonadBase)(IxQueue.putIxQueue(v.rejectQueue)(Data_Show.show(Sparrow_Types.showTopic)(topic))(Data_Unit.unit));
          };
      };
  };
  var callOnReceive = function (dictMonadBase) {
      return function (v) {
          return function (topic) {
              return function (v1) {
                  return Control_Monad_Base.liftBase(dictMonadBase)(IxQueue.putIxQueue(v.receiveQueue)(Data_Show.show(Sparrow_Types.showTopic)(topic))(v1));
              };
          };
      };
  };
  var ask$prime = function (dictApplicative) {
      return SparrowClientT(function (r) {
          return Control_Applicative.pure(dictApplicative)(r);
      });
  };
  var applySparrowClientT = function (dictApply) {
      return new Control_Apply.Apply(function () {
          return functorSparrowClientT(dictApply.Functor0());
      }, function (v) {
          return function (v1) {
              return function (r) {
                  return Control_Apply.apply(dictApply)(v(r))(v1(r));
              };
          };
      });
  };
  var bindSparrowClientT = function (dictBind) {
      return new Control_Bind.Bind(function () {
          return applySparrowClientT(dictBind.Apply0());
      }, function (v) {
          return function (f) {
              return SparrowClientT(function (r) {
                  return Control_Bind.bind(dictBind)(v(r))(function ($50) {
                      return runSparrowClientT(r)(f($50));
                  });
              });
          };
      });
  };
  exports["registerSubscription"] = registerSubscription;
  exports["removeSubscription"] = removeSubscription;
  exports["callReject"] = callReject;
  exports["callOnReceive"] = callOnReceive;
  exports["SparrowClientT"] = SparrowClientT;
  exports["runSparrowClientT"] = runSparrowClientT;
  exports["ask'"] = ask$prime;
  exports["functorSparrowClientT"] = functorSparrowClientT;
  exports["applySparrowClientT"] = applySparrowClientT;
  exports["bindSparrowClientT"] = bindSparrowClientT;
  exports["monadTransSparrowClientT"] = monadTransSparrowClientT;
})(PS["Sparrow.Client.Types"] = PS["Sparrow.Client.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Trans_Control = PS["Control.Monad.Trans.Control"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Singleton = PS["Data.Functor.Singleton"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Queue = PS["Queue"];
  var Queue_One = PS["Queue.One"];
  var Queue_One_Aff = PS["Queue.One.Aff"];
  var Sparrow_Client_Types = PS["Sparrow.Client.Types"];
  var Sparrow_Types = PS["Sparrow.Types"];        
  var sparrowClientQueues = function (dictMonadEff) {
      return function (dictMonadBaseControl) {
          return function (dictSingletonFunctor) {
              return function (v) {
                  return function (register) {
                      return Data_Functor_Singleton.liftBaseWith_(dictMonadBaseControl)(dictSingletonFunctor)(Control_Monad_Eff.functorEff)(function (runM) {
                          return Queue_One.onQueue(v.init.input)(function (initIn) {
                              return runM(register({
                                  initIn: initIn,
                                  onReject: Control_Monad_Eff_Class.liftEff(dictMonadEff)(function __do() {
                                      Queue_One.delQueue(Queue_One.allowReading(v.deltaIn))();
                                      Queue_One.delQueue(Queue_One.allowReading(v.unsubscribe))();
                                      return Queue_One.putQueue(Queue_One.allowWriting(v.onReject))(Data_Unit.unit)();
                                  }),
                                  receive: function (v1) {
                                      return function (deltaOut) {
                                          return Control_Monad_Eff_Class.liftEff(dictMonadEff)(Queue_One.putQueue(Queue_One.allowWriting(v.deltaOut))(deltaOut));
                                      };
                                  }
                              })(function (mReturn) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())((function () {
                                      if (mReturn instanceof Data_Maybe.Nothing) {
                                          return Control_Monad_Eff_Class.liftEff(dictMonadEff)(Queue_One.putQueue(v.init.output)(Data_Maybe.Nothing.value));
                                      };
                                      if (mReturn instanceof Data_Maybe.Just) {
                                          return Control_Monad_Eff_Class.liftEff(dictMonadEff)(function __do() {
                                              Queue_One.putQueue(v.init.output)(new Data_Maybe.Just(mReturn.value0.initOut))();
                                              Queue_One.onQueue(Queue_One.allowReading(v.deltaIn))(function ($29) {
                                                  return runM(mReturn.value0.sendCurrent($29));
                                              })();
                                              return Queue_One.onQueue(Queue_One.allowReading(v.unsubscribe))(function (v1) {
                                                  return runM(mReturn.value0.unsubscribe);
                                              })();
                                          });
                                      };
                                      throw new Error("Failed pattern match at Sparrow.Client.Queue line 66, column 11 - line 72, column 85: " + [ mReturn.constructor.name ]);
                                  })())(function () {
                                      return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Maybe.Nothing.value);
                                  });
                              }));
                          });
                      });
                  };
              };
          };
      };
  };
  var newSparrowClientQueues = function __do() {
      var v = Queue_One_Aff.newIOQueues();
      var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Queue_One.writeOnly)(Queue_One.newQueue)();
      var v2 = Data_Functor.map(Control_Monad_Eff.functorEff)(Queue_One.readOnly)(Queue_One.newQueue)();
      var v3 = Data_Functor.map(Control_Monad_Eff.functorEff)(Queue_One.writeOnly)(Queue_One.newQueue)();
      var v4 = Data_Functor.map(Control_Monad_Eff.functorEff)(Queue_One.readOnly)(Queue_One.newQueue)();
      return {
          init: v,
          deltaIn: v1,
          deltaOut: v2,
          onReject: v4,
          unsubscribe: v3
      };
  };
  exports["newSparrowClientQueues"] = newSparrowClientQueues;
  exports["sparrowClientQueues"] = sparrowClientQueues;
})(PS["Sparrow.Client.Queue"] = PS["Sparrow.Client.Queue"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Char = PS["Data.Char"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];
  var takeWhile1 = function (f) {
      return Data_Functor.map(Text_Parsing_StringParser.functorParser)(function ($31) {
          return Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_Functor.map(Data_List_Types.functorList)(Data_String.singleton)($31));
      })(Text_Parsing_StringParser_Combinators.many1(Text_Parsing_StringParser_String.satisfy(f)));
  };
  var skipMany1 = function (p) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(p))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(skipMany(p)))(function () {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
          });
      });
  };
  var skipMany = function (p) {
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(skipMany1(p))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit));
  };
  var skipWhile1 = function (x) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String.satisfy(x)))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(skipMany(Text_Parsing_StringParser_String.satisfy(x))))(function () {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
          });
      });
  };
  var nullChar = Text_Parsing_StringParser_String["char"](Data_Char.fromCharCode(0));
  var localPart = function (v) {
      return v.localPart;
  };
  var lf = Text_Parsing_StringParser_String["char"]("\x0a");
  var isWsp = function (x) {
      return x === " " || x === "\x09";
  };
  var whiteSpace = Text_Parsing_StringParser_String.satisfy(isWsp);
  var whiteSpace1 = skipWhile1(isWsp);
  var isAlphaNum = function (x) {
      var isDigit = x >= "0" && x <= "9";
      var isAlpha_ascii = x >= "a" && x <= "z" || x >= "A" && x <= "Z";
      return isDigit || isAlpha_ascii;
  };
  var inClassRange = function (start) {
      return function (end) {
          return function (c) {
              return c >= start && c <= end;
          };
      };
  };
  var isVchar = inClassRange(Data_Char.fromCharCode(33))(Data_Char.fromCharCode(126));
  var vchar = Text_Parsing_StringParser_String.satisfy(isVchar);
  var inClass = function (string) {
      return function ($$char) {
          return Data_String.contains(Data_String.Pattern(Data_String.singleton($$char)))(string);
      };
  };
  var isObsNoWsCtl = function (c) {
      return inClassRange(Data_Char.fromCharCode(1))(Data_Char.fromCharCode(8))(c) || (inClassRange(Data_Char.fromCharCode(14))(Data_Char.fromCharCode(31))(c) || inClass("\x0b\x0c\x7f")(c));
  };
  var isCommentText = function (x) {
      return inClassRange(Data_Char.fromCharCode(33))(Data_Char.fromCharCode(39))(x) || (inClassRange(Data_Char.fromCharCode(42))(Data_Char.fromCharCode(91))(x) || (inClassRange(Data_Char.fromCharCode(93))(Data_Char.fromCharCode(126))(x) || isObsNoWsCtl(x)));
  };
  var isDomainText = function (x) {
      return inClassRange(Data_Char.fromCharCode(33))(Data_Char.fromCharCode(90))(x) || (inClassRange(Data_Char.fromCharCode(94))(Data_Char.fromCharCode(126))(x) || isObsNoWsCtl(x));
  };
  var obsNoWsCtl = Text_Parsing_StringParser_String.satisfy(isObsNoWsCtl);
  var isQuotedText = function (x) {
      return inClass(Data_String.fromCharArray(Control_Applicative.pure(Control_Applicative.applicativeArray)(Data_Char.fromCharCode(33))))(x) || (inClassRange(Data_Char.fromCharCode(35))(Data_Char.fromCharCode(91))(x) || (inClassRange(Data_Char.fromCharCode(93))(Data_Char.fromCharCode(126))(x) || isObsNoWsCtl(x)));
  };                                                                         
  var domainPart = function (v) {
      return v.domainPart;
  };
  var toString = function (email) {
      return localPart(email) + ("@" + domainPart(email));
  };                                                  
  var cr = Text_Parsing_StringParser_String["char"]("\x0d");
  var crlf = Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(cr)(lf));
  var whiteSpaceOrNewLine = (function () {
      var p2 = skipMany1(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(crlf)(whiteSpace1));
      var p1 = Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(whiteSpace1)(Text_Parsing_StringParser_Combinators.optional(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(crlf)(whiteSpace1)));
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p1)(p2);
  })();
  var quotedPair = (function () {
      var what = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("\\")))(function () {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(vchar)(whiteSpace))(lf))(cr))(obsNoWsCtl))(nullChar);
      });
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(what)(function (v) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)("\\" + Data_String.singleton(v));
      });
  })();
  var quotedContent = Control_Alt.alt(Text_Parsing_StringParser.altParser)(takeWhile1(isQuotedText))(quotedPair);
  var quotedString = (function () {
      var what = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("\"")))(function () {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine))(quotedContent)))(function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("\"")))(function () {
                      return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
                  });
              });
          });
      });
      return Data_Functor.map(Text_Parsing_StringParser.functorParser)(function (x) {
          return "\"" + (Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidString)(x) + "\"");
      })(what);
  })();
  var comment = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("(")))(function () {
      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(skipMany(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(skipWhile1(isCommentText))(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(quotedPair)))(comment))(whiteSpaceOrNewLine)))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"](")")))(function () {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
          });
      });
  });
  var commentOrWhiteSpace = skipMany(Control_Alt.alt(Text_Parsing_StringParser.altParser)(comment)(whiteSpaceOrNewLine));
  var domainLiteral = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace))(function () {
      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("[")))(function () {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine))(takeWhile1(isDomainText))))(function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String["char"]("]")))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace))(function () {
                          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)("[" + (Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidString)(v) + "]"));
                      });
                  });
              });
          });
      });
  });
  var atom = (function () {
      var isAtomText = function (x) {
          return isAlphaNum(x) || inClass("!#$%&'*+/=?^_`{|}~-")(x);
      };
      return takeWhile1(isAtomText);
  })();
  var dottedAtoms = (function () {
      var inner2 = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace)))(function () {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(atom)(quotedString))(function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace)))(function () {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
              });
          });
      });
      var inner1 = Text_Parsing_StringParser_Combinators.sepBy1(inner2)(Text_Parsing_StringParser_String["char"]("."));
      return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Foldable.intercalate(Data_List_Types.foldableList)(Data_Monoid.monoidString)("."))(inner1);
  })();
  var domain = Control_Alt.alt(Text_Parsing_StringParser.altParser)(dottedAtoms)(domainLiteral);
  var local = dottedAtoms;
  var addrSpec = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(local)(function (v) {
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String["char"]("@"))(function (v1) {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(domain)(function (v2) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.eof)(function (v3) {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)({
                      localPart: v,
                      domainPart: v2
                  });
              });
          });
      });
  });
  exports["addrSpec"] = addrSpec;
  exports["domainPart"] = domainPart;
  exports["localPart"] = localPart;
  exports["toString"] = toString;
})(PS["Text.Email.Parser"] = PS["Text.Email.Parser"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var Text_Email_Parser = PS["Text.Email.Parser"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];        
  var runEmailParser = function (s) {
      return Text_Parsing_StringParser.runParser(Text_Email_Parser.addrSpec)(s);
  };
  var validate = function ($8) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Show.show(Text_Parsing_StringParser.showParseError))(runEmailParser($8));
  };
  var emailAddress = function (emailString) {
      var v = validate(emailString);
      if (v instanceof Data_Either.Left) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_Either.Right) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Text.Email.Validate line 22, column 5 - line 24, column 35: " + [ v.constructor.name ]);
  };
  exports["validate"] = validate;
  exports["emailAddress"] = emailAddress;
  exports["runEmailParser"] = runEmailParser;
})(PS["Text.Email.Validate"] = PS["Text.Email.Validate"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Argonaut_JCursor = PS["Data.Argonaut.JCursor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var LocalCooking_Common_AuthToken = PS["LocalCooking.Common.AuthToken"];
  var LocalCooking_Common_Password = PS["LocalCooking.Common.Password"];
  var Prelude = PS["Prelude"];
  var Sparrow_Client_Queue = PS["Sparrow.Client.Queue"];
  var Text_Email_Parser = PS["Text.Email.Parser"];
  var Text_Email_Validate = PS["Text.Email.Validate"];        
  var AuthTokenInitInLogin = (function () {
      function AuthTokenInitInLogin(value0) {
          this.value0 = value0;
      };
      AuthTokenInitInLogin.create = function (value0) {
          return new AuthTokenInitInLogin(value0);
      };
      return AuthTokenInitInLogin;
  })();
  var AuthTokenInitInExists = (function () {
      function AuthTokenInitInExists(value0) {
          this.value0 = value0;
      };
      AuthTokenInitInExists.create = function (value0) {
          return new AuthTokenInitInExists(value0);
      };
      return AuthTokenInitInExists;
  })();
  var BadPassword = (function () {
      function BadPassword() {

      };
      BadPassword.value = new BadPassword();
      return BadPassword;
  })();
  var EmailDoesntExist = (function () {
      function EmailDoesntExist() {

      };
      EmailDoesntExist.value = new EmailDoesntExist();
      return EmailDoesntExist;
  })();
  var AuthTokenInitOutFailure = (function () {
      function AuthTokenInitOutFailure(value0) {
          this.value0 = value0;
      };
      AuthTokenInitOutFailure.create = function (value0) {
          return new AuthTokenInitOutFailure(value0);
      };
      return AuthTokenInitOutFailure;
  })();
  var AuthTokenInitOutSuccess = (function () {
      function AuthTokenInitOutSuccess(value0) {
          this.value0 = value0;
      };
      AuthTokenInitOutSuccess.create = function (value0) {
          return new AuthTokenInitOutSuccess(value0);
      };
      return AuthTokenInitOutSuccess;
  })();
  var AuthTokenDeltaOutNew = (function () {
      function AuthTokenDeltaOutNew(value0) {
          this.value0 = value0;
      };
      AuthTokenDeltaOutNew.create = function (value0) {
          return new AuthTokenDeltaOutNew(value0);
      };
      return AuthTokenDeltaOutNew;
  })();
  var AuthTokenDeltaOutRevoked = (function () {
      function AuthTokenDeltaOutRevoked() {

      };
      AuthTokenDeltaOutRevoked.value = new AuthTokenDeltaOutRevoked();
      return AuthTokenDeltaOutRevoked;
  })();
  var encodeJsonAuthTokenInitIn = new Data_Argonaut_Encode_Class.EncodeJson(function (x) {
      if (x instanceof AuthTokenInitInLogin) {
          return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("email")(Text_Email_Parser.toString(x.value0.email)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(LocalCooking_Common_Password.encodeJsonHashedPassword)("password")(x.value0.password))(Data_Argonaut_Core.jsonEmptyObject));
      };
      if (x instanceof AuthTokenInitInExists) {
          return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(LocalCooking_Common_AuthToken.encodeJsonAuthToken)("exists")(x.value0.exists))(Data_Argonaut_Core.jsonEmptyObject);
      };
      throw new Error("Failed pattern match at Client.Dependencies.AuthToken line 26, column 18 - line 33, column 25: " + [ x.constructor.name ]);
  });
  var encodeJsonAuthTokenDeltaIn = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)("logout");
  });
  var decodeJsonAuthTokenFailure = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json))(function (v) {
          if (v === "bad-password") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(BadPassword.value);
          };
          if (v === "no-email") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(EmailDoesntExist.value);
          };
          if (Data_Boolean.otherwise) {
              return Data_Argonaut_JCursor.fail(Data_Show.showString)("Not a AuthTokenFailure");
          };
          throw new Error("Failed pattern match at Client.Dependencies.AuthToken line 43, column 5 - line 49, column 1: " + [ Data_Unit.unit.constructor.name ]);
      });
  });
  var decodeJsonAuthTokenInitOut = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          var success = Data_Functor.map(Data_Either.functorEither)(AuthTokenInitOutSuccess.create)(Data_Argonaut_Decode_Combinators.getField(LocalCooking_Common_AuthToken.decodeJsonAuthToken)(v)("success"));
          var failure = Data_Functor.map(Data_Either.functorEither)(AuthTokenInitOutFailure.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonAuthTokenFailure)(v)("failure"));
          return Control_Alt.alt(Data_Either.altEither)(success)(failure);
      });
  });
  var decodeJsonAuthTokenDeltaOut = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      var str = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json))(function (v) {
          if (v === "revoked") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(AuthTokenDeltaOutRevoked.value);
          };
          if (Data_Boolean.otherwise) {
              return Data_Argonaut_JCursor.fail(Data_Show.showString)("Not a AuthTokenDeltaOut");
          };
          throw new Error("Failed pattern match at Client.Dependencies.AuthToken line 79, column 11 - line 82, column 5: " + [ Data_Unit.unit.constructor.name ]);
      });
      var obj = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Data_Functor.map(Data_Either.functorEither)(AuthTokenDeltaOutNew.create)(Data_Argonaut_Decode_Combinators.getField(LocalCooking_Common_AuthToken.decodeJsonAuthToken)(v)("new"));
      });
      return Control_Alt.alt(Data_Either.altEither)(obj)(str);
  });
  exports["AuthTokenInitInLogin"] = AuthTokenInitInLogin;
  exports["AuthTokenInitInExists"] = AuthTokenInitInExists;
  exports["BadPassword"] = BadPassword;
  exports["EmailDoesntExist"] = EmailDoesntExist;
  exports["AuthTokenInitOutFailure"] = AuthTokenInitOutFailure;
  exports["AuthTokenInitOutSuccess"] = AuthTokenInitOutSuccess;
  exports["AuthTokenDeltaOutNew"] = AuthTokenDeltaOutNew;
  exports["AuthTokenDeltaOutRevoked"] = AuthTokenDeltaOutRevoked;
  exports["encodeJsonAuthTokenInitIn"] = encodeJsonAuthTokenInitIn;
  exports["decodeJsonAuthTokenFailure"] = decodeJsonAuthTokenFailure;
  exports["decodeJsonAuthTokenInitOut"] = decodeJsonAuthTokenInitOut;
  exports["encodeJsonAuthTokenDeltaIn"] = encodeJsonAuthTokenDeltaIn;
  exports["decodeJsonAuthTokenDeltaOut"] = decodeJsonAuthTokenDeltaOut;
})(PS["Client.Dependencies.AuthToken"] = PS["Client.Dependencies.AuthToken"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                                                         
  var encodeJsonReCaptchaResponse = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v);
  });
  exports["encodeJsonReCaptchaResponse"] = encodeJsonReCaptchaResponse;
})(PS["Google.ReCaptcha"] = PS["Google.ReCaptcha"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Argonaut_JCursor = PS["Data.Argonaut.JCursor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Google_ReCaptcha = PS["Google.ReCaptcha"];
  var LocalCooking_Common_Password = PS["LocalCooking.Common.Password"];
  var Prelude = PS["Prelude"];
  var Sparrow_Client_Queue = PS["Sparrow.Client.Queue"];
  var Text_Email_Parser = PS["Text.Email.Parser"];
  var Text_Email_Validate = PS["Text.Email.Validate"];
  var EmailExists = (function () {
      function EmailExists() {

      };
      EmailExists.value = new EmailExists();
      return EmailExists;
  })();
  var RegisterInitOutEmailSent = (function () {
      function RegisterInitOutEmailSent() {

      };
      RegisterInitOutEmailSent.value = new RegisterInitOutEmailSent();
      return RegisterInitOutEmailSent;
  })();
  var RegisterInitOutBadCaptcha = (function () {
      function RegisterInitOutBadCaptcha() {

      };
      RegisterInitOutBadCaptcha.value = new RegisterInitOutBadCaptcha();
      return RegisterInitOutBadCaptcha;
  })();
  var RegisterInitOutDBError = (function () {
      function RegisterInitOutDBError(value0) {
          this.value0 = value0;
      };
      RegisterInitOutDBError.create = function (value0) {
          return new RegisterInitOutDBError(value0);
      };
      return RegisterInitOutDBError;
  })();
  var genericRegisterFailure = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Client.Dependencies.Register.EmailExists" && v.value1.length === 0)) {
          return new Data_Maybe.Just(EmailExists.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Client.Dependencies.Register.RegisterFailure", [ {
          sigConstructor: "Client.Dependencies.Register.EmailExists",
          sigValues: [  ]
      } ]);
  }, function (v) {
      return new Data_Generic.SProd("Client.Dependencies.Register.EmailExists", [  ]);
  });
  var genericRegisterInitOut = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Client.Dependencies.Register.RegisterInitOutEmailSent" && v.value1.length === 0)) {
          return new Data_Maybe.Just(RegisterInitOutEmailSent.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Client.Dependencies.Register.RegisterInitOutBadCaptcha" && v.value1.length === 0)) {
          return new Data_Maybe.Just(RegisterInitOutBadCaptcha.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Client.Dependencies.Register.RegisterInitOutDBError" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(RegisterInitOutDBError.create))(Data_Generic.fromSpine(genericRegisterFailure)(v["value1"][0](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Client.Dependencies.Register.RegisterInitOut", [ {
          sigConstructor: "Client.Dependencies.Register.RegisterInitOutEmailSent",
          sigValues: [  ]
      }, {
          sigConstructor: "Client.Dependencies.Register.RegisterInitOutBadCaptcha",
          sigValues: [  ]
      }, {
          sigConstructor: "Client.Dependencies.Register.RegisterInitOutDBError",
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(genericRegisterFailure)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      if (v instanceof RegisterInitOutEmailSent) {
          return new Data_Generic.SProd("Client.Dependencies.Register.RegisterInitOutEmailSent", [  ]);
      };
      if (v instanceof RegisterInitOutBadCaptcha) {
          return new Data_Generic.SProd("Client.Dependencies.Register.RegisterInitOutBadCaptcha", [  ]);
      };
      if (v instanceof RegisterInitOutDBError) {
          return new Data_Generic.SProd("Client.Dependencies.Register.RegisterInitOutDBError", [ function ($dollarq) {
              return Data_Generic.toSpine(genericRegisterFailure)(v.value0);
          } ]);
      };
      throw new Error("Failed pattern match at Client.Dependencies.Register line 50, column 8 - line 50, column 66: " + [ v.constructor.name ]);
  });
  var showRegisterInitOut = new Data_Show.Show(Data_Generic.gShow(genericRegisterInitOut));
  var encodeJsonRegisterInitIn = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("email")(Text_Email_Parser.toString(v.email)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(LocalCooking_Common_Password.encodeJsonHashedPassword)("password")(v.password))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Google_ReCaptcha.encodeJsonReCaptchaResponse)("reCaptcha")(v.reCaptcha))(Data_Argonaut_Core.jsonEmptyObject)));
  });
  var encodeJsonRegisterDeltaIn = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)("");
  });
  var decodeJsonRegisterFailure = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json))(function (v) {
          if (v === "email-exists") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(EmailExists.value);
          };
          if (Data_Boolean.otherwise) {
              return Data_Argonaut_JCursor.fail(Data_Show.showString)("Not a RegisterFailure");
          };
          throw new Error("Failed pattern match at Client.Dependencies.Register line 40, column 5 - line 45, column 1: " + [ Data_Unit.unit.constructor.name ]);
      });
  });
  var decodeJsonRegisterInitOut = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      var str = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json))(function (v) {
          if (v === "email-sent") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(RegisterInitOutEmailSent.value);
          };
          if (v === "bad-captcha") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(RegisterInitOutBadCaptcha.value);
          };
          if (Data_Boolean.otherwise) {
              return Data_Argonaut_JCursor.fail(Data_Show.showString)("Not a RegisterInitOut");
          };
          throw new Error("Failed pattern match at Client.Dependencies.Register line 59, column 11 - line 63, column 9: " + [ Data_Unit.unit.constructor.name ]);
      });
      var obj = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Data_Functor.map(Data_Either.functorEither)(RegisterInitOutDBError.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonRegisterFailure)(v)("db"));
      });
      return Control_Alt.alt(Data_Either.altEither)(str)(obj);
  });
  var decodeJsonRegisterDeltaOut = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Data_Argonaut_JCursor.fail(Data_Show.showString)("Not a RegisterDeltaOut");
  });
  exports["EmailExists"] = EmailExists;
  exports["RegisterInitOutEmailSent"] = RegisterInitOutEmailSent;
  exports["RegisterInitOutBadCaptcha"] = RegisterInitOutBadCaptcha;
  exports["RegisterInitOutDBError"] = RegisterInitOutDBError;
  exports["encodeJsonRegisterInitIn"] = encodeJsonRegisterInitIn;
  exports["genericRegisterFailure"] = genericRegisterFailure;
  exports["decodeJsonRegisterFailure"] = decodeJsonRegisterFailure;
  exports["genericRegisterInitOut"] = genericRegisterInitOut;
  exports["showRegisterInitOut"] = showRegisterInitOut;
  exports["decodeJsonRegisterInitOut"] = decodeJsonRegisterInitOut;
  exports["encodeJsonRegisterDeltaIn"] = encodeJsonRegisterDeltaIn;
  exports["decodeJsonRegisterDeltaOut"] = decodeJsonRegisterDeltaOut;
})(PS["Client.Dependencies.Register"] = PS["Client.Dependencies.Register"] || {});
(function(exports) {
    "use strict";
  var modules =require("material-ui/styles"); 

  var MuiThemeProvider = modules.MuiThemeProvider;
  var createMuiTheme = modules.createMuiTheme;


  exports.muiThemeProviderImpl = MuiThemeProvider;

  exports.createMuiThemeImpl = createMuiTheme;
})(PS["MaterialUI.MuiThemeProvider"] = PS["MaterialUI.MuiThemeProvider"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Record.Class"];
  var Subrow = {};
  var srInst = function (dictUnion) {
      return Subrow;
  };
  exports["Subrow"] = Subrow;
  exports["srInst"] = srInst;
})(PS["Data.Record.Class"] = PS["Data.Record.Class"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react");
  var createReactClass =require("create-react-class"); 

  function getProps(this_) {
    return function(){
      return this_.props;
    };
  }
  exports.getProps = getProps;

  function getRefs(this_) {
    return function(){
      return this_.refs;
    };
  }                         

  function childrenToArray(children) {
    var result = [];

    React.Children.forEach(children, function(child){
      result.push(child);
    });

    return result;
  }                                         

  function getChildren(this_) {
    return function(){
      var children = this_.props.children;

      var result = childrenToArray(children);

      return result;
    };
  }
  exports.getChildren = getChildren;

  function readRefImpl (this_) {
    return function(name) {
      return function() {
        return this_[name];
      }
    }
  }                                 

  function writeRef(this_) {
    return function(name) {
      return function(node) {
        return function() {
          this_[name] = node;
          return {};
        }
      }
    }
  }                           

  function writeState(this_) {
    return function(state){
      return function(){
        this_.setState({
          state: state
        });
        return state;
      };
    };
  }                               

  function writeStateWithCallback(this_, cb) {
    return function(state){
      return function(cb){
        return function() {
          this_.setState({
            state: state
          }, cb);
          return state;
        };
      };
    };
  }
  exports.writeStateWithCallback = writeStateWithCallback;

  function readState(this_) {
    return function(){
      return this_.state.state;
    };
  }
  exports.readState = readState;

  function transformState(this_){
    return function(update){
      return function(){
        this_.setState(function(old, props){
          return {state: update(old.state)};
        });
      };
    };
  }                                       

  function createClass(toNullable, spec) {
    var didCatch = toNullable(spec.componentDidCatch)

    var result = {
      displayName: spec.displayName,
      render: function(){
        return spec.render(this)();
      },
      getInitialState: function(){
        return {
          state: spec.getInitialState(this)()
        };
      },
      componentWillMount: function(){
        return spec.componentWillMount(this)();
      },
      componentDidMount: function(){
        return spec.componentDidMount(this)();
      },
      componentDidCatch: didCatch
        ? function(error, info) {return didCatch(this)(error)(info)(); }
        : undefined,
      componentWillReceiveProps: function(nextProps){
        return spec.componentWillReceiveProps(this)(nextProps)();
      },
      shouldComponentUpdate: function(nextProps, nextState){
        return spec.shouldComponentUpdate(this)(nextProps)(nextState.state)();
      },
      componentWillUpdate: function(nextProps, nextState){
        return spec.componentWillUpdate(this)(nextProps)(nextState.state)();
      },
      componentDidUpdate: function(prevProps, prevState){
        return spec.componentDidUpdate(this)(prevProps)(prevState.state)();
      },
      componentWillUnmount: function(){
        return spec.componentWillUnmount(this)();
      }
    };

    return createReactClass(result);
  }
  exports["createClass'"] = createClass;

  function capitalize(s) {
    if (!s)
      return s;
    return s.charAt(0).toUpperCase() + s.slice(1);
  };

  function createClassStateless(dict) {
    return function (f) {
      if (!f.displayName)
        f.displayName = capitalize(f.name);
      return f;
    };
  };
  exports.createClassStateless = createClassStateless;

  function forceUpdateCbImpl(this_, cb) {
    this_.forceUpdate(function() {
      return cb();
    });
    return {};
  };                                            

  function handle(f) {
    return function(e){
      return f(e)();
    };
  };                      

  function createElement(class_) {
    return function(props){
      return function(children){
        return React.createElement.apply(React, [class_, props].concat(children));
      };
    };
  }
  exports.createElement = createElement;
  exports.createElementTagName = createElement;

  function createElementDynamic(class_) {
    return function(props) {
      return function(children){
        return React.createElement(class_, props, children);
      };
    };
  };
  exports.createElementDynamic = createElementDynamic;
  exports.createElementTagNameDynamic = createElementDynamic;

  function createFactory(class_) {
    return React.createFactory(class_);
  }
  exports.createFactory = createFactory;

  function preventDefault(event) {
    return function() {
      event.preventDefault();
    };
  };                                      

  function stopPropagation(event) {
    return function() {
      event.stopPropagation();
    };
  };
})(PS["React"] = PS["React"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["React"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var ReactRender = {};               
  var spec$prime = function (dictReactRender) {
      return function (getInitialState) {
          return function (renderFn) {
              return {
                  render: renderFn,
                  displayName: "",
                  getInitialState: getInitialState,
                  componentWillMount: function (v) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                  },
                  componentDidMount: function (v) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                  },
                  componentDidCatch: Data_Maybe.Nothing.value,
                  componentWillReceiveProps: function (v) {
                      return function (v1) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                      };
                  },
                  shouldComponentUpdate: function (v) {
                      return function (v1) {
                          return function (v2) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(true);
                          };
                      };
                  },
                  componentWillUpdate: function (v) {
                      return function (v1) {
                          return function (v2) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                          };
                      };
                  },
                  componentDidUpdate: function (v) {
                      return function (v1) {
                          return function (v2) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                          };
                      };
                  },
                  componentWillUnmount: function (v) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                  }
              };
          };
      };
  };
  var spec = function (dictReactRender) {
      return function (state) {
          return spec$prime(dictReactRender)(function (v) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(state);
          });
      };
  };
  var reactElementReactRender = ReactRender;
  var createClass = function (spc) {
      return $foreign["createClass'"](Data_Nullable.toNullable, spc);
  };
  var arrayReactRender = ReactRender;
  exports["ReactRender"] = ReactRender;
  exports["spec"] = spec;
  exports["createClass"] = createClass;
  exports["arrayReactRender"] = arrayReactRender;
  exports["reactElementReactRender"] = reactElementReactRender;
  exports["getProps"] = $foreign.getProps;
  exports["getChildren"] = $foreign.getChildren;
  exports["readState"] = $foreign.readState;
  exports["writeStateWithCallback"] = $foreign.writeStateWithCallback;
  exports["createClassStateless"] = $foreign.createClassStateless;
  exports["createElement"] = $foreign.createElement;
  exports["createElementTagName"] = $foreign.createElementTagName;
  exports["createElementTagNameDynamic"] = $foreign.createElementTagNameDynamic;
  exports["createFactory"] = $foreign.createFactory;
})(PS["React"] = PS["React"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.MuiThemeProvider"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var muiThemeProvider = function (props) {
      return function ($2) {
          return React.createElement($foreign.muiThemeProviderImpl)(props)($2);
      };
  };
  var createMuiTheme = function (dictSubrow) {
      return function (dictSubrow1) {
          return $foreign.createMuiThemeImpl;
      };
  };
  exports["muiThemeProvider"] = muiThemeProvider;
  exports["createMuiTheme"] = createMuiTheme;
})(PS["MaterialUI.MuiThemeProvider"] = PS["MaterialUI.MuiThemeProvider"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var MaterialUI_MuiThemeProvider = PS["MaterialUI.MuiThemeProvider"];        
  var palette = {
      primary: {
          light: "#ff5f52",
          main: "#c62828",
          dark: "#8e0000",
          contrastText: "#ffffff"
      },
      secondary: {
          light: "#ffe97d",
          main: "#ffb74d",
          dark: "#c88719",
          contrastText: "#000000"
      }
  };
  exports["palette"] = palette;
})(PS["Colors"] = PS["Colors"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];                                                           
  var runExcept = function ($0) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };
  exports["runExcept"] = runExcept;
})(PS["Control.Monad.Except"] = PS["Control.Monad.Except"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var CoTransform = (function () {
      function CoTransform(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CoTransform.create = function (value0) {
          return function (value1) {
              return new CoTransform(value0, value1);
          };
      };
      return CoTransform;
  })();
  var bifunctorCoTransform = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new CoTransform(f(v.value0), function ($188) {
                  return g(v.value1($188));
              });
          };
      };
  });
  var functorCoTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorCoTransform));
  var cotransform = function (dictMonad) {
      return function (o) {
          return Control_Monad_Free_Trans.freeT(function (v) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(new CoTransform(o, Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorCoTransform)(dictMonad)))));
          });
      };
  };
  exports["CoTransform"] = CoTransform;
  exports["cotransform"] = cotransform;
  exports["bifunctorCoTransform"] = bifunctorCoTransform;
  exports["functorCoTransform"] = functorCoTransform;
})(PS["Control.Coroutine"] = PS["Control.Coroutine"] || {});
(function(exports) {
    "use strict";


  exports.registerShim = function registerShim () {
    return require('setimmediate');
  };
})(PS["Control.Execution.Immediate"] = PS["Control.Execution.Immediate"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Execution.Immediate"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Prelude = PS["Prelude"];
  exports["registerShim"] = $foreign.registerShim;
})(PS["Control.Execution.Immediate"] = PS["Control.Execution.Immediate"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  var fromEffFnAff = function (v) {
      return Control_Monad_Aff.makeAff(function (k) {
          return function __do() {
              var v1 = Control_Monad_Eff_Uncurried.runEffFn2(v)(Control_Monad_Eff_Uncurried.mkEffFn1(function ($4) {
                  return k(Data_Either.Left.create($4));
              }))(Control_Monad_Eff_Uncurried.mkEffFn1(function ($5) {
                  return k(Data_Either.Right.create($5));
              }))();
              return function (e) {
                  return Control_Monad_Aff.makeAff(function (k2) {
                      return function __do() {
                          Control_Monad_Eff_Uncurried.runEffFn3(v1)(e)(Control_Monad_Eff_Uncurried.mkEffFn1(function ($6) {
                              return k2(Data_Either.Left.create($6));
                          }))(Control_Monad_Eff_Uncurried.mkEffFn1(function ($7) {
                              return k2(Data_Either.Right.create($7));
                          }))();
                          return Control_Monad_Aff.nonCanceler;
                      };
                  });
              };
          };
      });
  };
  exports["fromEffFnAff"] = fromEffFnAff;
})(PS["Control.Monad.Aff.Compat"] = PS["Control.Monad.Aff.Compat"] || {});
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.warn = function (s) {
    return function () {
      console.warn(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["log"] = $foreign.log;
  exports["warn"] = $foreign.warn;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
    "use strict";

  exports.now = function () {
    return Date.now();
  };
})(PS["Control.Monad.Eff.Now"] = PS["Control.Monad.Eff.Now"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.DateTime.Instant"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Date = PS["Data.Date"];
  var Data_Date_Component = PS["Data.Date.Component"];
  var Data_DateTime = PS["Data.DateTime"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Generic = PS["Data.Generic"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Time = PS["Data.Time"];
  var Data_Time_Component = PS["Data.Time.Component"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var unInstant = function (v) {
      return v;
  };
  exports["unInstant"] = unInstant;
})(PS["Data.DateTime.Instant"] = PS["Data.DateTime.Instant"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Now"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_DateTime = PS["Data.DateTime"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_DateTime_Locale = PS["Data.DateTime.Locale"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Prelude = PS["Prelude"];
  exports["now"] = $foreign.now;
})(PS["Control.Monad.Eff.Now"] = PS["Control.Monad.Eff.Now"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.setTimeout = function (ms) {
    return function (fn) {
      return function () {
        return setTimeout(fn, ms);
      };
    };
  };

  exports.clearTimeout = function (id) {
    return function () {
      clearTimeout(id);
    };
  };

  exports.setInterval = function (ms) {
    return function (fn) {
      return function () {
        return setInterval(fn, ms);
      };
    };
  };

  exports.clearInterval = function (id) {
    return function () {
      clearInterval(id);
    };
  };
})(PS["Control.Monad.Eff.Timer"] = PS["Control.Monad.Eff.Timer"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Timer"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  exports["setTimeout"] = $foreign.setTimeout;
  exports["clearTimeout"] = $foreign.clearTimeout;
  exports["setInterval"] = $foreign.setInterval;
  exports["clearInterval"] = $foreign.clearInterval;
})(PS["Control.Monad.Eff.Timer"] = PS["Control.Monad.Eff.Timer"] || {});
(function(exports) {
    "use strict";

  exports.eventListener = function (fn) {
    return function (event) {
      return fn(event)();
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            target.addEventListener(type, listener, useCapture);
            return {};
          };
        };
      };
    };
  };
})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.Event.EventTarget"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var DOM = PS["DOM"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var Prelude = PS["Prelude"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
    "use strict";

  exports.toForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var singleton = function ($160) {
      return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($160));
  };
  exports["singleton"] = singleton;
})(PS["Data.List.NonEmpty"] = PS["Data.List.NonEmpty"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];        
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var JSONError = (function () {
      function JSONError(value0) {
          this.value0 = value0;
      };
      JSONError.create = function (value0) {
          return new JSONError(value0);
      };
      return JSONError;
  })();
  var showForeignError = new Data_Show.Show(function (v) {
      if (v instanceof ForeignError) {
          return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
      };
      if (v instanceof ErrorAtIndex) {
          return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof ErrorAtProperty) {
          return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof JSONError) {
          return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
      };
      if (v instanceof TypeMismatch) {
          return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
      };
      throw new Error("Failed pattern match at Data.Foreign line 64, column 1 - line 64, column 47: " + [ v.constructor.name ]);
  });
  var fail = function ($121) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($121));
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Data.Foreign line 104, column 1 - line 104, column 55: " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readString = unsafeReadTagged("String");
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["JSONError"] = JSONError;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["fail"] = fail;
  exports["showForeignError"] = showForeignError;
  exports["toForeign"] = $foreign.toForeign;
  exports["unsafeFromForeign"] = $foreign.unsafeFromForeign;
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;     
  var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
  exports["windowToEventTarget"] = windowToEventTarget;
  exports["htmlElementToElement"] = htmlElementToElement;
})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
    "use strict";

  exports._body = function (doc) {
    return function () {
      return doc.body;
    };
  };
})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML.Document"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML_Document_ReadyState = PS["DOM.HTML.Document.ReadyState"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var body = function ($3) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._body($3));
  };
  exports["body"] = body;
})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
(function(exports) {
    "use strict";
  exports.pushState = function(a) {
    return function(docTitle) {
      return function(url) {
        return function(history) {
          return function() {
            return history.pushState(a, docTitle, url);
          };
        };
      };
    };
  };
  exports.replaceState = function(a) {
    return function(docTitle) {
      return function(url) {
        return function(history) {
          return function() {
            return history.replaceState(a, docTitle, url);
          };
        };
      };
    };
  };
})(PS["DOM.HTML.History"] = PS["DOM.HTML.History"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML.History"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];        
  var URL = function (x) {
      return x;
  };
  var DocumentTitle = function (x) {
      return x;
  };
  exports["DocumentTitle"] = DocumentTitle;
  exports["URL"] = URL;
  exports["pushState"] = $foreign.pushState;
  exports["replaceState"] = $foreign.replaceState;
})(PS["DOM.HTML.History"] = PS["DOM.HTML.History"] || {});
(function(exports) {
    "use strict";

  // ----------------------------------------------------------------------------

  exports.hostname = function (location) {
    return function () {
      return location.hostname;
    };
  };

  // ----------------------------------------------------------------------------

  exports.href = function (location) {
    return function () {
      return location.href;
    };
  };

  // ----------------------------------------------------------------------------

  exports.port = function (location) {
    return function () {
      return location.port;
    };
  };

  // ----------------------------------------------------------------------------

  exports.protocol = function (location) {
    return function () {
      return location.protocol;
    };
  };
})(PS["DOM.HTML.Location"] = PS["DOM.HTML.Location"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML.Location"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Prelude = PS["Prelude"];
  exports["hostname"] = $foreign.hostname;
  exports["href"] = $foreign.href;
  exports["port"] = $foreign.port;
  exports["protocol"] = $foreign.protocol;
})(PS["DOM.HTML.Location"] = PS["DOM.HTML.Location"] || {});
(function(exports) {
    "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };

  exports.history = function(window) {
    return function() {
      return window.history;
    };
  };

  exports.innerWidth = function (window) {
    return function () {
      return window.innerWidth;
    };
  };

  exports.innerHeight = function (window) {
    return function () {
      return window.innerHeight;
    };
  };
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_WebStorage_Types = PS["DOM.WebStorage.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
  exports["history"] = $foreign.history;
  exports["innerWidth"] = $foreign.innerWidth;
  exports["innerHeight"] = $foreign.innerHeight;
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
    "use strict";

  exports.onPopStateImpl = function onPopStateImpl(f,w) {
    w.onpopstate = function onPopStateImplHandler(event) {
      f(event.state);
    };
  };
})(PS["DOM.HTML.Window.Extra"] = PS["DOM.HTML.Window.Extra"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["DOM.HTML.Window.Extra"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_StrMap = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  exports["onPopStateImpl"] = $foreign.onPopStateImpl;
})(PS["DOM.HTML.Window.Extra"] = PS["DOM.HTML.Window.Extra"] || {});
(function(exports) {
    "use strict";

  exports._jsonParser = function (fail, succ, s) {
    try {
      return succ(JSON.parse(s));
    }
    catch (e) {
      return fail(e.message);
    }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];        
  var jsonParser = function (j) {
      return $foreign._jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Maybe = PS["Data.Maybe"];        
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var Product = (function () {
      function Product(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Product.create = function (value0) {
          return function (value1) {
              return new Product(value0, value1);
          };
      };
      return Product;
  })();
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Product"] = Product;
})(PS["Data.Generic.Rep"] = PS["Data.Generic.Rep"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS["Data.Symbol"] = PS["Data.Symbol"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Prelude = PS["Prelude"];        
  var GenericShow = function (genericShow$prime) {
      this["genericShow'"] = genericShow$prime;
  };
  var GenericShowArgs = function (genericShowArgs) {
      this.genericShowArgs = genericShowArgs;
  }; 
  var genericShowArgsArgument = function (dictShow) {
      return new GenericShowArgs(function (v) {
          return [ Data_Show.show(dictShow)(v) ];
      });
  };
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowArgsProduct = function (dictGenericShowArgs) {
      return function (dictGenericShowArgs1) {
          return new GenericShowArgs(function (v) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowArgs(dictGenericShowArgs)(v.value0))(genericShowArgs(dictGenericShowArgs1)(v.value1));
          });
      };
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return new GenericShow(function (v) {
              var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var v1 = genericShowArgs(dictGenericShowArgs)(v);
              if (v1.length === 0) {
                  return ctor;
              };
              return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
          });
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  }; 
  var genericShowSum = function (dictGenericShow) {
      return function (dictGenericShow1) {
          return new GenericShow(function (v) {
              if (v instanceof Data_Generic_Rep.Inl) {
                  return genericShow$prime(dictGenericShow)(v.value0);
              };
              if (v instanceof Data_Generic_Rep.Inr) {
                  return genericShow$prime(dictGenericShow1)(v.value0);
              };
              throw new Error("Failed pattern match at Data.Generic.Rep.Show line 31, column 1 - line 31, column 83: " + [ v.constructor.name ]);
          });
      };
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["GenericShow"] = GenericShow;
  exports["genericShow"] = genericShow;
  exports["GenericShowArgs"] = GenericShowArgs;
  exports["genericShowArgs"] = genericShowArgs;
  exports["genericShowSum"] = genericShowSum;
  exports["genericShowArgsProduct"] = genericShowArgsProduct;
  exports["genericShowConstructor"] = genericShowConstructor;
  exports["genericShowArgsArgument"] = genericShowArgsArgument;
})(PS["Data.Generic.Rep.Show"] = PS["Data.Generic.Rep.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var OPTIONS = (function () {
      function OPTIONS() {

      };
      OPTIONS.value = new OPTIONS();
      return OPTIONS;
  })();
  var GET = (function () {
      function GET() {

      };
      GET.value = new GET();
      return GET;
  })();
  var HEAD = (function () {
      function HEAD() {

      };
      HEAD.value = new HEAD();
      return HEAD;
  })();
  var POST = (function () {
      function POST() {

      };
      POST.value = new POST();
      return POST;
  })();
  var PUT = (function () {
      function PUT() {

      };
      PUT.value = new PUT();
      return PUT;
  })();
  var DELETE = (function () {
      function DELETE() {

      };
      DELETE.value = new DELETE();
      return DELETE;
  })();
  var TRACE = (function () {
      function TRACE() {

      };
      TRACE.value = new TRACE();
      return TRACE;
  })();
  var CONNECT = (function () {
      function CONNECT() {

      };
      CONNECT.value = new CONNECT();
      return CONNECT;
  })();
  var PROPFIND = (function () {
      function PROPFIND() {

      };
      PROPFIND.value = new PROPFIND();
      return PROPFIND;
  })();
  var PROPPATCH = (function () {
      function PROPPATCH() {

      };
      PROPPATCH.value = new PROPPATCH();
      return PROPPATCH;
  })();
  var MKCOL = (function () {
      function MKCOL() {

      };
      MKCOL.value = new MKCOL();
      return MKCOL;
  })();
  var COPY = (function () {
      function COPY() {

      };
      COPY.value = new COPY();
      return COPY;
  })();
  var MOVE = (function () {
      function MOVE() {

      };
      MOVE.value = new MOVE();
      return MOVE;
  })();
  var LOCK = (function () {
      function LOCK() {

      };
      LOCK.value = new LOCK();
      return LOCK;
  })();
  var UNLOCK = (function () {
      function UNLOCK() {

      };
      UNLOCK.value = new UNLOCK();
      return UNLOCK;
  })();
  var PATCH = (function () {
      function PATCH() {

      };
      PATCH.value = new PATCH();
      return PATCH;
  })();
  var unCustomMethod = function (v) {
      return v;
  };
  var showMethod = new Data_Show.Show(function (v) {
      if (v instanceof OPTIONS) {
          return "OPTIONS";
      };
      if (v instanceof GET) {
          return "GET";
      };
      if (v instanceof HEAD) {
          return "HEAD";
      };
      if (v instanceof POST) {
          return "POST";
      };
      if (v instanceof PUT) {
          return "PUT";
      };
      if (v instanceof DELETE) {
          return "DELETE";
      };
      if (v instanceof TRACE) {
          return "TRACE";
      };
      if (v instanceof CONNECT) {
          return "CONNECT";
      };
      if (v instanceof PROPFIND) {
          return "PROPFIND";
      };
      if (v instanceof PROPPATCH) {
          return "PROPPATCH";
      };
      if (v instanceof MKCOL) {
          return "MKCOL";
      };
      if (v instanceof COPY) {
          return "COPY";
      };
      if (v instanceof MOVE) {
          return "MOVE";
      };
      if (v instanceof LOCK) {
          return "LOCK";
      };
      if (v instanceof UNLOCK) {
          return "UNLOCK";
      };
      if (v instanceof PATCH) {
          return "PATCH";
      };
      throw new Error("Failed pattern match at Data.HTTP.Method line 42, column 1 - line 42, column 35: " + [ v.constructor.name ]);
  });
  var print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);
  exports["OPTIONS"] = OPTIONS;
  exports["GET"] = GET;
  exports["HEAD"] = HEAD;
  exports["POST"] = POST;
  exports["PUT"] = PUT;
  exports["DELETE"] = DELETE;
  exports["TRACE"] = TRACE;
  exports["CONNECT"] = CONNECT;
  exports["PROPFIND"] = PROPFIND;
  exports["PROPPATCH"] = PROPPATCH;
  exports["MKCOL"] = MKCOL;
  exports["COPY"] = COPY;
  exports["MOVE"] = MOVE;
  exports["LOCK"] = LOCK;
  exports["UNLOCK"] = UNLOCK;
  exports["PATCH"] = PATCH;
  exports["unCustomMethod"] = unCustomMethod;
  exports["print"] = print;
  exports["showMethod"] = showMethod;
})(PS["Data.HTTP.Method"] = PS["Data.HTTP.Method"] || {});
(function(exports) {
    "use strict";

  exports.unsafeParseInt = function unsafeParseInt(input,base) {
      return parseInt(input,base);
  };
})(PS["Data.Int.Parse"] = PS["Data.Int.Parse"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Int.Parse"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Global = PS["Global"];
  var Prelude = PS["Prelude"];        
  var Radix = function (x) {
      return x;
  };
  var toRadix = function (x) {
      return Radix((function () {
          var $1 = x < 2;
          if ($1) {
              return 2;
          };
          var $2 = x > 36;
          if ($2) {
              return 36;
          };
          return x;
      })());
  };
  var $$parseInt = function (s) {
      return function (v) {
          var x = $foreign.unsafeParseInt(s, v);
          var $5 = Global["isNaN"](x);
          if ($5) {
              return Data_Maybe.Nothing.value;
          };
          return new Data_Maybe.Just(Data_Int.round(x));
      };
  };
  exports["toRadix"] = toRadix;
  exports["parseInt"] = $$parseInt;
})(PS["Data.Int.Parse"] = PS["Data.Int.Parse"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var MediaType = function (x) {
      return x;
  }; 
  var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MediaType);
  exports["MediaType"] = MediaType;
  exports["newtypeMediaType"] = newtypeMediaType;
})(PS["Data.MediaType"] = PS["Data.MediaType"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_MediaType = PS["Data.MediaType"];           
  var applicationJSON = "application/json";
  exports["applicationJSON"] = applicationJSON;
})(PS["Data.MediaType.Common"] = PS["Data.MediaType.Common"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Yarn = PS["Data.String.Yarn"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var FileName = function (x) {
      return x;
  };
  var Escaper = function (x) {
      return x;
  };
  var DirName = function (x) {
      return x;
  };
  var Current = (function () {
      function Current() {

      };
      Current.value = new Current();
      return Current;
  })();
  var Root = (function () {
      function Root() {

      };
      Root.value = new Root();
      return Root;
  })();
  var ParentIn = (function () {
      function ParentIn(value0) {
          this.value0 = value0;
      };
      ParentIn.create = function (value0) {
          return new ParentIn(value0);
      };
      return ParentIn;
  })();
  var DirIn = (function () {
      function DirIn(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DirIn.create = function (value0) {
          return function (value1) {
              return new DirIn(value0, value1);
          };
      };
      return DirIn;
  })();
  var FileIn = (function () {
      function FileIn(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FileIn.create = function (value0) {
          return function (value1) {
              return new FileIn(value0, value1);
          };
      };
      return FileIn;
  })();
  var unsafeCoerceType = Unsafe_Coerce.unsafeCoerce;
  var showPath = new Data_Show.Show(function (v) {
      if (v instanceof Current) {
          return "currentDir";
      };
      if (v instanceof Root) {
          return "rootDir";
      };
      if (v instanceof ParentIn) {
          return "(parentDir' " + (Data_Show.show(showPath)(v.value0) + ")");
      };
      if (v instanceof FileIn) {
          return "(" + (Data_Show.show(showPath)(v.value0) + (" </> file " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
      };
      if (v instanceof DirIn) {
          return "(" + (Data_Show.show(showPath)(v.value0) + (" </> dir " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
      };
      throw new Error("Failed pattern match at Data.Path.Pathy line 555, column 1 - line 555, column 39: " + [ v.constructor.name ]);
  });
  var runEscaper = function (v) {
      return v;
  };
  var unsafePrintPath$prime = function (r) {
      var $$escape = runEscaper(r);
      var go = function (v) {
          if (v instanceof Current) {
              return "./";
          };
          if (v instanceof Root) {
              return "/";
          };
          if (v instanceof ParentIn) {
              return go(v.value0) + "../";
          };
          if (v instanceof DirIn && v.value0 instanceof FileIn) {
              return go(v.value0) + ("/" + ($$escape(v.value1) + "/"));
          };
          if (v instanceof DirIn) {
              return go(v.value0) + ($$escape(v.value1) + "/");
          };
          if (v instanceof FileIn && v.value0 instanceof FileIn) {
              return go(v.value0) + ("/" + $$escape(v.value1));
          };
          if (v instanceof FileIn) {
              return go(v.value0) + $$escape(v.value1);
          };
          throw new Error("Failed pattern match at Data.Path.Pathy line 439, column 5 - line 440, column 5: " + [ v.constructor.name ]);
      };
      return go;
  };
  var rootDir = Root.value;                   
  var parsePath = function (rd) {
      return function (ad) {
          return function (rf) {
              return function (af) {
                  return function (v) {
                      if (v === "") {
                          return rd(Current.value);
                      };
                      var segs = Data_String.split("/")(v);
                      var last = Data_Array.length(segs) - 1 | 0;
                      var tuples = Data_Array.zipWith(Data_Tuple.Tuple.create)(segs)(Data_Array.range(0)(last));
                      var isFile = Data_Maybe.maybe(false)(function (v1) {
                          return v1 !== "";
                      })(Data_Array.index(segs)(last));
                      var isAbs = Data_String.take(1)(v) === "/";
                      var folder = function (base) {
                          return function (v1) {
                              if (v1.value0 === ".") {
                                  return base;
                              };
                              if (v1.value0 === "") {
                                  return base;
                              };
                              if (v1.value0 === "..") {
                                  return new ParentIn(base);
                              };
                              if (isFile && v1.value1 === last) {
                                  return new FileIn(base, v1.value0);
                              };
                              if (Data_Boolean.otherwise) {
                                  return new DirIn(base, v1.value0);
                              };
                              throw new Error("Failed pattern match at Data.Path.Pathy line 526, column 7 - line 531, column 50: " + [ v1.value0.constructor.name ]);
                          };
                      };
                      if (isAbs && isFile) {
                          return af(Data_Foldable.foldl(Data_Foldable.foldableArray)(folder)(Root.value)(tuples));
                      };
                      if (isAbs && !isFile) {
                          return ad(Data_Foldable.foldl(Data_Foldable.foldableArray)(folder)(Root.value)(tuples));
                      };
                      if (!isAbs && isFile) {
                          return rf(Data_Foldable.foldl(Data_Foldable.foldableArray)(folder)(Current.value)(tuples));
                      };
                      if (!isAbs && !isFile) {
                          return rd(Data_Foldable.foldl(Data_Foldable.foldableArray)(folder)(Current.value)(tuples));
                      };
                      throw new Error("Failed pattern match at Data.Path.Pathy line 533, column 5 - line 537, column 55: " + [ isAbs.constructor.name, isFile.constructor.name ]);
                  };
              };
          };
      };
  };
  var parseAbsFile = parsePath(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  var parseAbsDir = parsePath(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value));
  var identicalPath = function (p1) {
      return function (p2) {
          return Data_Show.show(showPath)(p1) === Data_Show.show(showPath)(p2);
      };
  };
  var genericFileName = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Path.Pathy.FileName" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(FileName))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Data.Path.Pathy.FileName", [ {
          sigConstructor: "Data.Path.Pathy.FileName",
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      return new Data_Generic.SProd("Data.Path.Pathy.FileName", [ function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericString)(v);
      } ]);
  });
  var genericDirName = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Path.Pathy.DirName" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(DirName))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Data.Path.Pathy.DirName", [ {
          sigConstructor: "Data.Path.Pathy.DirName",
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      return new Data_Generic.SProd("Data.Path.Pathy.DirName", [ function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericString)(v);
      } ]);
  });
  var genericPath = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Path.Pathy.Current" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Current.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Path.Pathy.Root" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Root.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Path.Pathy.ParentIn" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(ParentIn.create))(Data_Generic.fromSpine(genericPath)(v["value1"][0](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Path.Pathy.DirIn" && v.value1.length === 2)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(DirIn.create))(Data_Generic.fromSpine(genericPath)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(genericDirName)(v["value1"][1](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Path.Pathy.FileIn" && v.value1.length === 2)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(FileIn.create))(Data_Generic.fromSpine(genericPath)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(genericFileName)(v["value1"][1](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Data.Path.Pathy.Path", [ {
          sigConstructor: "Data.Path.Pathy.Current",
          sigValues: [  ]
      }, {
          sigConstructor: "Data.Path.Pathy.Root",
          sigValues: [  ]
      }, {
          sigConstructor: "Data.Path.Pathy.ParentIn",
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(genericPath)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Data.Path.Pathy.DirIn",
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(genericPath)(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(genericDirName)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Data.Path.Pathy.FileIn",
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(genericPath)(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(genericFileName)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      if (v instanceof Current) {
          return new Data_Generic.SProd("Data.Path.Pathy.Current", [  ]);
      };
      if (v instanceof Root) {
          return new Data_Generic.SProd("Data.Path.Pathy.Root", [  ]);
      };
      if (v instanceof ParentIn) {
          return new Data_Generic.SProd("Data.Path.Pathy.ParentIn", [ function ($dollarq) {
              return Data_Generic.toSpine(genericPath)(v.value0);
          } ]);
      };
      if (v instanceof DirIn) {
          return new Data_Generic.SProd("Data.Path.Pathy.DirIn", [ function ($dollarq) {
              return Data_Generic.toSpine(genericPath)(v.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(genericDirName)(v.value1);
          } ]);
      };
      if (v instanceof FileIn) {
          return new Data_Generic.SProd("Data.Path.Pathy.FileIn", [ function ($dollarq) {
              return Data_Generic.toSpine(genericPath)(v.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(genericFileName)(v.value1);
          } ]);
      };
      throw new Error("Failed pattern match at Data.Path.Pathy line 153, column 8 - line 153, column 52: " + [ v.constructor.name ]);
  });
  var file$prime = function (f) {
      return new FileIn(Current.value, f);
  };
  var file = function (f) {
      return file$prime(f);
  };
  var dir$prime = function (d) {
      return new DirIn(Current.value, d);
  };
  var dir = function (d) {
      return dir$prime(d);
  };
  var canonicalize$prime = function (v) {
      if (v instanceof Current) {
          return new Data_Tuple.Tuple(false, Current.value);
      };
      if (v instanceof Root) {
          return new Data_Tuple.Tuple(false, Root.value);
      };
      if (v instanceof ParentIn && v.value0 instanceof FileIn) {
          return new Data_Tuple.Tuple(true, Data_Tuple.snd(canonicalize$prime(v.value0.value0)));
      };
      if (v instanceof ParentIn && v.value0 instanceof DirIn) {
          return new Data_Tuple.Tuple(true, Data_Tuple.snd(canonicalize$prime(v.value0.value0)));
      };
      if (v instanceof ParentIn) {
          var v1 = canonicalize$prime(v.value0);
          var p$prime$prime = new ParentIn(v1.value1);
          if (v1.value0) {
              return canonicalize$prime(p$prime$prime);
          };
          return new Data_Tuple.Tuple(v1.value0, p$prime$prime);
      };
      if (v instanceof FileIn) {
          return Data_Functor.map(Data_Tuple.functorTuple)(Data_Function.flip(FileIn.create)(v.value1))(canonicalize$prime(v.value0));
      };
      if (v instanceof DirIn) {
          return Data_Functor.map(Data_Tuple.functorTuple)(Data_Function.flip(DirIn.create)(v.value1))(canonicalize$prime(v.value0));
      };
      throw new Error("Failed pattern match at Data.Path.Pathy line 424, column 1 - line 424, column 72: " + [ v.constructor.name ]);
  };
  var peel = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v instanceof Current) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v instanceof Root) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v instanceof ParentIn) {
              var v1 = canonicalize$prime(v);
              if (v1.value0) {
                  $copy_v = v1.value1;
                  return;
              };
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v instanceof DirIn) {
              $tco_done = true;
              return Data_Maybe.Just.create(new Data_Tuple.Tuple(unsafeCoerceType(v.value0), new Data_Either.Left(v.value1)));
          };
          if (v instanceof FileIn) {
              $tco_done = true;
              return Data_Maybe.Just.create(new Data_Tuple.Tuple(unsafeCoerceType(v.value0), new Data_Either.Right(v.value1)));
          };
          throw new Error("Failed pattern match at Data.Path.Pathy line 325, column 1 - line 328, column 60: " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var canonicalize = function ($298) {
      return Data_Tuple.snd(canonicalize$prime($298));
  }; 
  var appendPath = function (v) {
      return function (v1) {
          if (v instanceof Current && v1 instanceof Current) {
              return Current.value;
          };
          if (v instanceof Root && v1 instanceof Current) {
              return Root.value;
          };
          if (v instanceof ParentIn && v1 instanceof Current) {
              return new ParentIn(appendPath(v.value0)(Current.value));
          };
          if (v instanceof FileIn && v1 instanceof Current) {
              return new FileIn(appendPath(v.value0)(Current.value), v.value1);
          };
          if (v instanceof DirIn && v1 instanceof Current) {
              return new DirIn(appendPath(v.value0)(Current.value), v.value1);
          };
          if (v1 instanceof ParentIn) {
              return new ParentIn(appendPath(v)(v1.value0));
          };
          if (v1 instanceof FileIn) {
              return new FileIn(appendPath(v)(v1.value0), v1.value1);
          };
          if (v1 instanceof DirIn) {
              return new DirIn(appendPath(v)(v1.value0), v1.value1);
          };
          if (v instanceof Current && v1 instanceof Root) {
              return Current.value;
          };
          if (v instanceof Root && v1 instanceof Root) {
              return Root.value;
          };
          if (v instanceof ParentIn && v1 instanceof Root) {
              return new ParentIn(appendPath(v.value0)(Current.value));
          };
          if (v instanceof FileIn && v1 instanceof Root) {
              return new FileIn(appendPath(v.value0)(Current.value), v.value1);
          };
          if (v instanceof DirIn && v1 instanceof Root) {
              return new DirIn(appendPath(v.value0)(Current.value), v.value1);
          };
          throw new Error("Failed pattern match at Data.Path.Pathy line 269, column 1 - line 269, column 71: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var relativeTo = function (p1) {
      return function (p2) {
          var relativeTo$prime = function (v) {
              return function (v1) {
                  if (v instanceof Root && v1 instanceof Root) {
                      return new Data_Maybe.Just(Current.value);
                  };
                  if (v instanceof Current && v1 instanceof Current) {
                      return new Data_Maybe.Just(Current.value);
                  };
                  if (identicalPath(v)(v1)) {
                      return new Data_Maybe.Just(Current.value);
                  };
                  if (Data_Boolean.otherwise) {
                      var v2 = peel(v);
                      if (v2 instanceof Data_Maybe.Just) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(appendPath)(Data_Either.either(DirIn.create(Current.value))(FileIn.create(Current.value))(v2.value0.value1)))(relativeTo$prime(v2.value0.value0)(v1));
                      };
                      if (v2 instanceof Data_Maybe.Nothing) {
                          return Data_Maybe.Nothing.value;
                      };
                      throw new Error("Failed pattern match at Data.Path.Pathy line 481, column 19 - line 484, column 27: " + [ v2.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Path.Pathy line 476, column 3 - line 476, column 83: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          return relativeTo$prime(canonicalize(p1))(canonicalize(p2));
      };
  };
  var sandbox = function (p1) {
      return function (p2) {
          return relativeTo(p2)(p1);
      };
  };
  exports["DirName"] = DirName;
  exports["Escaper"] = Escaper;
  exports["FileName"] = FileName;
  exports["appendPath"] = appendPath;
  exports["canonicalize"] = canonicalize;
  exports["dir"] = dir;
  exports["file"] = file;
  exports["identicalPath"] = identicalPath;
  exports["peel"] = peel;
  exports["parsePath"] = parsePath;
  exports["parseAbsDir"] = parseAbsDir;
  exports["parseAbsFile"] = parseAbsFile;
  exports["relativeTo"] = relativeTo;
  exports["rootDir"] = rootDir;
  exports["runEscaper"] = runEscaper;
  exports["sandbox"] = sandbox;
  exports["unsafePrintPath'"] = unsafePrintPath$prime;
  exports["genericFileName"] = genericFileName;
  exports["genericDirName"] = genericDirName;
  exports["genericPath"] = genericPath;
  exports["showPath"] = showPath;
})(PS["Data.Path.Pathy"] = PS["Data.Path.Pathy"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var $$Set = (function () {
      function $$Set(value0) {
          this.value0 = value0;
      };
      $$Set.create = function (value0) {
          return new $$Set(value0);
      };
      return $$Set;
  })();
  var member = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map.member(dictOrd)(a)(v.value0);
          };
      };
  };
  var insert = function (dictOrd) {
      return function (a) {
          return function (v) {
              return new $$Set(Data_Map.insert(dictOrd)(a)(Data_Unit.unit)(v.value0));
          };
      };
  }; 
  var empty = new $$Set(Data_Map.empty);
  var $$delete = function (dictOrd) {
      return function (a) {
          return function (v) {
              return new $$Set(Data_Map["delete"](dictOrd)(a)(v.value0));
          };
      };
  };
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["member"] = member;
  exports["delete"] = $$delete;
})(PS["Data.Set"] = PS["Data.Set"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Unit = PS["Data.Unit"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var $$undefined = Data_Unit.unit;
  exports["undefined"] = $$undefined;
})(PS["Data.Typelevel.Undefined"] = PS["Data.Typelevel.Undefined"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Global = PS["Global"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];        
  var PCTEncoded = function (x) {
      return x;
  };
  var wrapParser = function (outer) {
      return function (inner) {
          return function (ps) {
              return Control_Bind.bind(Data_Either.bindEither)(Text_Parsing_StringParser.unParser(inner)(ps))(function (v) {
                  return Control_Bind.bind(Data_Either.bindEither)(Text_Parsing_StringParser.unParser(outer)({
                      str: v.result,
                      pos: 0
                  }))(function (v1) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          result: v1.result,
                          suffix: v.suffix
                      });
                  });
              });
          };
      };
  };
  var match1From = function (rx$prime) {
      return function (n) {
          return function (str$prime) {
              var v = Data_String_Regex.regex(Data_String_Regex.source(rx$prime))(Data_Semigroup.append(Data_String_Regex_Flags.semigroupRegexFlags)(Data_String_Regex_Flags.global)(Data_String_Regex.flags(rx$prime)));
              if (v instanceof Data_Either.Left) {
                  return Data_Maybe.Nothing.value;
              };
              if (v instanceof Data_Either.Right) {
                  var str = Data_String.drop(n)(str$prime);
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_Regex.search(v.value0)(str))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(v1 === 0))(function () {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_Regex.match(v.value0)(str))(function (v2) {
                              return Control_Bind.join(Data_Maybe.bindMaybe)(Data_Array.head(v2));
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at Data.URI.Common line 68, column 3 - line 75, column 19: " + [ v.constructor.name ]);
          };
      };
  };
  var joinWith = function (x) {
      return function (y) {
          return Data_String.joinWith(x)(Data_Array.fromFoldable(Data_List_Types.foldableList)(y));
      };
  };
  var decodePCTComponent = function (v) {
      return Global["decodeURIComponent"](v);
  };
  var decodePCT = function (v) {
      return Global["decodeURI"](v);
  };
  var anyMatch = function (rx) {
      return function (v) {
          var v1 = match1From(rx)(v.pos)(v.str);
          if (v1 instanceof Data_Maybe.Just) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  result: v1.value0,
                  suffix: {
                      str: v.str,
                      pos: v.pos + Data_String.length(v1.value0) | 0
                  }
              });
          };
          if (v1 instanceof Data_Maybe.Nothing) {
              return new Data_Either.Left({
                  error: Text_Parsing_StringParser.ParseError.create("Expected " + Data_Show.show(Data_String_Regex.showRegex)(rx)),
                  pos: v.pos
              });
          };
          throw new Error("Failed pattern match at Data.URI.Common line 62, column 46 - line 64, column 74: " + [ v1.constructor.name ]);
      };
  };
  var rxPat = function (rx) {
      return Data_Either.fromRight()(Data_Functor.map(Data_Either.functorEither)(anyMatch)(Data_String_Regex.regex(rx)(Data_String_Regex_Flags.ignoreCase)));
  };
  var parsePCTEncoded = function (f) {
      return Data_Functor.map(Text_Parsing_StringParser.functorParser)(function ($24) {
          return f(PCTEncoded($24));
      })(rxPat("(%[0-9a-f]{2})+"));
  };
  var parseSubDelims = rxPat("[!$&'()*+;=]");
  var parseUnreserved = rxPat("[0-9a-z\\-\\._~]+");
  var parsePChar = function (f) {
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(parseUnreserved)(parsePCTEncoded(f)))(parseSubDelims))(Text_Parsing_StringParser_String.string(":")))(Text_Parsing_StringParser_String.string("@"));
  };
  exports["joinWith"] = joinWith;
  exports["rxPat"] = rxPat;
  exports["wrapParser"] = wrapParser;
  exports["parsePChar"] = parsePChar;
  exports["parseUnreserved"] = parseUnreserved;
  exports["PCTEncoded"] = PCTEncoded;
  exports["decodePCT"] = decodePCT;
  exports["decodePCTComponent"] = decodePCTComponent;
  exports["parsePCTEncoded"] = parsePCTEncoded;
  exports["parseSubDelims"] = parseSubDelims;
  exports["anyMatch"] = anyMatch;
  exports["match1From"] = match1From;
})(PS["Data.URI.Common"] = PS["Data.URI.Common"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_URI_Common = PS["Data.URI.Common"];
  var Global = PS["Global"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];        
  var IPv6Address = (function () {
      function IPv6Address(value0) {
          this.value0 = value0;
      };
      IPv6Address.create = function (value0) {
          return new IPv6Address(value0);
      };
      return IPv6Address;
  })();
  var IPv4Address = (function () {
      function IPv4Address(value0) {
          this.value0 = value0;
      };
      IPv4Address.create = function (value0) {
          return new IPv4Address(value0);
      };
      return IPv4Address;
  })();
  var NameAddress = (function () {
      function NameAddress(value0) {
          this.value0 = value0;
      };
      NameAddress.create = function (value0) {
          return new NameAddress(value0);
      };
      return NameAddress;
  })();
  var regNameParser = (function () {
      var p = Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Data_URI_Common.parseUnreserved)(Data_URI_Common.parsePCTEncoded(Data_URI_Common.decodePCT)))(Data_URI_Common.parseSubDelims);
      return Data_Functor.map(Text_Parsing_StringParser.functorParser)(function ($83) {
          return NameAddress.create(Data_URI_Common.joinWith("")($83));
      })(Text_Parsing_StringParser_Combinators.many1(p));
  })();
  var print = function (v) {
      if (v instanceof IPv6Address) {
          return "[" + (v.value0 + "]");
      };
      if (v instanceof IPv4Address) {
          return v.value0;
      };
      if (v instanceof NameAddress) {
          return Global["encodeURI"](v.value0);
      };
      throw new Error("Failed pattern match at Data.URI.Host line 70, column 1 - line 70, column 22: " + [ v.constructor.name ]);
  };
  var ipv6AddressParser = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(IPv6Address.create)(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("["))(Data_URI_Common.rxPat("[a-f0-9\\.:]+")))(Text_Parsing_StringParser_String.string("]"))))("IPv6 address");
  var ipv4AddressParser = (function () {
      var octet = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_URI_Common.rxPat("0|([1-9][0-9]{0,2})"))(function (v) {
          var v1 = Data_Int.fromString(v);
          if (v1 instanceof Data_Maybe.Just && (v1.value0 >= 0 && v1.value0 <= 255)) {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v1.value0);
          };
          return Text_Parsing_StringParser.fail("Invalid IPv4 address octet");
      });
      var addr = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(octet)(function (v) {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String["char"]("."))(function (v1) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(octet)(function (v2) {
                  return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String["char"]("."))(function (v3) {
                      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(octet)(function (v4) {
                          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String["char"]("."))(function (v5) {
                              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(octet)(function (v6) {
                                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Show.show(Data_Show.showInt)(v) + ("." + (Data_Show.show(Data_Show.showInt)(v2) + ("." + (Data_Show.show(Data_Show.showInt)(v4) + ("." + Data_Show.show(Data_Show.showInt)(v6)))))));
                              });
                          });
                      });
                  });
              });
          });
      });
      return Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(IPv4Address.create)(addr))("IPv4 address");
  })();
  var parser = Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Text_Parsing_StringParser["try"](ipv6AddressParser))(Text_Parsing_StringParser["try"](ipv4AddressParser)))(regNameParser);
  var genericHost = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof IPv6Address) {
          return new Data_Generic_Rep.Inl(x.value0);
      };
      if (x instanceof IPv4Address) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
      };
      if (x instanceof NameAddress) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
      };
      throw new Error("Failed pattern match at Data.URI.Host line 35, column 8 - line 35, column 45: " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return new IPv6Address(x.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return new IPv4Address(x.value0.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return new NameAddress(x.value0.value0);
      };
      throw new Error("Failed pattern match at Data.URI.Host line 35, column 8 - line 35, column 45: " + [ x.constructor.name ]);
  });
  var showHost = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericHost)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
      return "IPv6Address";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
      return "IPv4Address";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
      return "NameAddress";
  }))))));
  exports["IPv6Address"] = IPv6Address;
  exports["IPv4Address"] = IPv4Address;
  exports["NameAddress"] = NameAddress;
  exports["parser"] = parser;
  exports["ipv6AddressParser"] = ipv6AddressParser;
  exports["ipv4AddressParser"] = ipv4AddressParser;
  exports["regNameParser"] = regNameParser;
  exports["print"] = print;
  exports["genericHost"] = genericHost;
  exports["showHost"] = showHost;
})(PS["Data.URI.Host"] = PS["Data.URI.Host"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_URI_Common = PS["Data.URI.Common"];
  var Global = PS["Global"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var print = function (v) {
      return Data_Show.show(Data_Show.showInt)(v);
  };
  var parser = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_URI_Common.rxPat("[0-9]+"))(function (v) {
      var v1 = Data_Int.fromNumber(Global.readInt(10)(v));
      if (v1 instanceof Data_Maybe.Just) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v1.value0);
      };
      return Text_Parsing_StringParser.fail("Expected valid port number");
  });      
  var genericPort = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var showPort = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericPort)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
      return "Port";
  }))));
  exports["parser"] = parser;
  exports["print"] = print;
  exports["genericPort"] = genericPort;
  exports["showPort"] = showPort;
})(PS["Data.URI.Port"] = PS["Data.URI.Port"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_URI_Common = PS["Data.URI.Common"];
  var Global = PS["Global"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];        
  var UserInfo = function (x) {
      return x;
  };
  var shouldNotEscape = function (c) {
      return "A" <= c && c <= "Z" || ("a" <= c && c <= "z" || ("0" <= c && c <= "9" || (c === "-" || (c === "_" || (c === "." || (c === "~" || (c === "!" || (c === "$" || (c === "&" || (c === "'" || (c === "(" || (c === ")" || (c === "*" || (c === "+" || (c === "," || (c === ";" || (c === "=" || c === ":")))))))))))))))));
  };
  var parser = (function () {
      var p = Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Data_URI_Common.parseUnreserved)(Data_URI_Common.parsePCTEncoded(Data_URI_Common.decodePCTComponent)))(Data_URI_Common.parseSubDelims))(Text_Parsing_StringParser_String.string(":"));
      return Data_Functor.map(Text_Parsing_StringParser.functorParser)(function ($10) {
          return UserInfo(Data_URI_Common.joinWith("")($10));
      })(Text_Parsing_StringParser_Combinators.many1(p));
  })();        
  var genericUserInfo = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var showUserInfo = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericUserInfo)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
      return "UserInfo";
  }))));                            
  var encodeChar = function (c) {
      var cStr = Data_String.singleton(c);
      var $8 = shouldNotEscape(c);
      if ($8) {
          return cStr;
      };
      return Global["encodeURIComponent"](cStr);
  };
  var encodeUserPassword = function (s) {
      return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(encodeChar)(Data_String.toCharArray(s));
  };
  var print = function (v) {
      return encodeUserPassword(v);
  };
  exports["UserInfo"] = UserInfo;
  exports["parser"] = parser;
  exports["print"] = print;
  exports["genericUserInfo"] = genericUserInfo;
  exports["showUserInfo"] = showUserInfo;
})(PS["Data.URI.UserInfo"] = PS["Data.URI.UserInfo"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_URI_Host = PS["Data.URI.Host"];
  var Data_URI_Port = PS["Data.URI.Port"];
  var Data_URI_UserInfo = PS["Data.URI.UserInfo"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];        
  var Authority = (function () {
      function Authority(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Authority.create = function (value0) {
          return function (value1) {
              return new Authority(value0, value1);
          };
      };
      return Authority;
  })();
  var print = function (v) {
      var printUserInfo = Data_Maybe.maybe("")(function (u) {
          return Data_URI_UserInfo.print(u) + "@";
      })(v.value0);
      var printHostAndPort = function (v1) {
          return Data_URI_Host.print(v1.value0) + Data_Maybe.maybe("")(function (n) {
              return ":" + Data_URI_Port.print(n);
          })(v1.value1);
      };
      return "//" + (printUserInfo + Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(printHostAndPort)(v.value1)));
  };
  var parser = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.string("//"))(function (v) {
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optionMaybe(Text_Parsing_StringParser["try"](Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Data_URI_UserInfo.parser)(Text_Parsing_StringParser_String.string("@")))))(function (v1) {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_Function.flip(Text_Parsing_StringParser_Combinators.sepBy)(Text_Parsing_StringParser_String.string(","))(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Tuple.Tuple.create)(Data_URI_Host.parser))(Text_Parsing_StringParser_Combinators.optionMaybe(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string(":"))(Data_URI_Port.parser)))))(function (v2) {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Authority(v1, Data_Array.fromFoldable(Data_List_Types.foldableList)(v2)));
          });
      });
  });
  var genericAuthority = new Data_Generic_Rep.Generic(function (x) {
      return new Data_Generic_Rep.Product(x.value0, x.value1);
  }, function (x) {
      return new Authority(x.value0, x.value1);
  });
  var showAuthority = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericAuthority)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Maybe.showMaybe(Data_URI_UserInfo.showUserInfo)))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showArray(Data_Tuple.showTuple(Data_URI_Host.showHost)(Data_Maybe.showMaybe(Data_URI_Port.showPort))))))(new Data_Symbol.IsSymbol(function () {
      return "Authority";
  }))));
  exports["Authority"] = Authority;
  exports["parser"] = parser;
  exports["print"] = print;
  exports["genericAuthority"] = genericAuthority;
  exports["showAuthority"] = showAuthority;
})(PS["Data.URI.Authority"] = PS["Data.URI.Authority"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_URI_Common = PS["Data.URI.Common"];
  var Data_Unit = PS["Data.Unit"];
  var Global = PS["Global"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];        
  var Fragment = function (x) {
      return x;
  };
  var rxPrintable = Data_Either.fromRight()(Data_String_Regex.regex("[&;$+=/?:@]")(Data_String_Regex_Flags.global));
  var print = function (v) {
      var printChar = function (s) {
          if (Data_String_Regex.test(rxPrintable)(s)) {
              return s;
          };
          if (Data_Boolean.otherwise) {
              return Global["encodeURIComponent"](s);
          };
          throw new Error("Failed pattern match at Data.URI.Fragment line 42, column 3 - line 42, column 30: " + [ s.constructor.name ]);
      };
      return "#" + Data_String.joinWith("")(Data_Functor.map(Data_Functor.functorArray)(printChar)(Data_String.split("")(v)));
  };
  var parser = Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("#"))(Data_Functor.map(Text_Parsing_StringParser.functorParser)(function ($20) {
      return Fragment(Data_URI_Common.joinWith("")($20));
  })(Text_Parsing_StringParser_Combinators.many(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Data_URI_Common.parsePChar(Data_URI_Common.decodePCTComponent))(Text_Parsing_StringParser_String.string("/")))(Text_Parsing_StringParser_String.string("?")))));
  var genericFragment = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var showFragment = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericFragment)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
      return "Fragment";
  }))));                            
  var dataGenericFragment = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Data.URI.Fragment.Fragment" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Fragment))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Data.URI.Fragment.Fragment", [ {
          sigConstructor: "Data.URI.Fragment.Fragment",
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      return new Data_Generic.SProd("Data.URI.Fragment.Fragment", [ function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericString)(v);
      } ]);
  });
  exports["Fragment"] = Fragment;
  exports["parser"] = parser;
  exports["print"] = print;
  exports["rxPrintable"] = rxPrintable;
  exports["dataGenericFragment"] = dataGenericFragment;
  exports["genericFragment"] = genericFragment;
  exports["showFragment"] = showFragment;
})(PS["Data.URI.Fragment"] = PS["Data.URI.Fragment"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Path_Pathy = PS["Data.Path.Pathy"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String = PS["Data.String"];
  var Data_URI_Common = PS["Data.URI.Common"];
  var Global = PS["Global"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];
  var parseURIPathAbs = function (v) {
      var v1 = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Path_Pathy.sandbox(Data_Path_Pathy.rootDir))(Data_Path_Pathy.parseAbsFile(Data_String.drop(v.pos)(v.str)));
      if (v1 instanceof Data_Maybe.Just) {
          return new Data_Either.Right({
              result: Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(v1.value0)),
              suffix: {
                  str: v.str,
                  pos: Data_String.length(v.str)
              }
          });
      };
      if (v1 instanceof Data_Maybe.Nothing) {
          var v2 = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Path_Pathy.sandbox(Data_Path_Pathy.rootDir))(Data_Path_Pathy.parseAbsDir(Data_String.drop(v.pos)(v.str)));
          if (v2 instanceof Data_Maybe.Just) {
              return new Data_Either.Right({
                  result: Data_Either.Left.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(v2.value0)),
                  suffix: {
                      str: v.str,
                      pos: Data_String.length(v.str)
                  }
              });
          };
          if (v2 instanceof Data_Maybe.Nothing) {
              return new Data_Either.Left({
                  error: Text_Parsing_StringParser.ParseError.create("Expected a valid path"),
                  pos: v.pos
              });
          };
          throw new Error("Failed pattern match at Data.URI.Path line 89, column 15 - line 91, column 79: " + [ v2.constructor.name ]);
      };
      throw new Error("Failed pattern match at Data.URI.Path line 87, column 3 - line 91, column 79: " + [ v1.constructor.name ]);
  };
  var escaper = Data_Path_Pathy.Escaper(function ($25) {
      return Data_String.replaceAll("#")("%23")(Global["encodeURI"]($25));
  });
  var printPath$prime = function (path) {
      var printed = Data_Path_Pathy["unsafePrintPath'"](escaper)(path);
      return Data_Maybe.fromMaybe(printed)(Data_String.stripPrefix("./")(printed));
  };
  var printPath = Data_Either.either(printPath$prime)(printPath$prime);
  var decoder = function ($26) {
      return Data_String.replaceAll("%23")("#")(Data_URI_Common.decodePCT($26));
  };
  var parseSegment = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_URI_Common.joinWith(""))(Text_Parsing_StringParser_Combinators.many(Data_URI_Common.parsePChar(decoder)));
  var parsePathAbEmpty = function (p) {
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Text_Parsing_StringParser["try"](Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Maybe.Just.create)(Data_URI_Common.wrapParser(p)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_URI_Common.joinWith(""))(Text_Parsing_StringParser_Combinators.many(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Semigroup.append(Data_Semigroup.semigroupString))(Text_Parsing_StringParser_String.string("/")))(parseSegment)))))))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Maybe.Nothing.value));
  };
  var parseSegmentNonZero = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_URI_Common.joinWith(""))(Text_Parsing_StringParser_Combinators.many1(Data_URI_Common.parsePChar(decoder)));
  var parsePathAbsolute = function (p) {
      return Data_URI_Common.wrapParser(p)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.string("/"))(function (v) {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(parseSegmentNonZero)(function (v1) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_URI_Common.joinWith(""))(Text_Parsing_StringParser_Combinators.many(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Semigroup.append(Data_Semigroup.semigroupString))(Text_Parsing_StringParser_String.string("/")))(parseSegment))))(function (v2) {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)("/" + (v1 + v2));
              });
          });
      }));
  };
  var parsePathRootless = function (p) {
      return Data_URI_Common.wrapParser(p)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Semigroup.append(Data_Semigroup.semigroupString))(parseSegmentNonZero))(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_URI_Common.joinWith(""))(Text_Parsing_StringParser_Combinators.many(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Semigroup.append(Data_Semigroup.semigroupString))(Text_Parsing_StringParser_String.string("/")))(parseSegment)))));
  };
  exports["parsePathAbEmpty"] = parsePathAbEmpty;
  exports["parsePathAbsolute"] = parsePathAbsolute;
  exports["parsePathRootless"] = parsePathRootless;
  exports["parseSegment"] = parseSegment;
  exports["parseSegmentNonZero"] = parseSegmentNonZero;
  exports["parseURIPathAbs"] = parseURIPathAbs;
  exports["printPath"] = printPath;
})(PS["Data.URI.Path"] = PS["Data.URI.Path"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Path_Pathy = PS["Data.Path.Pathy"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_URI_Authority = PS["Data.URI.Authority"];
  var Data_URI_Path = PS["Data.URI.Path"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];        
  var HierarchicalPart = (function () {
      function HierarchicalPart(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HierarchicalPart.create = function (value0) {
          return function (value1) {
              return new HierarchicalPart(value0, value1);
          };
      };
      return HierarchicalPart;
  })();
  var print = function (v) {
      return Data_String.joinWith("")(Data_Array.catMaybes([ Data_Functor.map(Data_Maybe.functorMaybe)(Data_URI_Authority.print)(v.value0), Data_Functor.map(Data_Maybe.functorMaybe)(Data_URI_Path.printPath)(v.value1) ]));
  };
  var parser = (function () {
      var withAuth = Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(function ($58) {
          return HierarchicalPart.create(Data_Maybe.Just.create($58));
      })(Data_URI_Authority.parser))(Data_URI_Path.parsePathAbEmpty(Data_URI_Path.parseURIPathAbs));
      var noAuthPath = Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Maybe.Just.create)(Data_URI_Path.parsePathAbsolute(Data_URI_Path.parseURIPathAbs)))(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Maybe.Just.create)(Data_URI_Path.parsePathRootless(Data_URI_Path.parseURIPathAbs))))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Maybe.Nothing.value));
      var withoutAuth = Data_Functor.map(Text_Parsing_StringParser.functorParser)(HierarchicalPart.create(Data_Maybe.Nothing.value))(noAuthPath);
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(withAuth)(withoutAuth);
  })();
  var genericHierarchicalPart = new Data_Generic_Rep.Generic(function (x) {
      return new Data_Generic_Rep.Product(x.value0, x.value1);
  }, function (x) {
      return new HierarchicalPart(x.value0, x.value1);
  });
  var showHierarchicalPart = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericHierarchicalPart)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Maybe.showMaybe(Data_URI_Authority.showAuthority)))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Maybe.showMaybe(Data_Either.showEither(Data_Path_Pathy.showPath)(Data_Path_Pathy.showPath)))))(new Data_Symbol.IsSymbol(function () {
      return "HierarchicalPart";
  }))));
  exports["HierarchicalPart"] = HierarchicalPart;
  exports["parser"] = parser;
  exports["print"] = print;
  exports["genericHierarchicalPart"] = genericHierarchicalPart;
  exports["showHierarchicalPart"] = showHierarchicalPart;
})(PS["Data.URI.HierarchicalPart"] = PS["Data.URI.HierarchicalPart"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_URI_Common = PS["Data.URI.Common"];
  var Data_Unit = PS["Data.Unit"];
  var Global = PS["Global"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];        
  var Query = function (x) {
      return x;
  };                                                 
  var rxPrintable = Data_Either.fromRight()(Data_String_Regex.regex("[$+/?:@]")(Data_String_Regex_Flags.global));
  var printQueryPart = (function () {
      var printChar = function (s) {
          if (Data_String_Regex.test(rxPrintable)(s)) {
              return s;
          };
          if (Data_Boolean.otherwise) {
              return Global["encodeURIComponent"](s);
          };
          throw new Error("Failed pattern match at Data.URI.Query line 70, column 3 - line 70, column 30: " + [ s.constructor.name ]);
      };
      return function ($32) {
          return Data_String.joinWith("")(Data_Functor.map(Data_Functor.functorArray)(printChar)(Data_String.split("")($32)));
      };
  })();
  var print = function (v) {
      var printPart = function (v1) {
          if (v1.value1 instanceof Data_Maybe.Nothing) {
              return printQueryPart(v1.value0);
          };
          if (v1.value1 instanceof Data_Maybe.Just) {
              return printQueryPart(v1.value0) + ("=" + printQueryPart(v1.value1.value0));
          };
          throw new Error("Failed pattern match at Data.URI.Query line 60, column 3 - line 60, column 51: " + [ v1.constructor.name ]);
      };
      if (v instanceof Data_List_Types.Nil) {
          return "?";
      };
      return "?" + Data_URI_Common.joinWith("&")(Data_Functor.map(Data_List_Types.functorList)(printPart)(v));
  };
  var parsePart = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Global["decodeURIComponent"])(Data_URI_Common.rxPat("[^=;&]+")))(function (v) {
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optionMaybe(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Global["decodeURIComponent"])(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("="))(Data_URI_Common.rxPat("[^;&]*")))))(function (v1) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_Tuple.Tuple(v, v1));
      });
  });
  var parseParts = Text_Parsing_StringParser_Combinators.sepBy(parsePart)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Text_Parsing_StringParser_String.string(";"))(Text_Parsing_StringParser_String.string("&")));
  var parser = Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("?"))(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Query)(Data_URI_Common.wrapParser(parseParts)(Text_Parsing_StringParser["try"](Data_URI_Common.rxPat("[^#]*")))));
  var genericQuery = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var showQuery = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericQuery)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_List_Types.showList(Data_Tuple.showTuple(Data_Show.showString)(Data_Maybe.showMaybe(Data_Show.showString)))))(new Data_Symbol.IsSymbol(function () {
      return "Query";
  }))));                                                                                                           
  var dataGenericQuery = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Data.URI.Query.Query" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Query))(Data_Generic.fromSpine(Data_Generic.genericList(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(v["value1"][0](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Data.URI.Query.Query", [ {
          sigConstructor: "Data.URI.Query.Query",
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericList(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      return new Data_Generic.SProd("Data.URI.Query.Query", [ function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericList(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(v);
      } ]);
  });
  exports["Query"] = Query;
  exports["parser"] = parser;
  exports["print"] = print;
  exports["dataGenericQuery"] = dataGenericQuery;
  exports["genericQuery"] = genericQuery;
  exports["showQuery"] = showQuery;
})(PS["Data.URI.Query"] = PS["Data.URI.Query"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_URI_Common = PS["Data.URI.Common"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];        
  var Scheme = function (x) {
      return x;
  };
  var print = function (v) {
      return v + ":";
  };
  var parser = Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Scheme)(Data_URI_Common.rxPat("[a-z][a-z0-9+\\.\\-]+")))(Text_Parsing_StringParser_String.string(":"));
  var genericScheme = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var showScheme = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericScheme)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
      return "Scheme";
  }))));
  var eqScheme = Data_Eq.eqString;
  exports["Scheme"] = Scheme;
  exports["parser"] = parser;
  exports["print"] = print;
  exports["eqScheme"] = eqScheme;
  exports["genericScheme"] = genericScheme;
  exports["showScheme"] = showScheme;
})(PS["Data.URI.Scheme"] = PS["Data.URI.Scheme"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_URI_Fragment = PS["Data.URI.Fragment"];
  var Data_URI_HierarchicalPart = PS["Data.URI.HierarchicalPart"];
  var Data_URI_Query = PS["Data.URI.Query"];
  var Data_URI_Scheme = PS["Data.URI.Scheme"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];        
  var URI = (function () {
      function URI(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      URI.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new URI(value0, value1, value2, value3);
                  };
              };
          };
      };
      return URI;
  })();
  var print = function (v) {
      return Data_String.joinWith("")(Data_Array.catMaybes([ Data_Functor.map(Data_Maybe.functorMaybe)(Data_URI_Scheme.print)(v.value0), new Data_Maybe.Just(Data_URI_HierarchicalPart.print(v.value1)), Data_Functor.map(Data_Maybe.functorMaybe)(Data_URI_Query.print)(v.value2), Data_Functor.map(Data_Maybe.functorMaybe)(Data_URI_Fragment.print)(v.value3) ]));
  };
  var parser = Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(URI.create)(Text_Parsing_StringParser_Combinators.optionMaybe(Data_URI_Scheme.parser)))(Data_URI_HierarchicalPart.parser))(Text_Parsing_StringParser_Combinators.optionMaybe(Data_URI_Query.parser)))(Text_Parsing_StringParser_Combinators.optionMaybe(Data_URI_Fragment.parser)))(Text_Parsing_StringParser_String.eof);
  var parse = Text_Parsing_StringParser.runParser(parser);
  var genericURI = new Data_Generic_Rep.Generic(function (x) {
      return new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, new Data_Generic_Rep.Product(x.value2, x.value3)));
  }, function (x) {
      return new URI(x.value0, x.value1.value0, x.value1.value1.value0, x.value1.value1.value1);
  });
  var showURI = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericURI)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Maybe.showMaybe(Data_URI_Scheme.showScheme)))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_URI_HierarchicalPart.showHierarchicalPart))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Maybe.showMaybe(Data_URI_Query.showQuery)))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Maybe.showMaybe(Data_URI_Fragment.showFragment))))))(new Data_Symbol.IsSymbol(function () {
      return "URI";
  }))));
  exports["URI"] = URI;
  exports["parse"] = parse;
  exports["parser"] = parser;
  exports["print"] = print;
  exports["genericURI"] = genericURI;
  exports["showURI"] = showURI;
})(PS["Data.URI.URI"] = PS["Data.URI.URI"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Path_Pathy = PS["Data.Path.Pathy"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_URI = PS["Data.URI"];
  var Data_URI_Fragment = PS["Data.URI.Fragment"];
  var Data_URI_HierarchicalPart = PS["Data.URI.HierarchicalPart"];
  var Data_URI_Path = PS["Data.URI.Path"];
  var Data_URI_Query = PS["Data.URI.Query"];
  var Data_URI_URI = PS["Data.URI.URI"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];        
  var Location = (function () {
      function Location(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Location.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Location(value0, value1, value2);
              };
          };
      };
      return Location;
  })();
  var toURI = function (v) {
      return new Data_URI_URI.URI(v.scheme, new Data_URI_HierarchicalPart.HierarchicalPart(v.authority, new Data_Maybe.Just(v.location.value0)), v.location.value1, v.location.value2);
  };
  var printLocation = function (v) {
      return Data_URI_Path.printPath(v.value0) + (Data_Maybe.maybe("")(Data_URI_Query.print)(v.value1) + Data_Maybe.maybe("")(Data_URI_Fragment.print)(v.value2));
  };
  var parseLocation = Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Location.create)(Data_URI_Path.parseURIPathAbs))(Text_Parsing_StringParser_Combinators.optionMaybe(Data_URI_Query.parser)))(Text_Parsing_StringParser_Combinators.optionMaybe(Data_URI_Fragment.parser)))(Text_Parsing_StringParser_String.eof);
  var genericLocation = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Data.URI.Location.Location" && v.value1.length === 3)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Location.create))(Data_Generic.fromSpine(Data_Generic.genericEither(Data_Path_Pathy.genericPath)(Data_Path_Pathy.genericPath))(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericMaybe(Data_URI_Query.dataGenericQuery))(v["value1"][1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericMaybe(Data_URI_Fragment.dataGenericFragment))(v["value1"][2](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Data.URI.Location.Location", [ {
          sigConstructor: "Data.URI.Location.Location",
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericEither(Data_Path_Pathy.genericPath)(Data_Path_Pathy.genericPath))(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericMaybe(Data_URI_Query.dataGenericQuery))(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(Data_Generic.genericMaybe(Data_URI_Fragment.dataGenericFragment))(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      return new Data_Generic.SProd("Data.URI.Location.Location", [ function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericEither(Data_Path_Pathy.genericPath)(Data_Path_Pathy.genericPath))(v.value0);
      }, function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericMaybe(Data_URI_Query.dataGenericQuery))(v.value1);
      }, function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericMaybe(Data_URI_Fragment.dataGenericFragment))(v.value2);
      } ]);
  });
  var showLocation = new Data_Show.Show(Data_Generic.gShow(genericLocation));
  var fromURI = function (v) {
      if (v.value1.value1 instanceof Data_Maybe.Nothing) {
          return Data_Maybe.Nothing.value;
      };
      if (v.value1.value1 instanceof Data_Maybe.Just) {
          return new Data_Maybe.Just({
              scheme: v.value0,
              authority: v.value1.value0,
              location: new Location(v.value1.value1.value0, v.value2, v.value3)
          });
      };
      throw new Error("Failed pattern match at Data.URI.Location line 43, column 63 - line 45, column 68: " + [ v.value1.value1.constructor.name ]);
  };
  exports["Location"] = Location;
  exports["printLocation"] = printLocation;
  exports["parseLocation"] = parseLocation;
  exports["toURI"] = toURI;
  exports["fromURI"] = fromURI;
  exports["genericLocation"] = genericLocation;
  exports["showLocation"] = showLocation;
})(PS["Data.URI.Location"] = PS["Data.URI.Location"] || {});
(function(exports) {
    "use strict";

  // var frontendEnv = {development: true, facebookClientID: "asdf"};
  exports.envImpl = frontendEnv;
})(PS["Types.Env"] = PS["Types.Env"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Argonaut_JCursor = PS["Data.Argonaut.JCursor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var LocalCooking_Common_AuthToken = PS["LocalCooking.Common.AuthToken"];
  var Prelude = PS["Prelude"];
  var Test_QuickCheck = PS["Test.QuickCheck"];
  var Test_QuickCheck_Arbitrary = PS["Test.QuickCheck.Arbitrary"];
  var Test_QuickCheck_Gen = PS["Test.QuickCheck.Gen"];        
  var FBLoginReturnBad = (function () {
      function FBLoginReturnBad(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FBLoginReturnBad.create = function (value0) {
          return function (value1) {
              return new FBLoginReturnBad(value0, value1);
          };
      };
      return FBLoginReturnBad;
  })();
  var FBLoginReturnDenied = (function () {
      function FBLoginReturnDenied(value0) {
          this.value0 = value0;
      };
      FBLoginReturnDenied.create = function (value0) {
          return new FBLoginReturnDenied(value0);
      };
      return FBLoginReturnDenied;
  })();
  var FBLoginReturnBadParse = (function () {
      function FBLoginReturnBadParse() {

      };
      FBLoginReturnBadParse.value = new FBLoginReturnBadParse();
      return FBLoginReturnBadParse;
  })();
  var FBLoginReturnNoUser = (function () {
      function FBLoginReturnNoUser() {

      };
      FBLoginReturnNoUser.value = new FBLoginReturnNoUser();
      return FBLoginReturnNoUser;
  })();
  var AuthExistsFailure = (function () {
      function AuthExistsFailure() {

      };
      AuthExistsFailure.value = new AuthExistsFailure();
      return AuthExistsFailure;
  })();
  var PreliminaryAuthToken = function (x) {
      return x;
  }; 
  var decodeJsonAuthError = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      var str = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json))(function (v) {
          if (v === "bad-parse") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(FBLoginReturnBadParse.value);
          };
          if (v === "no-user") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(FBLoginReturnNoUser.value);
          };
          if (v === "exists-failure") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(AuthExistsFailure.value);
          };
          if (Data_Boolean.otherwise) {
              return Data_Argonaut_JCursor.fail(Data_Show.showString)("Not a AuthError");
          };
          throw new Error("Failed pattern match at Login.Error line 63, column 11 - line 68, column 5: " + [ Data_Unit.unit.constructor.name ]);
      });
      var obj = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          var denied = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(v)("fbDenied"))(function (v1) {
              return Data_Functor.map(Data_Either.functorEither)(FBLoginReturnDenied.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v1)("desc"));
          });
          var bad = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(v)("fbBad"))(function (v1) {
              return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(FBLoginReturnBad.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v1)("code")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v1)("msg"));
          });
          return Control_Alt.alt(Data_Either.altEither)(bad)(denied);
      });
      return Control_Alt.alt(Data_Either.altEither)(obj)(str);
  });
  var decodeJsonPreliminaryAuthToken = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson)))(json))(function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (v instanceof Data_Maybe.Just) {
              var token = Data_Functor.map(Data_Either.functorEither)(Data_Either.Right.create)(Data_Argonaut_Decode_Combinators.getField(LocalCooking_Common_AuthToken.decodeJsonAuthToken)(v.value0)("token"));
              var err = Data_Functor.map(Data_Either.functorEither)(Data_Either.Left.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonAuthError)(v.value0)("err"));
              return Data_Functor.map(Data_Either.functorEither)(function ($52) {
                  return PreliminaryAuthToken(Data_Maybe.Just.create($52));
              })(Control_Alt.alt(Data_Either.altEither)(err)(token));
          };
          throw new Error("Failed pattern match at Login.Error line 83, column 5 - line 88, column 59: " + [ v.constructor.name ]);
      });
  });
  exports["FBLoginReturnBad"] = FBLoginReturnBad;
  exports["FBLoginReturnDenied"] = FBLoginReturnDenied;
  exports["FBLoginReturnBadParse"] = FBLoginReturnBadParse;
  exports["FBLoginReturnNoUser"] = FBLoginReturnNoUser;
  exports["AuthExistsFailure"] = AuthExistsFailure;
  exports["PreliminaryAuthToken"] = PreliminaryAuthToken;
  exports["decodeJsonAuthError"] = decodeJsonAuthError;
  exports["decodeJsonPreliminaryAuthToken"] = decodeJsonPreliminaryAuthToken;
})(PS["Login.Error"] = PS["Login.Error"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Types.Env"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var LocalCooking_Common_Password = PS["LocalCooking.Common.Password"];
  var Login_Error = PS["Login.Error"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var env = {
      development: $foreign.envImpl.development,
      facebookClientID: $foreign.envImpl.facebookClientID,
      googleReCaptchaSiteKey: $foreign.envImpl.googleReCaptchaSiteKey,
      authToken: (function (dictPartial) {
          var __unused = function (dictPartial1) {
              return function ($dollar1) {
                  return $dollar1;
              };
          };
          return __unused(dictPartial)((function () {
              var v = Data_Argonaut_Decode_Class.decodeJson(Login_Error.decodeJsonPreliminaryAuthToken)($foreign.envImpl.authToken);
              if (v instanceof Data_Either.Right) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Types.Env line 36, column 32 - line 37, column 17: " + [ v.constructor.name ]);
          })());
      })(),
      salt: (function (dictPartial) {
          var __unused = function (dictPartial1) {
              return function ($dollar3) {
                  return $dollar3;
              };
          };
          return __unused(dictPartial)((function () {
              var v = Data_Argonaut_Decode_Class.decodeJson(LocalCooking_Common_Password.decodeJsonHashedPassword)($foreign.envImpl.salt);
              if (v instanceof Data_Either.Right) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Types.Env line 38, column 27 - line 39, column 17: " + [ v.constructor.name ]);
          })());
      })()
  };
  exports["env"] = env;
})(PS["Types.Env"] = PS["Types.Env"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Path_Pathy = PS["Data.Path.Pathy"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_URI = PS["Data.URI"];
  var Data_URI_Authority = PS["Data.URI.Authority"];
  var Data_URI_HierarchicalPart = PS["Data.URI.HierarchicalPart"];
  var Data_URI_Host = PS["Data.URI.Host"];
  var Data_URI_Query = PS["Data.URI.Query"];
  var Data_URI_Scheme = PS["Data.URI.Scheme"];
  var Data_URI_URI = PS["Data.URI.URI"];
  var Prelude = PS["Prelude"];
  var Types_Env = PS["Types.Env"];
  var facebookLoginLinkToURI = function (dictEncodeJson) {
      return function (v) {
          return new Data_URI_URI.URI(Data_Maybe.Just.create("https"), new Data_URI_HierarchicalPart.HierarchicalPart(Data_Maybe.Just.create(new Data_URI_Authority.Authority(Data_Maybe.Nothing.value, [ new Data_Tuple.Tuple(new Data_URI_Host.NameAddress("www.facebook.com"), Data_Maybe.Nothing.value) ])), Data_Maybe.Just.create(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.dir("v2.12")))(Data_Path_Pathy.dir("dialog")))(Data_Path_Pathy.file("oauth"))))), Data_Maybe.Just.create(Data_URI_Query.Query(Data_List_Types.Cons.create(Data_Tuple.Tuple.create("client_id")(new Data_Maybe.Just(Types_Env.env.facebookClientID)))(Data_List_Types.Cons.create(Data_Tuple.Tuple.create("redirect_uri")(Data_Maybe.Just.create(Data_URI_URI.print(v.redirectURL))))(new Data_List_Types.Cons(Data_Tuple.Tuple.create("state")(Data_Maybe.Just.create(Data_Show.show(Data_Argonaut_Core.showJson)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)(v.state)))), Data_List_Types.Nil.value))))), Data_Maybe.Nothing.value);
      };
  };
  exports["facebookLoginLinkToURI"] = facebookLoginLinkToURI;
})(PS["Facebook.Call"] = PS["Facebook.Call"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_History = PS["DOM.HTML.History"];
  var DOM_HTML_Location = PS["DOM.HTML.Location"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_HTML_Window_Extra = PS["DOM.HTML.Window.Extra"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_JCursor = PS["Data.Argonaut.JCursor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Path_Pathy = PS["Data.Path.Pathy"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_URI = PS["Data.URI"];
  var Data_URI_Location = PS["Data.URI.Location"];
  var Data_URI_Path = PS["Data.URI.Path"];
  var Data_URI_Query = PS["Data.URI.Query"];
  var Data_URI_URI = PS["Data.URI.URI"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Test_QuickCheck = PS["Test.QuickCheck"];
  var Test_QuickCheck_Arbitrary = PS["Test.QuickCheck.Arbitrary"];
  var Test_QuickCheck_Gen = PS["Test.QuickCheck.Gen"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];        
  var FacebookLoginReturn = (function () {
      function FacebookLoginReturn() {

      };
      FacebookLoginReturn.value = new FacebookLoginReturn();
      return FacebookLoginReturn;
  })();
  var RootLink = (function () {
      function RootLink() {

      };
      RootLink.value = new RootLink();
      return RootLink;
  })();
  var RegisterLink = (function () {
      function RegisterLink() {

      };
      RegisterLink.value = new RegisterLink();
      return RegisterLink;
  })();
  var MealsLink = (function () {
      function MealsLink() {

      };
      MealsLink.value = new MealsLink();
      return MealsLink;
  })();
  var ChefsLink = (function () {
      function ChefsLink() {

      };
      ChefsLink.value = new ChefsLink();
      return ChefsLink;
  })();
  var LogoPng = (function () {
      function LogoPng() {

      };
      LogoPng.value = new LogoPng();
      return LogoPng;
  })();
  var Logo40Png = (function () {
      function Logo40Png() {

      };
      Logo40Png.value = new Logo40Png();
      return Logo40Png;
  })();
  var LogoWhitePng = (function () {
      function LogoWhitePng() {

      };
      LogoWhitePng.value = new LogoWhitePng();
      return LogoWhitePng;
  })();
  var LogoWhite40Png = (function () {
      function LogoWhite40Png() {

      };
      LogoWhite40Png.value = new LogoWhite40Png();
      return LogoWhite40Png;
  })();
  var IconPng = (function () {
      function IconPng() {

      };
      IconPng.value = new IconPng();
      return IconPng;
  })();
  var IconSvg = (function () {
      function IconSvg() {

      };
      IconSvg.value = new IconSvg();
      return IconSvg;
  })();
  var ToLocation = function (toLocation) {
      this.toLocation = toLocation;
  };
  var toLocationThirdPartyLoginReturnLinks = new ToLocation(function (x) {
      return new Data_URI_Location.Location(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.file("facebookLoginReturn"))), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
  });
  var toLocationSiteLinks = new ToLocation(function (x) {
      if (x instanceof RootLink) {
          return new Data_URI_Location.Location(new Data_Either.Left(Data_Path_Pathy.rootDir), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
      };
      if (x instanceof MealsLink) {
          return new Data_URI_Location.Location(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.file("meals"))), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
      };
      if (x instanceof ChefsLink) {
          return new Data_URI_Location.Location(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.file("chefs"))), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
      };
      if (x instanceof RegisterLink) {
          return new Data_URI_Location.Location(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.file("register"))), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
      };
      throw new Error("Failed pattern match at Links line 128, column 18 - line 132, column 83: " + [ x.constructor.name ]);
  });
  var toLocationLogoLinks = new ToLocation(function (x) {
      if (x instanceof LogoPng) {
          return new Data_URI_Location.Location(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.dir("static")))(Data_Path_Pathy.dir("images")))(Data_Path_Pathy.file("logo.png"))), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
      };
      if (x instanceof Logo40Png) {
          return new Data_URI_Location.Location(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.dir("static")))(Data_Path_Pathy.dir("images")))(Data_Path_Pathy.file("logo-40.png"))), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
      };
      if (x instanceof LogoWhitePng) {
          return new Data_URI_Location.Location(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.dir("static")))(Data_Path_Pathy.dir("images")))(Data_Path_Pathy.file("logo-white.png"))), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
      };
      if (x instanceof LogoWhite40Png) {
          return new Data_URI_Location.Location(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.dir("static")))(Data_Path_Pathy.dir("images")))(Data_Path_Pathy.file("logo-white-40.png"))), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
      };
      if (x instanceof IconPng) {
          return new Data_URI_Location.Location(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.dir("static")))(Data_Path_Pathy.dir("images")))(Data_Path_Pathy.file("icon.png"))), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
      };
      if (x instanceof IconSvg) {
          return new Data_URI_Location.Location(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.dir("static")))(Data_Path_Pathy.dir("images")))(Data_Path_Pathy.file("icon.svg"))), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
      };
      throw new Error("Failed pattern match at Links line 49, column 18 - line 55, column 112: " + [ x.constructor.name ]);
  });
  var toLocation = function (dict) {
      return dict.toLocation;
  };   
  var siteLinksToDocumentTitle = function (x) {
      return DOM_HTML_History.DocumentTitle((function () {
          if (x instanceof RootLink) {
              return "Local Cooking";
          };
          if (x instanceof MealsLink) {
              return "Meals - Local Cooking";
          };
          if (x instanceof ChefsLink) {
              return "Chefs - Local Cooking";
          };
          if (x instanceof RegisterLink) {
              return "Register - Local Cooking";
          };
          throw new Error("Failed pattern match at Links line 135, column 46 - line 142, column 1: " + [ x.constructor.name ]);
      })());
  };
  var siteLinksParser = function (v) {
      var siteLinksPathParser = (function () {
          var divider = Text_Parsing_StringParser_String["char"]("/");
          var root = Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(RootLink.value)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(divider)(Text_Parsing_StringParser_String.eof));
          var register = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(divider))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String.string("register")))(function () {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(RegisterLink.value);
              });
          });
          var meals = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(divider))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String.string("meals")))(function () {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(MealsLink.value);
              });
          });
          var chefs = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(divider))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String.string("chefs")))(function () {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(ChefsLink.value);
              });
          });
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Text_Parsing_StringParser["try"](meals))(Text_Parsing_StringParser["try"](chefs)))(Text_Parsing_StringParser["try"](register)))(root);
      })();
      var v1 = Text_Parsing_StringParser.runParser(siteLinksPathParser)(Data_URI_Path.printPath(v.value0));
      if (v1 instanceof Data_Either.Left) {
          return new Data_Either.Left(Data_Show.show(Text_Parsing_StringParser.showParseError)(v1.value0));
      };
      if (v1 instanceof Data_Either.Right) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(v1.value0);
      };
      throw new Error("Failed pattern match at Links line 145, column 3 - line 147, column 28: " + [ v1.constructor.name ]);
  };
  var showSiteLinks = new Data_Show.Show(function ($69) {
      return Data_URI_Location.printLocation(toLocation(toLocationSiteLinks)($69));
  });
  var genericSiteLinks = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Links.RootLink" && v.value1.length === 0)) {
          return new Data_Maybe.Just(RootLink.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Links.RegisterLink" && v.value1.length === 0)) {
          return new Data_Maybe.Just(RegisterLink.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Links.MealsLink" && v.value1.length === 0)) {
          return new Data_Maybe.Just(MealsLink.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Links.ChefsLink" && v.value1.length === 0)) {
          return new Data_Maybe.Just(ChefsLink.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Links.SiteLinks", [ {
          sigConstructor: "Links.RootLink",
          sigValues: [  ]
      }, {
          sigConstructor: "Links.RegisterLink",
          sigValues: [  ]
      }, {
          sigConstructor: "Links.MealsLink",
          sigValues: [  ]
      }, {
          sigConstructor: "Links.ChefsLink",
          sigValues: [  ]
      } ]);
  }, function (v) {
      if (v instanceof RootLink) {
          return new Data_Generic.SProd("Links.RootLink", [  ]);
      };
      if (v instanceof RegisterLink) {
          return new Data_Generic.SProd("Links.RegisterLink", [  ]);
      };
      if (v instanceof MealsLink) {
          return new Data_Generic.SProd("Links.MealsLink", [  ]);
      };
      if (v instanceof ChefsLink) {
          return new Data_Generic.SProd("Links.ChefsLink", [  ]);
      };
      throw new Error("Failed pattern match at Links line 107, column 8 - line 107, column 54: " + [ v.constructor.name ]);
  });
  var eqSiteLinks = new Data_Eq.Eq(Data_Generic.gEq(genericSiteLinks));
  var encodeJsonSiteLinks = new Data_Argonaut_Encode_Class.EncodeJson(function (x) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Show.show(showSiteLinks)(x));
  });
  var pushState$prime = function (x) {
      return function (h) {
          return DOM_HTML_History.pushState(Data_Foreign.toForeign(Data_Argonaut_Encode_Class.encodeJson(encodeJsonSiteLinks)(x)))(siteLinksToDocumentTitle(x))(DOM_HTML_History.URL(Data_URI_Location.printLocation(toLocation(toLocationSiteLinks)(x))))(h);
      };
  };
  var replaceState$prime = function (x) {
      return function (h) {
          return DOM_HTML_History.replaceState(Data_Foreign.toForeign(Data_Argonaut_Encode_Class.encodeJson(encodeJsonSiteLinks)(x)))(siteLinksToDocumentTitle(x))(DOM_HTML_History.URL(Data_URI_Location.printLocation(toLocation(toLocationSiteLinks)(x))))(h);
      };
  };
  var initSiteLinks = function __do() {
      var v = DOM_HTML.window();
      var v1 = DOM_HTML_Window.location(v)();
      var v2 = DOM_HTML_Window.history(v)();
      var v3 = DOM_HTML_Location.href(v1)();
      var v4 = Data_URI_URI.parse(v3);
      if (v4 instanceof Data_Either.Left) {
          Control_Monad_Eff_Console.warn("Href parsing error: " + Data_Show.show(Text_Parsing_StringParser.showParseError)(v4.value0))();
          replaceState$prime(RootLink.value)(v2)();
          return RootLink.value;
      };
      if (v4 instanceof Data_Either.Right) {
          var v5 = Data_URI_Location.fromURI(v4.value0);
          if (v5 instanceof Data_Maybe.Nothing) {
              Control_Monad_Eff_Console.warn("URI can't be a location: " + Data_Show.show(Data_URI_URI.showURI)(v4.value0))();
              replaceState$prime(RootLink.value)(v2)();
              return RootLink.value;
          };
          if (v5 instanceof Data_Maybe.Just) {
              var v6 = siteLinksParser(v5.value0.location);
              if (v6 instanceof Data_Either.Left) {
                  Control_Monad_Eff_Console.warn("Location can't be a SiteLinks: " + (v6.value0 + (", " + Data_Show.show(Data_URI_Location.showLocation)(v5.value0.location))))();
                  replaceState$prime(RootLink.value)(v2)();
                  return RootLink.value;
              };
              if (v6 instanceof Data_Either.Right) {
                  (function () {
                      if (v5.value0.location.value1 instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                      };
                      if (v5.value0.location.value1 instanceof Data_Maybe.Just) {
                          var v7 = Data_StrMap.lookup("authToken")(Data_StrMap.fromFoldable(Data_List_Types.foldableList)(v5.value0.location.value1.value0));
                          if (v7 instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                          };
                          if (v7 instanceof Data_Maybe.Just) {
                              return replaceState$prime(v6.value0)(v2);
                          };
                          throw new Error("Failed pattern match at Links line 102, column 32 - line 104, column 42: " + [ v7.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Links line 100, column 11 - line 104, column 42: " + [ v5.value0.location.value1.constructor.name ]);
                  })()();
                  return v6.value0;
              };
              throw new Error("Failed pattern match at Links line 93, column 58 - line 105, column 17: " + [ v6.constructor.name ]);
          };
          throw new Error("Failed pattern match at Links line 88, column 18 - line 105, column 17: " + [ v5.constructor.name ]);
      };
      throw new Error("Failed pattern match at Links line 83, column 3 - line 105, column 17: " + [ v4.constructor.name ]);
  };
  var decodeJsonSiteLinks = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json))(function (v) {
          var v1 = Text_Parsing_StringParser.runParser(Data_URI_Location.parseLocation)(v);
          if (v1 instanceof Data_Either.Left) {
              return Data_Argonaut_JCursor.fail(Data_Show.showString)(Data_Show.show(Text_Parsing_StringParser.showParseError)(v1.value0));
          };
          if (v1 instanceof Data_Either.Right) {
              var v2 = siteLinksParser(v1.value0);
              if (v2 instanceof Data_Either.Left) {
                  return Data_Argonaut_JCursor.fail(Data_Show.showString)(v2.value0);
              };
              if (v2 instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(v2.value0);
              };
              throw new Error("Failed pattern match at Links line 123, column 20 - line 125, column 26: " + [ v2.constructor.name ]);
          };
          throw new Error("Failed pattern match at Links line 121, column 5 - line 125, column 26: " + [ v1.constructor.name ]);
      });
  });
  var onPopState = function (go) {
      return function (w) {
          var onPopState$prime = function (f) {
              return Control_Monad_Eff_Uncurried.runEffFn2(DOM_HTML_Window_Extra.onPopStateImpl)(Control_Monad_Eff_Uncurried.mkEffFn1(f))(w);
          };
          return onPopState$prime(function (fgn) {
              var v = Data_Argonaut_Decode_Class.decodeJson(decodeJsonSiteLinks)(Data_Foreign.unsafeFromForeign(fgn));
              if (v instanceof Data_Either.Left) {
                  return Control_Monad_Eff_Exception["throw"](v.value0);
              };
              if (v instanceof Data_Either.Right) {
                  return go(v.value0);
              };
              throw new Error("Failed pattern match at Links line 196, column 23 - line 198, column 35: " + [ v.constructor.name ]);
          });
      };
  };
  exports["toLocation"] = toLocation;
  exports["ToLocation"] = ToLocation;
  exports["LogoPng"] = LogoPng;
  exports["Logo40Png"] = Logo40Png;
  exports["LogoWhitePng"] = LogoWhitePng;
  exports["LogoWhite40Png"] = LogoWhite40Png;
  exports["IconPng"] = IconPng;
  exports["IconSvg"] = IconSvg;
  exports["RootLink"] = RootLink;
  exports["RegisterLink"] = RegisterLink;
  exports["MealsLink"] = MealsLink;
  exports["ChefsLink"] = ChefsLink;
  exports["initSiteLinks"] = initSiteLinks;
  exports["siteLinksToDocumentTitle"] = siteLinksToDocumentTitle;
  exports["siteLinksParser"] = siteLinksParser;
  exports["pushState'"] = pushState$prime;
  exports["onPopState"] = onPopState;
  exports["FacebookLoginReturn"] = FacebookLoginReturn;
  exports["toLocationLogoLinks"] = toLocationLogoLinks;
  exports["genericSiteLinks"] = genericSiteLinks;
  exports["showSiteLinks"] = showSiteLinks;
  exports["eqSiteLinks"] = eqSiteLinks;
  exports["encodeJsonSiteLinks"] = encodeJsonSiteLinks;
  exports["decodeJsonSiteLinks"] = decodeJsonSiteLinks;
  exports["toLocationSiteLinks"] = toLocationSiteLinks;
  exports["toLocationThirdPartyLoginReturnLinks"] = toLocationThirdPartyLoginReturnLinks;
})(PS["Links"] = PS["Links"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Links = PS["Links"];
  var Prelude = PS["Prelude"];
  var Test_QuickCheck = PS["Test.QuickCheck"];
  var Test_QuickCheck_Arbitrary = PS["Test.QuickCheck.Arbitrary"];
  var Test_QuickCheck_Gen = PS["Test.QuickCheck.Gen"];                                   
  var encodeJsonFacebookLoginState = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Links.encodeJsonSiteLinks)("origin")(v.origin))(Data_Argonaut_Core.jsonEmptyObject);
  });
  exports["encodeJsonFacebookLoginState"] = encodeJsonFacebookLoginState;
})(PS["Facebook.State"] = PS["Facebook.State"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var subscribeIxWithKey = function (f) {
      return function (k) {
          return function (v) {
              return function __do() {
                  var v1 = (function __do() {
                      var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_StrMap.lookup(k))(Control_Monad_Eff_Ref.readRef(v.individual))();
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Eff_Ref.readRef(v.broadcast)();
                      };
                      if (v1 instanceof Data_Maybe.Just) {
                          Control_Monad_Eff_Ref.modifyRef(v.individual)(Data_StrMap["delete"](k))();
                          return v1.value0;
                      };
                      throw new Error("Failed pattern match at IxSignal.Internal line 51, column 5 - line 55, column 15: " + [ v1.constructor.name ]);
                  })();
                  f(k)(v1)();
                  return Control_Monad_Eff_Ref.modifyRef(v.subscribers)(Data_StrMap.insert(k)(f))();
              };
          };
      };
  };
  var subscribeIx = function (f) {
      return subscribeIxWithKey(function (v) {
          return f;
      });
  };
  var set = function (x) {
      return function (v) {
          return function __do() {
              var v1 = Control_Monad_Eff_Ref.readRef(v.subscribers)();
              Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(function (v2) {
                  return v2.value1(v2.value0)(x);
              })(Data_StrMap.toUnfoldable(Data_Unfoldable.unfoldableArray)(v1))();
              return Control_Monad_Eff_Ref.writeRef(v.broadcast)(x)();
          };
      };
  };
  var make = function (x) {
      return function __do() {
          var v = Control_Monad_Eff_Ref.newRef(Data_StrMap.empty)();
          var v1 = Control_Monad_Eff_Ref.newRef(x)();
          var v2 = Control_Monad_Eff_Ref.newRef(Data_StrMap.empty)();
          return {
              subscribers: v,
              individual: v2,
              broadcast: v1
          };
      };
  };
  var get = function (v) {
      return Control_Monad_Eff_Ref.readRef(v.broadcast);
  };
  var deleteSubscriber = function (k) {
      return function (v) {
          return Control_Monad_Eff_Ref.modifyRef(v.subscribers)(Data_StrMap["delete"](k));
      };
  };
  var deleteIndividual = function (k) {
      return function (v) {
          return Control_Monad_Eff_Ref.modifyRef(v.individual)(Data_StrMap["delete"](k));
      };
  };
  var $$delete = function (k) {
      return function (sig) {
          return function __do() {
              var v = deleteSubscriber(k)(sig)();
              return deleteIndividual(k)(sig)();
          };
      };
  };
  exports["subscribeIx"] = subscribeIx;
  exports["subscribeIxWithKey"] = subscribeIxWithKey;
  exports["set"] = set;
  exports["get"] = get;
  exports["deleteSubscriber"] = deleteSubscriber;
  exports["deleteIndividual"] = deleteIndividual;
  exports["delete"] = $$delete;
  exports["make"] = make;
})(PS["IxSignal.Internal"] = PS["IxSignal.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Browser_WebStorage = PS["Browser.WebStorage"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var LocalCooking_Common_AuthToken = PS["LocalCooking.Common.AuthToken"];
  var Prelude = PS["Prelude"];        
  var storeAuthToken = function (authToken) {
      return Browser_WebStorage.setItem(Browser_WebStorage.storageLocalStorage)(Browser_WebStorage.localStorage)("authToken")(Data_Show.show(Data_Argonaut_Core.showJson)(Data_Argonaut_Encode_Class.encodeJson(LocalCooking_Common_AuthToken.encodeJsonAuthToken)(authToken)));
  };
  var getStoredAuthToken = function __do() {
      var v = Browser_WebStorage.getItem(Browser_WebStorage.storageLocalStorage)(Browser_WebStorage.localStorage)("authToken")();
      if (v instanceof Data_Maybe.Nothing) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_Maybe.Just) {
          var v1 = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(v.value0))(Data_Argonaut_Decode_Class.decodeJson(LocalCooking_Common_AuthToken.decodeJsonAuthToken));
          if (v1 instanceof Data_Either.Left) {
              return Data_Maybe.Nothing.value;
          };
          if (v1 instanceof Data_Either.Right) {
              return new Data_Maybe.Just(v1.value0);
          };
          throw new Error("Failed pattern match at Login.Storage line 18, column 20 - line 20, column 31: " + [ v1.constructor.name ]);
      };
      throw new Error("Failed pattern match at Login.Storage line 16, column 3 - line 20, column 31: " + [ v.constructor.name ]);
  };
  exports["getStoredAuthToken"] = getStoredAuthToken;
  exports["storeAuthToken"] = storeAuthToken;
})(PS["Login.Storage"] = PS["Login.Storage"] || {});
(function(exports) {
    "use strict";
  var inj =require("react-tap-event-plugin"); 

  exports.injectTapEvent = function injectTapEvent () {
    inj();
  };
})(PS["MaterialUI.InjectTapEvent"] = PS["MaterialUI.InjectTapEvent"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.InjectTapEvent"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  exports["injectTapEvent"] = $foreign.injectTapEvent;
})(PS["MaterialUI.InjectTapEvent"] = PS["MaterialUI.InjectTapEvent"] || {});
(function(exports) {
  /* global exports */
  /* global XMLHttpRequest */
  /* global module */
  /* global process */
  "use strict";

  exports._ajax = function () {
    var platformSpecific = { };
    if (typeof module !== "undefined" && module.require && !(typeof process !== "undefined" && process.versions["electron"])) {
      // We are on node.js
      platformSpecific.newXHR = function () {
        var XHR = module.require("xhr2");
        return new XHR();
      };

      platformSpecific.fixupUrl = function (url) {
        var urllib = module.require("url");
        var u = urllib.parse(url);
        u.protocol = u.protocol || "http:";
        u.hostname = u.hostname || "localhost";
        return urllib.format(u);
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    } else {
      // We are in the browser
      platformSpecific.newXHR = function () {
        return new XMLHttpRequest();
      };

      platformSpecific.fixupUrl = function (url) {
        return url || "/";
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    }

    return function (mkHeader, options) {
      return function (errback, callback) {
        var xhr = platformSpecific.newXHR();
        var fixedUrl = platformSpecific.fixupUrl(options.url);
        xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);
        if (options.headers) {
          try {
            for (var i = 0, header; (header = options.headers[i]) != null; i++) {
              xhr.setRequestHeader(header.field, header.value);
            }
          } catch (e) {
            errback(e);
          }
        }
        xhr.onerror = function () {
          errback(new Error("AJAX request failed: " + options.method + " " + options.url));
        };
        xhr.onload = function () {
          callback({
            status: xhr.status,
            headers: xhr.getAllResponseHeaders().split("\r\n")
              .filter(function (header) {
                return header.length > 0;
              })
              .map(function (header) {
                var i = header.indexOf(":");
                return mkHeader(header.substring(0, i))(header.substring(i + 2));
              }),
            response: platformSpecific.getResponse(xhr)
          });
        };
        xhr.responseType = options.responseType;
        xhr.withCredentials = options.withCredentials;
        xhr.send(options.content);

        return function (/* error */) {
          return function (cancelErrback, cancelCallback) {
            try {
              xhr.abort();
            } catch (e) {
              return cancelErrback(e);
            }
            return cancelCallback();
          };
        };
      };
    };
  }();
})(PS["Network.HTTP.Affjax"] = PS["Network.HTTP.Affjax"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_File_Types = PS["DOM.File.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var DOM_XHR_Types = PS["DOM.XHR.Types"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_FormURLEncoded = PS["Data.FormURLEncoded"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_MediaType_Common = PS["Data.MediaType.Common"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var Requestable = function (toRequest) {
      this.toRequest = toRequest;
  };
  var toRequest = function (dict) {
      return dict.toRequest;
  };
  var requestableJson = new Requestable(function (json) {
      return new Data_Tuple.Tuple(new Data_Maybe.Just(Data_MediaType_Common.applicationJSON), Data_Show.show(Data_Argonaut_Core.showJson)(json));
  });
  exports["Requestable"] = Requestable;
  exports["toRequest"] = toRequest;
  exports["requestableJson"] = requestableJson;
})(PS["Network.HTTP.Affjax.Request"] = PS["Network.HTTP.Affjax.Request"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_File_Types = PS["DOM.File.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_MediaType_Common = PS["Data.MediaType.Common"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var ArrayBufferResponse = (function () {
      function ArrayBufferResponse() {

      };
      ArrayBufferResponse.value = new ArrayBufferResponse();
      return ArrayBufferResponse;
  })();
  var BlobResponse = (function () {
      function BlobResponse() {

      };
      BlobResponse.value = new BlobResponse();
      return BlobResponse;
  })();
  var DocumentResponse = (function () {
      function DocumentResponse() {

      };
      DocumentResponse.value = new DocumentResponse();
      return DocumentResponse;
  })();
  var JSONResponse = (function () {
      function JSONResponse() {

      };
      JSONResponse.value = new JSONResponse();
      return JSONResponse;
  })();
  var StringResponse = (function () {
      function StringResponse() {

      };
      StringResponse.value = new StringResponse();
      return StringResponse;
  })();
  var Respondable = function (fromResponse, responseType) {
      this.fromResponse = fromResponse;
      this.responseType = responseType;
  }; 
  var responseTypeToString = function (v) {
      if (v instanceof ArrayBufferResponse) {
          return "arraybuffer";
      };
      if (v instanceof BlobResponse) {
          return "blob";
      };
      if (v instanceof DocumentResponse) {
          return "document";
      };
      if (v instanceof JSONResponse) {
          return "text";
      };
      if (v instanceof StringResponse) {
          return "text";
      };
      throw new Error("Failed pattern match at Network.HTTP.Affjax.Response line 48, column 1 - line 48, column 61: " + [ v.constructor.name ]);
  };
  var responseType = function (dict) {
      return dict.responseType;
  };                                                                                                                                     
  var responsableJson = new Respondable(function ($8) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($8);
  }, new Data_Tuple.Tuple(new Data_Maybe.Just(Data_MediaType_Common.applicationJSON), JSONResponse.value));                                                             
  var fromResponse = function (dict) {
      return dict.fromResponse;
  };
  exports["ArrayBufferResponse"] = ArrayBufferResponse;
  exports["BlobResponse"] = BlobResponse;
  exports["DocumentResponse"] = DocumentResponse;
  exports["JSONResponse"] = JSONResponse;
  exports["StringResponse"] = StringResponse;
  exports["responseTypeToString"] = responseTypeToString;
  exports["Respondable"] = Respondable;
  exports["responseType"] = responseType;
  exports["fromResponse"] = fromResponse;
  exports["responsableJson"] = responsableJson;
})(PS["Network.HTTP.Affjax.Response"] = PS["Network.HTTP.Affjax.Response"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Accept = (function () {
      function Accept(value0) {
          this.value0 = value0;
      };
      Accept.create = function (value0) {
          return new Accept(value0);
      };
      return Accept;
  })();
  var ContentType = (function () {
      function ContentType(value0) {
          this.value0 = value0;
      };
      ContentType.create = function (value0) {
          return new ContentType(value0);
      };
      return ContentType;
  })();
  var RequestHeader = (function () {
      function RequestHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RequestHeader.create = function (value0) {
          return function (value1) {
              return new RequestHeader(value0, value1);
          };
      };
      return RequestHeader;
  })();
  var requestHeaderValue = function (v) {
      if (v instanceof Accept) {
          return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
      };
      if (v instanceof ContentType) {
          return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
      };
      if (v instanceof RequestHeader) {
          return v.value1;
      };
      throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 29, column 1 - line 29, column 46: " + [ v.constructor.name ]);
  };
  var requestHeaderName = function (v) {
      if (v instanceof Accept) {
          return "Accept";
      };
      if (v instanceof ContentType) {
          return "Content-Type";
      };
      if (v instanceof RequestHeader) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 24, column 1 - line 24, column 45: " + [ v.constructor.name ]);
  };
  exports["Accept"] = Accept;
  exports["ContentType"] = ContentType;
  exports["RequestHeader"] = RequestHeader;
  exports["requestHeaderName"] = requestHeaderName;
  exports["requestHeaderValue"] = requestHeaderValue;
})(PS["Network.HTTP.RequestHeader"] = PS["Network.HTTP.RequestHeader"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Generic = PS["Data.Generic"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var ResponseHeader = (function () {
      function ResponseHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ResponseHeader.create = function (value0) {
          return function (value1) {
              return new ResponseHeader(value0, value1);
          };
      };
      return ResponseHeader;
  })();
  var responseHeader = function (field) {
      return function (value) {
          return new ResponseHeader(field, value);
      };
  };
  exports["responseHeader"] = responseHeader;
})(PS["Network.HTTP.ResponseHeader"] = PS["Network.HTTP.ResponseHeader"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Network.HTTP.Affjax"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_Compat = PS["Control.Monad.Aff.Compat"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HTTP_Method = PS["Data.HTTP.Method"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Tuple = PS["Data.Tuple"];
  var $$Math = PS["Math"];
  var Network_HTTP_Affjax_Request = PS["Network.HTTP.Affjax.Request"];
  var Network_HTTP_Affjax_Response = PS["Network.HTTP.Affjax.Response"];
  var Network_HTTP_RequestHeader = PS["Network.HTTP.RequestHeader"];
  var Network_HTTP_ResponseHeader = PS["Network.HTTP.ResponseHeader"];
  var Network_HTTP_StatusCode = PS["Network.HTTP.StatusCode"];
  var Prelude = PS["Prelude"];
  var defaultRequest = {
      method: new Data_Either.Left(Data_HTTP_Method.GET.value),
      url: "/",
      headers: [  ],
      content: Data_Maybe.Nothing.value,
      username: Data_Maybe.Nothing.value,
      password: Data_Maybe.Nothing.value,
      withCredentials: false
  };
  var affjax = function (dictRequestable) {
      return function (dictRespondable) {
          return function (req) {
              var responseSettings = Network_HTTP_Affjax_Response.responseType(dictRespondable);
              var requestSettings = (function () {
                  var v = Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_Affjax_Request.toRequest(dictRequestable))(req.content);
                  if (v instanceof Data_Maybe.Nothing) {
                      return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return new Data_Tuple.Tuple(v.value0.value0, new Data_Maybe.Just(v.value0.value1));
                  };
                  throw new Error("Failed pattern match at Network.HTTP.Affjax line 250, column 21 - line 252, column 49: " + [ v.constructor.name ]);
              })();
              var parseJSON = function ($98) {
                  return Data_Either.either(function ($99) {
                      return Data_Foreign.fail(Data_Foreign.JSONError.create($99));
                  })(function ($100) {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Foreign.toForeign($100));
                  })(Data_Argonaut_Parser.jsonParser($98));
              };
              var fromResponse$prime = (function () {
                  var v = Data_Tuple.snd(responseSettings);
                  if (v instanceof Network_HTTP_Affjax_Response.JSONResponse) {
                      return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Network_HTTP_Affjax_Response.fromResponse(dictRespondable))(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(parseJSON)(Data_Foreign.readString));
                  };
                  return Network_HTTP_Affjax_Response.fromResponse(dictRespondable);
              })();
              var addHeader = function (mh) {
                  return function (hs) {
                      if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Network_HTTP_RequestHeader.requestHeaderName)(mh.value0))(hs)) {
                          return Data_Array.snoc(hs)(mh.value0);
                      };
                      return hs;
                  };
              };
              var headers = addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_RequestHeader.ContentType.create)(Data_Tuple.fst(requestSettings)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_RequestHeader.Accept.create)(Data_Tuple.fst(responseSettings)))(req.headers));
              var req$prime = {
                  method: Data_HTTP_Method.print(req.method),
                  url: req.url,
                  headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
                      return {
                          field: Network_HTTP_RequestHeader.requestHeaderName(h),
                          value: Network_HTTP_RequestHeader.requestHeaderValue(h)
                      };
                  })(headers),
                  content: Data_Nullable.toNullable(Data_Tuple.snd(requestSettings)),
                  responseType: Network_HTTP_Affjax_Response.responseTypeToString(Data_Tuple.snd(responseSettings)),
                  username: Data_Nullable.toNullable(req.username),
                  password: Data_Nullable.toNullable(req.password),
                  withCredentials: req.withCredentials
              };
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_Compat.fromEffFnAff($foreign._ajax(Network_HTTP_ResponseHeader.responseHeader, req$prime)))(function (v) {
                  var v1 = Data_Functor.map(Data_Either.functorEither)(function (v2) {
                      var $68 = {};
                      for (var $69 in v) {
                          if ({}.hasOwnProperty.call(v, $69)) {
                              $68[$69] = v[$69];
                          };
                      };
                      $68.response = v2;
                      return $68;
                  })(Control_Monad_Except.runExcept(fromResponse$prime(v.response)));
                  if (v1 instanceof Data_Either.Left) {
                      return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error(Data_Show.show(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(v1.value0)));
                  };
                  if (v1 instanceof Data_Either.Right) {
                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1.value0);
                  };
                  throw new Error("Failed pattern match at Network.HTTP.Affjax line 232, column 3 - line 234, column 28: " + [ v1.constructor.name ]);
              });
          };
      };
  };
  var post = function (dictRequestable) {
      return function (dictRespondable) {
          return function (u) {
              return function (c) {
                  return affjax(dictRequestable)(dictRespondable)((function () {
                      var $86 = {};
                      for (var $87 in defaultRequest) {
                          if ({}.hasOwnProperty.call(defaultRequest, $87)) {
                              $86[$87] = defaultRequest[$87];
                          };
                      };
                      $86.method = new Data_Either.Left(Data_HTTP_Method.POST.value);
                      $86.url = u;
                      $86.content = new Data_Maybe.Just(c);
                      return $86;
                  })());
              };
          };
      };
  };
  exports["defaultRequest"] = defaultRequest;
  exports["affjax"] = affjax;
  exports["post"] = post;
})(PS["Network.HTTP.Affjax"] = PS["Network.HTTP.Affjax"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  var ReactDOM =require("react-dom");
  var ReactDOMServer =require("react-dom/server"); 

  exports.renderImpl = function (nothing, just, element, container) {
    var result = ReactDOM.render(element, container);
    return result === null ? nothing : just(result);
  };
})(PS["ReactDOM"] = PS["ReactDOM"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["ReactDOM"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                                                     
  var render = Control_Monad_Eff_Uncurried.runEffFn4($foreign.renderImpl)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  exports["render"] = render;
})(PS["ReactDOM"] = PS["ReactDOM"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var subscribe = function (f) {
      return function (v) {
          return function __do() {
              var v1 = Control_Monad_Eff_Ref.readRef(v.value)();
              f(v1)();
              return Control_Monad_Eff_Ref.modifyRef(v.subscribers)(function (xs) {
                  return Data_Array.snoc(xs)(f);
              })();
          };
      };
  };
  var set = function (x) {
      return function (v) {
          return function __do() {
              var v1 = Control_Monad_Eff_Ref.readRef(v.subscribers)();
              Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(function (f) {
                  return f(x);
              })(v1)();
              return Control_Monad_Eff_Ref.writeRef(v.value)(x)();
          };
      };
  };
  var make = function (x) {
      return function __do() {
          var v = Control_Monad_Eff_Ref.newRef([  ])();
          var v1 = Control_Monad_Eff_Ref.newRef(x)();
          return {
              subscribers: v,
              value: v1
          };
      };
  };
  var get = function (v) {
      return Control_Monad_Eff_Ref.readRef(v.value);
  };
  exports["subscribe"] = subscribe;
  exports["set"] = set;
  exports["get"] = get;
  exports["make"] = make;
})(PS["Signal.Internal"] = PS["Signal.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Now = PS["Control.Monad.Eff.Now"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var DOM = PS["DOM"];
  var DOM_Event_EventTarget = PS["DOM.Event.EventTarget"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Document = PS["DOM.HTML.Document"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_Node_Document = PS["DOM.Node.Document"];
  var DOM_Node_Element = PS["DOM.Node.Element"];
  var Data_Array = PS["Data.Array"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Undefinable = PS["Data.Undefinable"];
  var Prelude = PS["Prelude"];
  var Signal = PS["Signal"];
  var Signal_Internal = PS["Signal.Internal"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var windowDimensions = function __do() {
      var v = DOM_HTML.window();
      var v1 = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Signal_Internal.make)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(function (w) {
          return function (h) {
              return {
                  w: w,
                  h: h
              };
          };
      })(DOM_HTML_Window.innerWidth(v)))(DOM_HTML_Window.innerHeight(v)))();
      var go = function (event) {
          return function __do() {
              var v2 = DOM_HTML_Window.innerWidth(v)();
              var v3 = DOM_HTML_Window.innerHeight(v)();
              return Signal_Internal.set({
                  w: v2,
                  h: v3
              })(v1)();
          };
      };
      DOM_Event_EventTarget.addEventListener("resize")(DOM_Event_EventTarget.eventListener(go))(false)(DOM_HTML_Types.windowToEventTarget(v))();
      return v1;
  };
  exports["windowDimensions"] = windowDimensions;
})(PS["Signal.DOM"] = PS["Signal.DOM"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Now = PS["Control.Monad.Eff.Now"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Timer = PS["Control.Monad.Eff.Timer"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Signal_Internal = PS["Signal.Internal"];
  var debounce = function (v) {
      return function (sig) {
          return function __do() {
              var v1 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
              var v2 = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Signal_Internal.make)(Signal_Internal.get(sig))();
              Signal_Internal.subscribe(function (x) {
                  return function __do() {
                      var v3 = Control_Monad_Eff_Ref.readRef(v1)();
                      (function () {
                          if (v3 instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                          };
                          if (v3 instanceof Data_Maybe.Just) {
                              return Control_Monad_Eff_Timer.clearTimeout(v3.value0);
                          };
                          throw new Error("Failed pattern match at Signal.Time line 67, column 17 - line 69, column 53: " + [ v3.constructor.name ]);
                      })()();
                      var v4 = Control_Monad_Eff_Timer.setTimeout(Data_Int.round(v))(function __do() {
                          Control_Monad_Eff_Ref.writeRef(v1)(Data_Maybe.Nothing.value)();
                          return Signal_Internal.set(x)(v2)();
                      })();
                      return Control_Monad_Eff_Ref.writeRef(v1)(new Data_Maybe.Just(v4))();
                  };
              })(sig)();
              return v2;
          };
      };
  };
  exports["debounce"] = debounce;
})(PS["Signal.Time"] = PS["Signal.Time"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_JCursor = PS["Data.Argonaut.JCursor"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var PingPong = function (x) {
      return x;
  };
  var encodeJsonPingPong = function (dictEncodeJson) {
      return new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)("");
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonArray(dictEncodeJson))([ v.value0 ]);
          };
          throw new Error("Failed pattern match at Sparrow.Ping line 13, column 30 - line 15, column 29: " + [ v.constructor.name ]);
      });
  };
  var decodeJsonPingPong = function (dictDecodeJson) {
      return new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
          var ping = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json))(function (v) {
              var $11 = v === "";
              if ($11) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
              };
              return Data_Argonaut_JCursor.fail(Data_Show.showString)("Not a PingPong");
          });
          var content = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(dictDecodeJson))(json))(function (v) {
              var v1 = Data_Array.head(v);
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Data_Argonaut_JCursor.fail(Data_Show.showString)("Not a PingPong");
              };
              return Control_Applicative.pure(Data_Either.applicativeEither)(v1);
          });
          return Control_Alt.alt(Data_Either.altEither)(ping)(content);
      });
  };
  exports["PingPong"] = PingPong;
  exports["encodeJsonPingPong"] = encodeJsonPingPong;
  exports["decodeJsonPingPong"] = decodeJsonPingPong;
})(PS["Sparrow.Ping"] = PS["Sparrow.Ping"] || {});
(function(exports) {
    "use strict";

  var platformSpecificWS = typeof module !== "undefined" && module.require
        ? module.require('ws')
        : WebSocket;


  exports.newWebSocketImpl = function runNewWebSocketImpl (params) {
    var socket = new platformSpecificWS(params.url, params.protocols);
    var cont = params.continue({ url : socket.url, protocol : socket.protocol });
    var capabilities = {
      "send"              : function(m) {socket.send(m);},
      "close"             : function() {socket.close();},
      "close\'"           : function(xs) {socket.close(xs.code,xs.reason);},
      "getBufferedAmount" : function() {return socket.bufferedAmount;}
    };


    socket.addEventListener("close", function(e) {
      cont.onclose({
        code: e.code,
        reason: e.reason,
        wasClean: e.wasClean
      });
    });

    socket.addEventListener("error", function(e) {
      cont.onerror(JSON.stringify(e));
    });

    socket.addEventListener("message", function(e) {
      cont.onmessage(capabilities, e.data);
    });

    socket.addEventListener("open", function() {
      cont.onopen(capabilities);
    });
  };
})(PS["WebSocket"] = PS["WebSocket"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["WebSocket"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];        
  var newWebSocket = function (params) {
      var runCapabilitiesImpl = function (cs) {
          return {
              send: Control_Monad_Eff_Uncurried.runEffFn1(cs.send),
              close: cs.close,
              "close'": function (v) {
                  return Control_Monad_Eff_Uncurried.runEffFn1(cs["close'"])({
                      code: Data_Nullable.toNullable(v.code),
                      reason: Data_Nullable.toNullable(v.reason)
                  });
              },
              getBufferedAmount: cs.getBufferedAmount
          };
      };
      return Control_Monad_Eff_Uncurried.runEffFn1($foreign.newWebSocketImpl)({
          url: params.url,
          protocols: params.protocols,
          "continue": function (env) {
              var conts = params["continue"](env);
              return {
                  onclose: Control_Monad_Eff_Uncurried.mkEffFn1(function (v) {
                      return conts.onclose({
                          code: v.code,
                          reason: Data_Nullable.toMaybe(v.reason),
                          wasClean: v.wasClean
                      });
                  }),
                  onerror: Control_Monad_Eff_Uncurried.mkEffFn1(conts.onerror),
                  onmessage: Control_Monad_Eff_Uncurried.mkEffFn2(function ($9) {
                      return conts.onmessage(runCapabilitiesImpl($9));
                  }),
                  onopen: Control_Monad_Eff_Uncurried.mkEffFn1(function ($10) {
                      return conts.onopen(runCapabilitiesImpl($10));
                  })
              };
          }
      });
  };
  exports["newWebSocket"] = newWebSocket;
})(PS["WebSocket"] = PS["WebSocket"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Base = PS["Control.Monad.Base"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Timer = PS["Control.Monad.Eff.Timer"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Trans_Control = PS["Control.Monad.Trans.Control"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Singleton = PS["Data.Functor.Singleton"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Path_Pathy = PS["Data.Path.Pathy"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Set = PS["Data.Set"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Typelevel_Undefined = PS["Data.Typelevel.Undefined"];
  var Data_URI = PS["Data.URI"];
  var Data_URI_HierarchicalPart = PS["Data.URI.HierarchicalPart"];
  var Data_URI_Query = PS["Data.URI.Query"];
  var Data_URI_Scheme = PS["Data.URI.Scheme"];
  var Data_URI_URI = PS["Data.URI.URI"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unit = PS["Data.Unit"];
  var IxQueue = PS["IxQueue"];
  var Network_HTTP_Affjax = PS["Network.HTTP.Affjax"];
  var Network_HTTP_Affjax_Request = PS["Network.HTTP.Affjax.Request"];
  var Network_HTTP_Affjax_Response = PS["Network.HTTP.Affjax.Response"];
  var Network_HTTP_StatusCode = PS["Network.HTTP.StatusCode"];
  var Prelude = PS["Prelude"];
  var Queue = PS["Queue"];
  var Queue_One = PS["Queue.One"];
  var Sparrow_Client_Types = PS["Sparrow.Client.Types"];
  var Sparrow_Ping = PS["Sparrow.Ping"];
  var Sparrow_Session = PS["Sparrow.Session"];
  var Sparrow_Types = PS["Sparrow.Types"];
  var WebSocket = PS["WebSocket"];        
  var unpackClient = function (dictMonadBaseControl) {
      return function (dictSingletonFunctor) {
          return function (dictEncodeJson) {
              return function (dictDecodeJson) {
                  return function (dictEncodeJson1) {
                      return function (dictDecodeJson1) {
                          return function (topic) {
                              return function (client) {
                                  return Control_Bind.bind(Sparrow_Client_Types.bindSparrowClientT(((dictMonadBaseControl.MonadBase0()).Monad1()).Bind1()))(Sparrow_Client_Types["ask'"](((dictMonadBaseControl.MonadBase0()).Monad1()).Applicative0()))(function (v) {
                                      return Control_Monad_Trans_Class.lift(Sparrow_Client_Types.monadTransSparrowClientT)((dictMonadBaseControl.MonadBase0()).Monad1())(Data_Functor_Singleton.liftBaseWith_(dictMonadBaseControl)(dictSingletonFunctor)(Control_Monad_Eff.functorEff)(function (runM) {
                                          return function __do() {
                                              var v1 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
                                              var go = function (v2) {
                                                  return function (onOpen) {
                                                      var $$continue = function (me) {
                                                          if (me instanceof Data_Either.Left) {
                                                              return Control_Monad_Eff_Exception.throwException(me.value0);
                                                          };
                                                          if (me instanceof Data_Either.Right) {
                                                              if (me.value0 instanceof Data_Maybe.Nothing) {
                                                                  return function __do() {
                                                                      var v3 = runM(onOpen(Data_Maybe.Nothing.value))();
                                                                      return Control_Monad_Eff_Ref.writeRef(v1)(v3)();
                                                                  };
                                                              };
                                                              if (me.value0 instanceof Data_Maybe.Just) {
                                                                  var v3 = Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)(me.value0.value0);
                                                                  if (v3 instanceof Data_Either.Left) {
                                                                      return Control_Monad_Eff_Exception["throw"](v3.value0);
                                                                  };
                                                                  if (v3 instanceof Data_Either.Right) {
                                                                      var unsubscribe = Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadBaseControl.MonadBase0()).Monad1()).Bind1())(v.sendDeltaIn(new Sparrow_Types.WSUnsubscribe(topic)))(function () {
                                                                          return Sparrow_Client_Types.removeSubscription(dictMonadBaseControl.MonadBase0())(v)(topic);
                                                                      });
                                                                      var sendCurrent = function (x) {
                                                                          return v.sendDeltaIn(Sparrow_Types.WSIncoming.create({
                                                                              topic: topic,
                                                                              content: Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson1)(x)
                                                                          }));
                                                                      };
                                                                      var $$return = {
                                                                          sendCurrent: sendCurrent,
                                                                          unsubscribe: unsubscribe,
                                                                          initOut: v3.value0
                                                                      };
                                                                      var onDeltaOut = function (v4) {
                                                                          var v5 = Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson1)(v4);
                                                                          if (v5 instanceof Data_Either.Left) {
                                                                              return Control_Monad_Base.liftBase(dictMonadBaseControl.MonadBase0())(Control_Monad_Eff_Exception["throw"](v5.value0));
                                                                          };
                                                                          if (v5 instanceof Data_Either.Right) {
                                                                              return v2.receive($$return)(v5.value0);
                                                                          };
                                                                          throw new Error("Failed pattern match at Sparrow.Client line 102, column 42 - line 104, column 84: " + [ v5.constructor.name ]);
                                                                      };
                                                                      return function __do() {
                                                                          var v4 = runM(Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadBaseControl.MonadBase0()).Monad1()).Bind1())(Sparrow_Client_Types.registerSubscription(dictMonadBaseControl)(dictSingletonFunctor)(v)(topic)(onDeltaOut)(Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadBaseControl.MonadBase0()).Monad1()).Bind1())(v2.onReject)(function () {
                                                                              return Control_Monad_Base.liftBase(dictMonadBaseControl.MonadBase0())(function __do() {
                                                                                  var v4 = Control_Monad_Eff_Ref.readRef(v1)();
                                                                                  if (v4 instanceof Data_Maybe.Nothing) {
                                                                                      return Data_Unit.unit;
                                                                                  };
                                                                                  if (v4 instanceof Data_Maybe.Just) {
                                                                                      return Control_Monad_Aff.runAff_(function (v5) {
                                                                                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                                                                                      })(Control_Monad_Aff.killFiber(Control_Monad_Eff_Exception.error("Killing thread"))(v4.value0))();
                                                                                  };
                                                                                  throw new Error("Failed pattern match at Sparrow.Client line 111, column 29 - line 113, column 115: " + [ v4.constructor.name ]);
                                                                              });
                                                                          })))(function () {
                                                                              return onOpen(new Data_Maybe.Just($$return));
                                                                          }))();
                                                                          return Control_Monad_Eff_Ref.writeRef(v1)(v4)();
                                                                      };
                                                                  };
                                                                  throw new Error("Failed pattern match at Sparrow.Client line 83, column 32 - line 117, column 49: " + [ v3.constructor.name ]);
                                                              };
                                                              throw new Error("Failed pattern match at Sparrow.Client line 79, column 29 - line 117, column 49: " + [ me.value0.constructor.name ]);
                                                          };
                                                          throw new Error("Failed pattern match at Sparrow.Client line 77, column 29 - line 117, column 49: " + [ me.constructor.name ]);
                                                      };
                                                      return Control_Monad_Base.liftBase(dictMonadBaseControl.MonadBase0())(Control_Monad_Aff.runAff_($$continue)(v.sendInitIn(topic)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)(v2.initIn))));
                                                  };
                                              };
                                              return runM(client(go))();
                                          };
                                      }));
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var allocateDependencies = function (dictMonadBase) {
      return function (dictMonadBaseControl) {
          return function (dictSingletonFunctor) {
              return function (tls) {
                  return function (auth) {
                      return function (client) {
                          return Data_Functor_Singleton.liftBaseWith_(dictMonadBaseControl)(dictSingletonFunctor)(Control_Monad_Eff.functorEff)(function (runM) {
                              var httpURI = function (v) {
                                  return new Data_URI_URI.URI(Data_Maybe.Just.create(Data_URI_Scheme.Scheme((function () {
                                      if (tls) {
                                          return "https";
                                      };
                                      return "http";
                                  })())), Data_URI_HierarchicalPart.HierarchicalPart.create(new Data_Maybe.Just(auth))(Data_Maybe.Just.create(Data_Either.Right.create((function () {
                                      var v1 = Data_Array.unsnoc(v);
                                      if (v1 instanceof Data_Maybe.Nothing) {
                                          return Data_Typelevel_Undefined["undefined"];
                                      };
                                      if (v1 instanceof Data_Maybe.Just) {
                                          var pre = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (acc) {
                                              return function (x) {
                                                  return Data_Path_Pathy.appendPath(acc)(Data_Path_Pathy.dir(x));
                                              };
                                          })(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.dir("dependencies")))(v1.value0.init);
                                          return Data_Path_Pathy.appendPath(pre)(Data_Path_Pathy.file(v1.value0.last));
                                      };
                                      throw new Error("Failed pattern match at Sparrow.Client line 145, column 82 - line 149, column 62: " + [ v1.constructor.name ]);
                                  })()))), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
                              };
                              return function __do() {
                                  var v = Data_Functor.map(Control_Monad_Eff.functorEff)(Sparrow_Session.SessionID)(Data_UUID.genUUID)();
                                  var v1 = Queue_One.newQueue();
                                  var v2 = IxQueue.newIxQueue();
                                  var v3 = IxQueue.newIxQueue();
                                  var v4 = Control_Monad_Eff_Ref.newRef(Data_Set.empty)();
                                  var v5 = Control_Monad_Eff_Ref.newRef(Data_Set.empty)();
                                  var env = {
                                      sendInitIn: function (topic) {
                                          return function (initIn) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(v4)(Data_Set.insert(Sparrow_Types.ordTopic)(topic))))(function () {
                                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.post(Network_HTTP_Affjax_Request.requestableJson)(Network_HTTP_Affjax_Response.responsableJson)(Data_URI_URI.print(httpURI(topic)))(Data_Argonaut_Encode_Class.encodeJson(Sparrow_Types.encodeJsonWithSessionID(Data_Argonaut_Encode_Class.encodeJsonJson))({
                                                      sessionID: v,
                                                      content: initIn
                                                  })))(function (v6) {
                                                      if (v6.status === 200) {
                                                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Data_Maybe.Just(v6.response));
                                                      };
                                                      if (Data_Boolean.otherwise) {
                                                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                                                      };
                                                      throw new Error("Failed pattern match at Sparrow.Client line 176, column 13 - line 179, column 44: " + [ v6.status.constructor.name ]);
                                                  });
                                              });
                                          };
                                      },
                                      sendDeltaIn: function (x) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadBase.Monad1()).Bind1())((function () {
                                              if (x instanceof Sparrow_Types.WSUnsubscribe) {
                                                  return Control_Monad_Base.liftBase(dictMonadBase)(Control_Monad_Eff_Ref.modifyRef(v5)(Data_Set.insert(Sparrow_Types.ordTopic)(x.value0)));
                                              };
                                              return Control_Applicative.pure((dictMonadBase.Monad1()).Applicative0())(Data_Unit.unit);
                                          })())(function () {
                                              return Control_Monad_Base.liftBase(dictMonadBase)(Queue_One.putQueue(v1)(x));
                                          });
                                      },
                                      rejectQueue: v2,
                                      receiveQueue: v3
                                  };
                                  var v6 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
                                  var v7 = Queue_One.newQueue();
                                  Queue_One.putQueue(v7)(Data_Maybe.Nothing.value)();
                                  Queue_One.onQueue(v7)(function (mB) {
                                      var close = function __do() {
                                          var v8 = Control_Monad_Eff_Ref.readRef(v6)();
                                          (function () {
                                              if (v8 instanceof Data_Maybe.Nothing) {
                                                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                                              };
                                              if (v8 instanceof Data_Maybe.Just) {
                                                  return Control_Monad_Eff_Timer.clearInterval(v8.value0);
                                              };
                                              throw new Error("Failed pattern match at Sparrow.Client line 198, column 11 - line 200, column 48: " + [ v8.constructor.name ]);
                                          })()();
                                          if (mB instanceof Data_Maybe.Nothing) {
                                              return Queue_One.putQueue(v7)(new Data_Maybe.Just(1000))();
                                          };
                                          if (mB instanceof Data_Maybe.Just) {
                                              return Queue_One.putQueue(v7)(new Data_Maybe.Just(mB.value0 * 2 | 0))();
                                          };
                                          throw new Error("Failed pattern match at Sparrow.Client line 201, column 11 - line 203, column 60: " + [ mB.constructor.name ]);
                                      };
                                      var call = WebSocket.newWebSocket({
                                          url: (function () {
                                              var x = new Data_URI_URI.URI(Data_Maybe.Just.create(Data_URI_Scheme.Scheme((function () {
                                                  if (tls) {
                                                      return "wss";
                                                  };
                                                  return "ws";
                                              })())), Data_URI_HierarchicalPart.HierarchicalPart.create(new Data_Maybe.Just(auth))(Data_Maybe.Just.create(Data_Either.Right.create(Data_Path_Pathy.appendPath(Data_Path_Pathy.rootDir)(Data_Path_Pathy.file("dependencies"))))), Data_Maybe.Just.create(Data_URI_Query.Query(new Data_List_Types.Cons(Data_Tuple.Tuple.create("sessionID")(Data_Maybe.Just.create(Data_Show.show(Sparrow_Session.showSessionID)(v))), Data_List_Types.Nil.value))), Data_Maybe.Nothing.value);
                                              return Data_URI_URI.print(x);
                                          })(),
                                          protocols: [  ],
                                          "continue": function (v8) {
                                              return {
                                                  onopen: function (v9) {
                                                      return function __do() {
                                                          var v10 = Control_Monad_Eff_Timer.setInterval(1000 * 10 | 0)(v9.send(Data_Show.show(Data_Argonaut_Core.showJson)(Data_Argonaut_Encode_Class.encodeJson(Sparrow_Ping.encodeJsonPingPong(Data_Argonaut_Encode_Class.encodeJsonUnit))(Data_Maybe.Nothing.value))))();
                                                          Control_Monad_Eff_Ref.writeRef(v6)(new Data_Maybe.Just(v10))();
                                                          return Queue_One.onQueue(v1)(function ($118) {
                                                              return v9.send(Data_Show.show(Data_Argonaut_Core.showJson)(Data_Argonaut_Encode_Class.encodeJson(Sparrow_Ping.encodeJsonPingPong(Sparrow_Types.encodeJsonWSIncoming(Sparrow_Types.encodeJsonWithTopic(Data_Argonaut_Encode_Class.encodeJsonJson))))(Sparrow_Ping.PingPong(Data_Maybe.Just.create($118)))));
                                                          })();
                                                      };
                                                  },
                                                  onmessage: function (v9) {
                                                      return function (r) {
                                                          var v10 = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(r))(Data_Argonaut_Decode_Class.decodeJson(Sparrow_Ping.decodeJsonPingPong(Sparrow_Types.decodeJsonWSOutgoing(Sparrow_Types.decodeJsonWithTopic(Data_Argonaut_Decode_Class.decodeJsonJson)))));
                                                          if (v10 instanceof Data_Either.Left) {
                                                              return Control_Monad_Eff_Exception["throw"](v10.value0);
                                                          };
                                                          if (v10 instanceof Data_Either.Right) {
                                                              if (v10.value0 instanceof Data_Maybe.Nothing) {
                                                                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                                                              };
                                                              if (v10.value0 instanceof Data_Maybe.Just) {
                                                                  if (v10.value0.value0 instanceof Sparrow_Types.WSTopicsSubscribed) {
                                                                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                                                                  };
                                                                  if (v10.value0.value0 instanceof Sparrow_Types.WSTopicAdded) {
                                                                      return function __do() {
                                                                          var v11 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Set.member(Sparrow_Types.ordTopic)(v10.value0.value0.value0))(Control_Monad_Eff_Ref.readRef(v4))();
                                                                          if (v11) {
                                                                              return Control_Monad_Eff_Ref.modifyRef(v4)(Data_Set["delete"](Sparrow_Types.ordTopic)(v10.value0.value0.value0))();
                                                                          };
                                                                          return Control_Monad_Eff_Exception["throw"]("Unexpected topic added: " + Data_Show.show(Sparrow_Types.showTopic)(v10.value0.value0.value0))();
                                                                      };
                                                                  };
                                                                  if (v10.value0.value0 instanceof Sparrow_Types.WSTopicRemoved) {
                                                                      return function __do() {
                                                                          var v11 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Set.member(Sparrow_Types.ordTopic)(v10.value0.value0.value0))(Control_Monad_Eff_Ref.readRef(v5))();
                                                                          if (v11) {
                                                                              return Control_Monad_Eff_Ref.modifyRef(v5)(Data_Set["delete"](Sparrow_Types.ordTopic)(v10.value0.value0.value0))();
                                                                          };
                                                                          return Control_Monad_Eff_Exception["throw"]("Unexpected topic removed: " + Data_Show.show(Sparrow_Types.showTopic)(v10.value0.value0.value0))();
                                                                      };
                                                                  };
                                                                  if (v10.value0.value0 instanceof Sparrow_Types.WSTopicRejected) {
                                                                      return runM(Sparrow_Client_Types.callReject(dictMonadBase)(env)(v10.value0.value0.value0));
                                                                  };
                                                                  if (v10.value0.value0 instanceof Sparrow_Types.WSDecodingError) {
                                                                      return Control_Monad_Eff_Exception["throw"](v10.value0.value0.value0);
                                                                  };
                                                                  if (v10.value0.value0 instanceof Sparrow_Types.WSOutgoing) {
                                                                      return runM(Sparrow_Client_Types.callOnReceive(dictMonadBase)(env)(v10.value0.value0.value0.topic)(v10.value0.value0.value0.content));
                                                                  };
                                                                  throw new Error("Failed pattern match at Sparrow.Client line 223, column 48 - line 237, column 109: " + [ v10.value0.value0.constructor.name ]);
                                                              };
                                                              throw new Error("Failed pattern match at Sparrow.Client line 221, column 36 - line 237, column 109: " + [ v10.value0.constructor.name ]);
                                                          };
                                                          throw new Error("Failed pattern match at Sparrow.Client line 219, column 47 - line 237, column 109: " + [ v10.constructor.name ]);
                                                      };
                                                  },
                                                  onclose: function (v9) {
                                                      return close;
                                                  },
                                                  onerror: function (e) {
                                                      return close;
                                                  }
                                              };
                                          }
                                      });
                                      if (mB instanceof Data_Maybe.Nothing) {
                                          return call;
                                      };
                                      if (mB instanceof Data_Maybe.Just) {
                                          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Eff_Timer.setTimeout(mB.value0)(call));
                                      };
                                      throw new Error("Failed pattern match at Sparrow.Client line 243, column 5 - line 245, column 43: " + [ mB.constructor.name ]);
                                  })();
                                  return runM(Sparrow_Client_Types.runSparrowClientT(env)(client))();
                              };
                          });
                      };
                  };
              };
          };
      };
  };
  exports["unpackClient"] = unpackClient;
  exports["allocateDependencies"] = allocateDependencies;
})(PS["Sparrow.Client"] = PS["Sparrow.Client"] || {});
(function(exports) {
    "use strict";

  var CssBaseline = require('material-ui/CssBaseline').default;

  exports.cssBaselineImpl = CssBaseline;
})(PS["MaterialUI.CssBaseline"] = PS["MaterialUI.CssBaseline"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Type_Data_Boolean = PS["Type.Data.Boolean"];
  var Type_Data_Symbol = PS["Type.Data.Symbol"];
  var Type_Equality = PS["Type.Equality"];
  var ListToRow = {};         
  var listToRowNil = ListToRow;
  var listToRowCons = function (dictListToRow) {
      return function (dictRowCons) {
          return ListToRow;
      };
  };
  exports["ListToRow"] = ListToRow;
  exports["listToRowNil"] = listToRowNil;
  exports["listToRowCons"] = listToRowCons;
})(PS["Type.Row"] = PS["Type.Row"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Type_Row = PS["Type.Row"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var CompileStyles = {};
  var createStyles = Unsafe_Coerce.unsafeCoerce;
  var compileStylesNil = CompileStyles;
  var compileStylesCons = function (dictCompileStyles) {
      return CompileStyles;
  };
  exports["createStyles"] = createStyles;
  exports["CompileStyles"] = CompileStyles;
  exports["compileStylesNil"] = compileStylesNil;
  exports["compileStylesCons"] = compileStylesCons;
})(PS["MaterialUI.Types"] = PS["MaterialUI.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.CssBaseline"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var cssBaseline = React.createElement($foreign.cssBaselineImpl)({})([  ]);
  exports["cssBaseline"] = cssBaseline;
})(PS["MaterialUI.CssBaseline"] = PS["MaterialUI.CssBaseline"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function unsafeMkProps(key) {
    return function(value){
      var result = {};
      result[key] = value;
      return result;
    };
  }
  exports.unsafeMkProps = unsafeMkProps;

  function unsafeUnfoldProps(key) {
    return function(value){
      var result = {};
      var props = {};
      props[key] = result;

      for (var subprop in value) {
        if (value.hasOwnProperty(subprop)) {
          result[subprop] = value[subprop];
        }
      }

      return props;
    };
  }
  exports.unsafeUnfoldProps = unsafeUnfoldProps;

  function unsafePrefixProps(prefix) {
    return function(value){
      var result = {};

      for (var prop in value) {
        if (value.hasOwnProperty(prop)) {
          result[prefix + prop] = value[prop];
        }
      }

      return result;
    };
  }                                             

  function unsafeFromPropsArray(props) {
    var result = {};

    for (var i = 0, len = props.length; i < len; i++) {
      var prop = props[i];

      for (var key in prop) {
        if (prop.hasOwnProperty(key)) {
          result[key] = prop[key];
        }
      }
    }

    return result;
  };
  exports.unsafeFromPropsArray = unsafeFromPropsArray;
})(PS["React.DOM.Props"] = PS["React.DOM.Props"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["React.DOM.Props"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];                        
  var style = $foreign.unsafeUnfoldProps("style");
  var src = $foreign.unsafeMkProps("src");
  exports["style"] = style;
  exports["src"] = src;
  exports["unsafeFromPropsArray"] = $foreign.unsafeFromPropsArray;
})(PS["React.DOM.Props"] = PS["React.DOM.Props"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var React = PS["React"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var text = Unsafe_Coerce.unsafeCoerce;  
  var mkDOM = function (dynamic) {
      return function (tag) {
          return function (props) {
              var createElement = (function () {
                  if (!dynamic) {
                      return React.createElementTagName;
                  };
                  if (dynamic) {
                      return React.createElementTagNameDynamic;
                  };
                  throw new Error("Failed pattern match at React.DOM line 15, column 5 - line 17, column 55: " + [ dynamic.constructor.name ]);
              })();
              return createElement(tag)(React_DOM_Props.unsafeFromPropsArray(props));
          };
      };
  };                        
  var main = mkDOM(false)("main");
  var img = mkDOM(false)("img");
  var em = mkDOM(false)("em");
  var div = mkDOM(false)("div");
  exports["mkDOM"] = mkDOM;
  exports["text"] = text;
  exports["div"] = div;
  exports["em"] = em;
  exports["img"] = img;
  exports["main"] = main;
})(PS["React.DOM"] = PS["React.DOM"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_UUID = PS["Data.UUID"];
  var IxSignal_Internal = PS["IxSignal.Internal"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Signal_Internal = PS["Signal.Internal"];        
  var whileMountedIxUUID = function (sig) {
      return function (f) {
          return function (reactSpec) {
              var kRef = Control_Monad_Eff_Unsafe.unsafePerformEff(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value));
              var $9 = {};
              for (var $10 in reactSpec) {
                  if ({}.hasOwnProperty.call(reactSpec, $10)) {
                      $9[$10] = reactSpec[$10];
                  };
              };
              $9.componentDidMount = function ($$this) {
                  return function __do() {
                      Control_Monad_Eff_Unsafe.unsafeCoerceEff(function __do() {
                          var v1 = Data_UUID.genUUID();
                          Control_Monad_Eff_Ref.writeRef(kRef)(new Data_Maybe.Just(v1))();
                          return IxSignal_Internal.subscribeIx(f($$this))(Data_Show.show(Data_UUID.showUUID)(v1))(sig)();
                      })();
                      return reactSpec.componentDidMount($$this)();
                  };
              };
              $9.componentWillUnmount = function ($$this) {
                  return function __do() {
                      Control_Monad_Eff_Unsafe.unsafeCoerceEff(function __do() {
                          var v1 = Control_Monad_Eff_Ref.readRef(kRef)();
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return Control_Monad_Eff_Exception["throw"]("No UUID ref!")();
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              IxSignal_Internal["delete"](Data_Show.show(Data_UUID.showUUID)(v1.value0))(sig)();
                              return Control_Monad_Eff_Ref.writeRef(kRef)(Data_Maybe.Nothing.value)();
                          };
                          throw new Error("Failed pattern match at React.Signal.WhileMounted line 62, column 9 - line 66, column 34: " + [ v1.constructor.name ]);
                      })();
                      return reactSpec.componentWillUnmount($$this)();
                  };
              };
              return $9;
          };
      };
  };
  exports["whileMountedIxUUID"] = whileMountedIxUUID;
})(PS["React.Signal.WhileMounted"] = PS["React.Signal.WhileMounted"] || {});
(function(exports) {
    "use strict";

  var Paper = require('material-ui/Paper').default;

  exports.paperImpl = Paper;
})(PS["MaterialUI.Paper"] = PS["MaterialUI.Paper"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Paper"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var paper = function (dictSubrow) {
      return React.createElement($foreign.paperImpl);
  };
  exports["paper"] = paper;
})(PS["MaterialUI.Paper"] = PS["MaterialUI.Paper"] || {});
(function(exports) {
    "use strict";

  var Typography = require('material-ui/Typography').default;

  exports.typographyImpl = Typography;
})(PS["MaterialUI.Typography"] = PS["MaterialUI.Typography"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Typography"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var typography = function (dictSubrow) {
      return React.createElement($foreign.typographyImpl);
  };                          
  var right = "right";
  var primary = "primary";
  var left = "left";           
  var headline = "headline";
  var display2 = "display2";
  var display1 = "display1";
  var center = "center";
  var caption = "caption";
  var body1 = "body1";
  exports["typography"] = typography;
  exports["left"] = left;
  exports["right"] = right;
  exports["center"] = center;
  exports["primary"] = primary;
  exports["caption"] = caption;
  exports["body1"] = body1;
  exports["headline"] = headline;
  exports["display1"] = display1;
  exports["display2"] = display2;
})(PS["MaterialUI.Typography"] = PS["MaterialUI.Typography"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Document = PS["DOM.HTML.Document"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Fold = PS["Data.Lens.Fold"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Market = PS["Data.Lens.Internal.Market"];
  var Data_Lens_Internal_Tagged = PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Lens_Setter = PS["Data.Lens.Setter"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var ReactDOM = PS["ReactDOM"];
  var simpleSpec = function (performAction) {
      return function (render) {
          return {
              performAction: performAction,
              render: render
          };
      };
  };
  var createReactSpec$prime = function (dictReactRender) {
      return function (wrap) {
          return function (v) {
              var dispatcher = function ($$this) {
                  return function (action) {
                      return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                          var v1 = React.getProps($$this)();
                          var v2 = React.readState($$this)();
                          var cotransformer = v.performAction(action)(v1)(v2);
                          var step = function (cot) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Free_Trans.resume(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadRecAff)(cot))(function (v3) {
                                  if (v3 instanceof Data_Either.Left) {
                                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Control_Monad_Rec_Class.Done(Data_Unit.unit));
                                  };
                                  if (v3 instanceof Data_Either.Right) {
                                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(React.readState($$this))))(function (v4) {
                                          var newState = v3.value0.value0(v4);
                                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.makeAff(function (cb) {
                                              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(function __do() {
                                                  Data_Functor["void"](Control_Monad_Eff.functorEff)(React.writeStateWithCallback($$this)(newState)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(cb(new Data_Either.Right(newState)))))();
                                                  return Control_Monad_Aff.nonCanceler;
                                              });
                                          }))(function (v5) {
                                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Control_Monad_Rec_Class.Loop(v3.value0.value1(new Data_Maybe.Just(newState))));
                                          });
                                      });
                                  };
                                  throw new Error("Failed pattern match at Thermite line 251, column 13 - line 259, column 48: " + [ v3.constructor.name ]);
                              });
                          };
                          return Control_Monad_Eff_Unsafe.unsafeCoerceEff(Control_Monad_Aff.launchAff(Control_Monad_Rec_Class.tailRecM(Control_Monad_Aff.monadRecAff)(step)(cotransformer)))();
                      });
                  };
              };
              var render = function ($$this) {
                  return Data_Functor.map(Control_Monad_Eff.functorEff)(wrap)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(v.render(dispatcher($$this)))(React.getProps($$this)))(React.readState($$this)))(React.getChildren($$this)));
              };
              return function (state) {
                  return {
                      spec: React.spec(dictReactRender)(state)(render),
                      dispatcher: dispatcher
                  };
              };
          };
      };
  };
  var createReactSpec = createReactSpec$prime(React.arrayReactRender)(Control_Category.id(Control_Category.categoryFn));
  exports["simpleSpec"] = simpleSpec;
  exports["createReactSpec"] = createReactSpec;
})(PS["Thermite"] = PS["Thermite"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var Thermite = PS["Thermite"];        
  var spec = (function () {
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      return [ React_DOM.text("Chefs") ];
                  };
              };
          };
      };
      var performAction = function (action) {
          return function (props) {
              return function (state) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  var initialState = Data_Unit.unit;
  var chefs = (function () {
      var v = Thermite.createReactSpec(spec)(initialState);
      return React.createElement(React.createClass(v.spec))(Data_Unit.unit)([  ]);
  })();
  exports["initialState"] = initialState;
  exports["spec"] = spec;
  exports["chefs"] = chefs;
})(PS["Spec.Content.Chefs"] = PS["Spec.Content.Chefs"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var Thermite = PS["Thermite"];        
  var spec = (function () {
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      return [ React_DOM.text("Meals") ];
                  };
              };
          };
      };
      var performAction = function (action) {
          return function (props) {
              return function (state) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  var initialState = Data_Unit.unit;
  var meals = (function () {
      var v = Thermite.createReactSpec(spec)(initialState);
      return React.createElement(React.createClass(v.spec))(Data_Unit.unit)([  ]);
  })();
  exports["initialState"] = initialState;
  exports["spec"] = spec;
  exports["meals"] = meals;
})(PS["Spec.Content.Meals"] = PS["Spec.Content.Meals"] || {});
(function(exports) {
    "use strict";

  var Button = require('material-ui/Button').default;
  var withStyles = require('material-ui/styles').withStyles;

  exports.buttonImpl = Button;
  exports.withStylesImpl = function withStylesImpl(stylesF,x) {
    return withStyles(stylesF)(x);
  };
})(PS["MaterialUI.Button"] = PS["MaterialUI.Button"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Button"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_Unit = PS["Data.Unit"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Type_Row = PS["Type.Row"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var withStyles = function (dictSubrow) {
      return function (dictRowToList) {
          return function (dictCompileStyles) {
              return function (dictListToRow) {
                  return function (stylesF) {
                      return function (createElem) {
                          return React.createElement($foreign.withStylesImpl(stylesF, React.createClassStateless(React.reactElementReactRender)(createElem)))(Data_Unit.unit)([  ]);
                      };
                  };
              };
          };
      };
  };                  
  var secondary = "secondary";
  var raised = "raised";
  var primary = "primary";
  var large = "large";
  var inherit = "inherit";
  var flat = "flat";
  var fab = "fab";
  var $$default = "default";
  var createClasses = function (dictSubrow) {
      return Unsafe_Coerce.unsafeCoerce;
  };                        
  var button = function (dictSubrow) {
      return React.createElement($foreign.buttonImpl);
  };
  exports["button"] = button;
  exports["primary"] = primary;
  exports["secondary"] = secondary;
  exports["default"] = $$default;
  exports["inherit"] = inherit;
  exports["large"] = large;
  exports["flat"] = flat;
  exports["raised"] = raised;
  exports["fab"] = fab;
  exports["createClasses"] = createClasses;
  exports["withStyles"] = withStyles;
})(PS["MaterialUI.Button"] = PS["MaterialUI.Button"] || {});
(function(exports) {
    "use strict";

  var CircularProgress = require('material-ui/Progress').CircularProgress;

  exports.circularProgressImpl = CircularProgress;
})(PS["MaterialUI.CircularProgress"] = PS["MaterialUI.CircularProgress"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.CircularProgress"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var circularProgress = function (dictSubrow) {
      return function (props) {
          return React.createElement($foreign.circularProgressImpl)(props)([  ]);
      };
  };
  exports["circularProgress"] = circularProgress;
})(PS["MaterialUI.CircularProgress"] = PS["MaterialUI.CircularProgress"] || {});
(function(exports) {
    "use strict";

  var Divider = require('material-ui/Divider').default;

  exports.dividerImpl = Divider;
})(PS["MaterialUI.Divider"] = PS["MaterialUI.Divider"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Divider"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var divider = function (dictSubrow) {
      return function (props) {
          return React.createElement($foreign.dividerImpl)(props)([  ]);
      };
  };
  exports["divider"] = divider;
})(PS["MaterialUI.Divider"] = PS["MaterialUI.Divider"] || {});
(function(exports) {
    "use strict";

  var Grid = require('material-ui/Grid').default;

  exports.gridImpl = Grid;
})(PS["MaterialUI.Grid"] = PS["MaterialUI.Grid"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Grid"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var spacing8 = 8;     
  var grid = function (dictSubrow) {
      return React.createElement($foreign.gridImpl);
  };                    
  var centerJustify = "center";
  exports["grid"] = grid;
  exports["centerJustify"] = centerJustify;
  exports["spacing8"] = spacing8;
})(PS["MaterialUI.Grid"] = PS["MaterialUI.Grid"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Input"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var passwordType = "password";
  exports["passwordType"] = passwordType;
})(PS["MaterialUI.Input"] = PS["MaterialUI.Input"] || {});
(function(exports) {
    "use strict";

  var Snackbar = require('material-ui/Snackbar').default;

  exports.snackbarImpl = Snackbar;
})(PS["MaterialUI.Snackbar"] = PS["MaterialUI.Snackbar"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Snackbar"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var snackbar = function (dictSubrow) {
      return function (p) {
          return React.createElement($foreign.snackbarImpl)(p)([  ]);
      };
  };
  exports["snackbar"] = snackbar;
})(PS["MaterialUI.Snackbar"] = PS["MaterialUI.Snackbar"] || {});
(function(exports) {
    "use strict";

  var TextField = require('material-ui/TextField').default;

  exports.textFieldImpl = TextField;
})(PS["MaterialUI.TextField"] = PS["MaterialUI.TextField"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.TextField"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Input = PS["MaterialUI.Input"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var textField = function (dictSubrow) {
      return function (dictUnion) {
          return function (p) {
              return React.createElement($foreign.textFieldImpl)(p)([  ]);
          };
      };
  };
  exports["textField"] = textField;
})(PS["MaterialUI.TextField"] = PS["MaterialUI.TextField"] || {});
(function(exports) {
    "use strict";
  var ReCaptcha =require("react-recaptcha");


  exports.reCaptchaImpl = ReCaptcha;
})(PS["React.ReCaptcha"] = PS["React.ReCaptcha"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["React.ReCaptcha"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Google_ReCaptcha = PS["Google.ReCaptcha"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];        
  var reCaptcha = function (ps) {
      return React.createElement($foreign.reCaptchaImpl)(ps)([  ]);
  };
  exports["reCaptcha"] = reCaptcha;
})(PS["React.ReCaptcha"] = PS["React.ReCaptcha"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Client_Dependencies_Register = PS["Client.Dependencies.Register"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Base = PS["Control.Monad.Base"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Crypto_Scrypt = PS["Crypto.Scrypt"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unit = PS["Data.Unit"];
  var Google_ReCaptcha = PS["Google.ReCaptcha"];
  var LocalCooking_Common_Password = PS["LocalCooking.Common.Password"];
  var MaterialUI_Button = PS["MaterialUI.Button"];
  var MaterialUI_CircularProgress = PS["MaterialUI.CircularProgress"];
  var MaterialUI_Divider = PS["MaterialUI.Divider"];
  var MaterialUI_Grid = PS["MaterialUI.Grid"];
  var MaterialUI_Input = PS["MaterialUI.Input"];
  var MaterialUI_Snackbar = PS["MaterialUI.Snackbar"];
  var MaterialUI_TextField = PS["MaterialUI.TextField"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var MaterialUI_Typography = PS["MaterialUI.Typography"];
  var Prelude = PS["Prelude"];
  var Queue_One_Aff = PS["Queue.One.Aff"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var React_ReCaptcha = PS["React.ReCaptcha"];
  var Text_Email_Validate = PS["Text.Email.Validate"];
  var Thermite = PS["Thermite"];
  var Types_Env = PS["Types.Env"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var GotReCaptchaVerify = (function () {
      function GotReCaptchaVerify(value0) {
          this.value0 = value0;
      };
      GotReCaptchaVerify.create = function (value0) {
          return new GotReCaptchaVerify(value0);
      };
      return GotReCaptchaVerify;
  })();
  var ChangedEmail = (function () {
      function ChangedEmail(value0) {
          this.value0 = value0;
      };
      ChangedEmail.create = function (value0) {
          return new ChangedEmail(value0);
      };
      return ChangedEmail;
  })();
  var ChangedEmailConfirm = (function () {
      function ChangedEmailConfirm(value0) {
          this.value0 = value0;
      };
      ChangedEmailConfirm.create = function (value0) {
          return new ChangedEmailConfirm(value0);
      };
      return ChangedEmailConfirm;
  })();
  var EmailUnfocused = (function () {
      function EmailUnfocused() {

      };
      EmailUnfocused.value = new EmailUnfocused();
      return EmailUnfocused;
  })();
  var EmailConfirmUnfocused = (function () {
      function EmailConfirmUnfocused() {

      };
      EmailConfirmUnfocused.value = new EmailConfirmUnfocused();
      return EmailConfirmUnfocused;
  })();
  var ChangedPassword = (function () {
      function ChangedPassword(value0) {
          this.value0 = value0;
      };
      ChangedPassword.create = function (value0) {
          return new ChangedPassword(value0);
      };
      return ChangedPassword;
  })();
  var ChangedPasswordConfirm = (function () {
      function ChangedPasswordConfirm(value0) {
          this.value0 = value0;
      };
      ChangedPasswordConfirm.create = function (value0) {
          return new ChangedPasswordConfirm(value0);
      };
      return ChangedPasswordConfirm;
  })();
  var PasswordUnfocused = (function () {
      function PasswordUnfocused() {

      };
      PasswordUnfocused.value = new PasswordUnfocused();
      return PasswordUnfocused;
  })();
  var PasswordConfirmUnfocused = (function () {
      function PasswordConfirmUnfocused() {

      };
      PasswordConfirmUnfocused.value = new PasswordConfirmUnfocused();
      return PasswordConfirmUnfocused;
  })();
  var SubmitRegister = (function () {
      function SubmitRegister() {

      };
      SubmitRegister.value = new SubmitRegister();
      return SubmitRegister;
  })();
  var GotFailure = (function () {
      function GotFailure(value0) {
          this.value0 = value0;
      };
      GotFailure.create = function (value0) {
          return new GotFailure(value0);
      };
      return GotFailure;
  })();
  var ClearFailure = (function () {
      function ClearFailure() {

      };
      ClearFailure.value = new ClearFailure();
      return ClearFailure;
  })();
  var GotBadCaptcha = (function () {
      function GotBadCaptcha() {

      };
      GotBadCaptcha.value = new GotBadCaptcha();
      return GotBadCaptcha;
  })();
  var ClearBadCaptcha = (function () {
      function ClearBadCaptcha() {

      };
      ClearBadCaptcha.value = new ClearBadCaptcha();
      return ClearBadCaptcha;
  })();
  var GotEmailSent = (function () {
      function GotEmailSent() {

      };
      GotEmailSent.value = new GotEmailSent();
      return GotEmailSent;
  })();
  var ClearEmailSent = (function () {
      function ClearEmailSent() {

      };
      ClearEmailSent.value = new ClearEmailSent();
      return ClearEmailSent;
  })();
  var spec = function (v) {
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      return [ MaterialUI_Typography.typography(Data_Record_Class.srInst())({
                          variant: MaterialUI_Typography.display2,
                          align: MaterialUI_Typography.center,
                          color: MaterialUI_Typography.primary
                      })([ React_DOM.text("Register") ]), React_DOM.div([ React_DOM_Props.style({
                          marginBotton: "1em"
                      }) ])([  ]), MaterialUI_Divider.divider(Data_Record_Class.srInst())({}), MaterialUI_Grid.grid(Data_Record_Class.srInst())({
                          spacing: MaterialUI_Grid.spacing8,
                          container: true,
                          justify: MaterialUI_Grid.centerJustify
                      })([ MaterialUI_Grid.grid(Data_Record_Class.srInst())({
                          xs: 6,
                          item: true
                      })([ MaterialUI_TextField.textField(Data_Record_Class.srInst())()({
                          label: React_DOM.text("Email"),
                          fullWidth: true,
                          onChange: Control_Monad_Eff_Uncurried.mkEffFn1(function (e) {
                              return dispatch(new ChangedEmail(e.target.value));
                          }),
                          onBlur: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                              return dispatch(EmailUnfocused.value);
                          }),
                          error: (function () {
                              var v1 = Text_Email_Validate.emailAddress(state.email);
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(state.emailDirty)(new Data_Maybe.Just(true));
                              };
                              if (v1 instanceof Data_Maybe.Just) {
                                  if (state.emailConfirmDirty instanceof Data_Maybe.Nothing) {
                                      return false;
                                  };
                                  if (state.emailConfirmDirty instanceof Data_Maybe.Just) {
                                      if (state.emailConfirmDirty.value0) {
                                          return state.email !== state.emailConfirm;
                                      };
                                      if (Data_Boolean.otherwise) {
                                          return false;
                                      };
                                  };
                                  throw new Error("Failed pattern match at Spec.Content.Register line 183, column 27 - line 187, column 41: " + [ state.emailConfirmDirty.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Spec.Content.Register line 181, column 22 - line 187, column 41: " + [ v1.constructor.name ]);
                          })(),
                          name: "register-email",
                          id: "register-email"
                      }), MaterialUI_TextField.textField(Data_Record_Class.srInst())()({
                          label: React_DOM.text("Email Confirm"),
                          fullWidth: true,
                          onChange: Control_Monad_Eff_Uncurried.mkEffFn1(function (e) {
                              return dispatch(new ChangedEmailConfirm(e.target.value));
                          }),
                          onBlur: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                              return dispatch(EmailConfirmUnfocused.value);
                          }),
                          error: (function () {
                              var v1 = Text_Email_Validate.emailAddress(state.emailConfirm);
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(state.emailConfirmDirty)(new Data_Maybe.Just(true));
                              };
                              if (v1 instanceof Data_Maybe.Just) {
                                  if (state.emailDirty instanceof Data_Maybe.Nothing) {
                                      return false;
                                  };
                                  if (state.emailDirty instanceof Data_Maybe.Just) {
                                      return state.email !== state.emailConfirm;
                                  };
                                  throw new Error("Failed pattern match at Spec.Content.Register line 198, column 27 - line 200, column 62: " + [ state.emailDirty.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Spec.Content.Register line 196, column 22 - line 200, column 62: " + [ v1.constructor.name ]);
                          })(),
                          name: "register-email-confirm",
                          id: "register-email-confirm"
                      }), MaterialUI_TextField.textField(Data_Record_Class.srInst())()({
                          label: React_DOM.text("Password"),
                          fullWidth: true,
                          type: MaterialUI_Input.passwordType,
                          onChange: Control_Monad_Eff_Uncurried.mkEffFn1(function (p) {
                              return dispatch(new ChangedPassword(p.target.value));
                          }),
                          onBlur: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                              return dispatch(PasswordUnfocused.value);
                          }),
                          error: (function () {
                              if (state.passwordDirty instanceof Data_Maybe.Nothing) {
                                  return false;
                              };
                              if (state.passwordDirty instanceof Data_Maybe.Just) {
                                  if (!state.passwordDirty.value0) {
                                      return false;
                                  };
                                  if (Data_Boolean.otherwise) {
                                      if (state.passwordConfirmDirty instanceof Data_Maybe.Nothing) {
                                          return false;
                                      };
                                      if (state.passwordConfirmDirty instanceof Data_Maybe.Just) {
                                          if (!state.passwordConfirmDirty.value0) {
                                              return false;
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return state.password !== state.passwordConfirm;
                                          };
                                      };
                                      throw new Error("Failed pattern match at Spec.Content.Register line 214, column 34 - line 218, column 77: " + [ state.passwordConfirmDirty.constructor.name ]);
                                  };
                              };
                              throw new Error("Failed pattern match at Spec.Content.Register line 210, column 22 - line 218, column 77: " + [ state.passwordDirty.constructor.name ]);
                          })(),
                          name: "register-password",
                          id: "register-password"
                      }), MaterialUI_TextField.textField(Data_Record_Class.srInst())()({
                          label: React_DOM.text("Password Confirm"),
                          fullWidth: true,
                          type: MaterialUI_Input.passwordType,
                          onChange: Control_Monad_Eff_Uncurried.mkEffFn1(function (p) {
                              return dispatch(new ChangedPasswordConfirm(p.target.value));
                          }),
                          onBlur: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                              return dispatch(PasswordConfirmUnfocused.value);
                          }),
                          error: (function () {
                              if (state.passwordConfirmDirty instanceof Data_Maybe.Nothing) {
                                  return false;
                              };
                              if (state.passwordConfirmDirty instanceof Data_Maybe.Just) {
                                  if (!state.passwordConfirmDirty.value0) {
                                      return false;
                                  };
                                  if (Data_Boolean.otherwise) {
                                      if (state.passwordDirty instanceof Data_Maybe.Nothing) {
                                          return false;
                                      };
                                      if (state.passwordDirty instanceof Data_Maybe.Just) {
                                          if (!state.passwordDirty.value0) {
                                              return false;
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return state.password !== state.passwordConfirm;
                                          };
                                      };
                                      throw new Error("Failed pattern match at Spec.Content.Register line 232, column 34 - line 236, column 77: " + [ state.passwordDirty.constructor.name ]);
                                  };
                              };
                              throw new Error("Failed pattern match at Spec.Content.Register line 228, column 22 - line 236, column 77: " + [ state.passwordConfirmDirty.constructor.name ]);
                          })(),
                          name: "register-password-confirm",
                          id: "register-password-confirm",
                          style: MaterialUI_Types.createStyles({
                              marginBottom: "1em"
                          })
                      }), React_ReCaptcha.reCaptcha({
                          sitekey: Types_Env.env.googleReCaptchaSiteKey,
                          verifyCallback: Control_Monad_Eff_Uncurried.mkEffFn1(function ($137) {
                              return dispatch(GotReCaptchaVerify.create($137));
                          }),
                          onloadCallback: Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)
                      }), MaterialUI_Button.button(Data_Record_Class.srInst())({
                          color: MaterialUI_Button.secondary,
                          variant: MaterialUI_Button.raised,
                          size: MaterialUI_Button.large,
                          style: MaterialUI_Types.createStyles({
                              marginTop: "1em"
                          }),
                          disabled: (function () {
                              var v1 = Text_Email_Validate.emailAddress(state.email);
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return true;
                              };
                              if (v1 instanceof Data_Maybe.Just) {
                                  return state.email !== state.emailConfirm || (state.password !== state.passwordConfirm || (function () {
                                      if (state.passwordDirty instanceof Data_Maybe.Nothing) {
                                          return true;
                                      };
                                      if (state.passwordDirty instanceof Data_Maybe.Just) {
                                          if (state.reCaptcha instanceof Data_Maybe.Nothing) {
                                              return true;
                                          };
                                          if (state.reCaptcha instanceof Data_Maybe.Just) {
                                              return false;
                                          };
                                          throw new Error("Failed pattern match at Spec.Content.Register line 257, column 37 - line 259, column 44: " + [ state.reCaptcha.constructor.name ]);
                                      };
                                      throw new Error("Failed pattern match at Spec.Content.Register line 255, column 24 - line 259, column 44: " + [ state.passwordDirty.constructor.name ]);
                                  })());
                              };
                              throw new Error("Failed pattern match at Spec.Content.Register line 251, column 25 - line 259, column 44: " + [ v1.constructor.name ]);
                          })(),
                          onTouchTap: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                              return dispatch(SubmitRegister.value);
                          })
                      })([ React_DOM.text("Submit") ]) ]) ]), (function () {
                          if (state.pending) {
                              return React_DOM.div([ React_DOM_Props.style({
                                  zIndex: 1000,
                                  position: "absolute",
                                  top: "0",
                                  left: "0",
                                  right: "0",
                                  bottom: "0",
                                  display: "flex",
                                  flexDirection: "column",
                                  alignItems: "center",
                                  justifyContent: "center",
                                  background: "rgba(255,255,255, 0.6)"
                              }) ])([ MaterialUI_CircularProgress.circularProgress(Data_Record_Class.srInst())({
                                  size: 50
                              }) ]);
                          };
                          return React_DOM.text("");
                      })(), MaterialUI_Snackbar.snackbar(Data_Record_Class.srInst())({
                          open: (function () {
                              if (state.failure instanceof Data_Maybe.Nothing) {
                                  return state.badCaptcha || state.emailSent;
                              };
                              if (state.failure instanceof Data_Maybe.Just) {
                                  return true;
                              };
                              throw new Error("Failed pattern match at Spec.Content.Register line 284, column 17 - line 286, column 27: " + [ state.failure.constructor.name ]);
                          })(),
                          autoHideDuration: Data_Nullable.toNullable(Data_Maybe.Just.create(10000.0)),
                          onClose: Control_Monad_Eff_Uncurried.mkEffFn2(function (v1) {
                              return function (v2) {
                                  return function __do() {
                                      dispatch(ClearFailure.value)();
                                      dispatch(ClearEmailSent.value)();
                                      return dispatch(ClearBadCaptcha.value)();
                                  };
                              };
                          }),
                          message: (function () {
                              if (state.failure instanceof Data_Maybe.Nothing) {
                                  if (state.badCaptcha) {
                                      return React_DOM.text("Bad ReCaptcha response");
                                  };
                                  if (state.emailSent) {
                                      return React_DOM.text("User registered! Please check your email for confirmation.");
                                  };
                                  return React_DOM.text("");
                              };
                              if (state.failure instanceof Data_Maybe.Just) {
                                  return React_DOM.text("Email address is already registered.");
                              };
                              throw new Error("Failed pattern match at Spec.Content.Register line 292, column 20 - line 301, column 9: " + [ state.failure.constructor.name ]);
                          })()
                      }) ];
                  };
              };
          };
      };
      var performAction = function (action) {
          return function (props) {
              return function (state) {
                  if (action instanceof GotReCaptchaVerify) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $64 = {};
                          for (var $65 in v1) {
                              if ({}.hasOwnProperty.call(v1, $65)) {
                                  $64[$65] = v1[$65];
                              };
                          };
                          $64.reCaptcha = new Data_Maybe.Just(action.value0);
                          return $64;
                      }));
                  };
                  if (action instanceof ChangedEmail) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $68 = {};
                          for (var $69 in v1) {
                              if ({}.hasOwnProperty.call(v1, $69)) {
                                  $68[$69] = v1[$69];
                              };
                          };
                          $68.email = action.value0;
                          $68.emailDirty = new Data_Maybe.Just(false);
                          return $68;
                      }));
                  };
                  if (action instanceof ChangedEmailConfirm) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $72 = {};
                          for (var $73 in v1) {
                              if ({}.hasOwnProperty.call(v1, $73)) {
                                  $72[$73] = v1[$73];
                              };
                          };
                          $72.emailConfirm = action.value0;
                          $72.emailConfirmDirty = new Data_Maybe.Just(false);
                          return $72;
                      }));
                  };
                  if (action instanceof ChangedPassword) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $76 = {};
                          for (var $77 in v1) {
                              if ({}.hasOwnProperty.call(v1, $77)) {
                                  $76[$77] = v1[$77];
                              };
                          };
                          $76.password = action.value0;
                          $76.passwordDirty = new Data_Maybe.Just(false);
                          return $76;
                      }));
                  };
                  if (action instanceof ChangedPasswordConfirm) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $80 = {};
                          for (var $81 in v1) {
                              if ({}.hasOwnProperty.call(v1, $81)) {
                                  $80[$81] = v1[$81];
                              };
                          };
                          $80.passwordConfirm = action.value0;
                          $80.passwordConfirmDirty = new Data_Maybe.Just(false);
                          return $80;
                      }));
                  };
                  if (action instanceof EmailUnfocused) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $84 = {};
                          for (var $85 in v1) {
                              if ({}.hasOwnProperty.call(v1, $85)) {
                                  $84[$85] = v1[$85];
                              };
                          };
                          $84.emailDirty = new Data_Maybe.Just(true);
                          return $84;
                      }));
                  };
                  if (action instanceof EmailConfirmUnfocused) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $87 = {};
                          for (var $88 in v1) {
                              if ({}.hasOwnProperty.call(v1, $88)) {
                                  $87[$88] = v1[$88];
                              };
                          };
                          $87.emailConfirmDirty = new Data_Maybe.Just(true);
                          return $87;
                      }));
                  };
                  if (action instanceof PasswordUnfocused) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $90 = {};
                          for (var $91 in v1) {
                              if ({}.hasOwnProperty.call(v1, $91)) {
                                  $90[$91] = v1[$91];
                              };
                          };
                          $90.passwordDirty = new Data_Maybe.Just(true);
                          return $90;
                      }));
                  };
                  if (action instanceof PasswordConfirmUnfocused) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $93 = {};
                          for (var $94 in v1) {
                              if ({}.hasOwnProperty.call(v1, $94)) {
                                  $93[$94] = v1[$94];
                              };
                          };
                          $93.passwordConfirmDirty = new Data_Maybe.Just(true);
                          return $93;
                      }));
                  };
                  if (action instanceof GotEmailSent) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $96 = {};
                          for (var $97 in v1) {
                              if ({}.hasOwnProperty.call(v1, $97)) {
                                  $96[$97] = v1[$97];
                              };
                          };
                          $96.emailSent = true;
                          return $96;
                      })))(function () {
                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(v.toRoot);
                      });
                  };
                  if (action instanceof GotBadCaptcha) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $99 = {};
                          for (var $100 in v1) {
                              if ({}.hasOwnProperty.call(v1, $100)) {
                                  $99[$100] = v1[$100];
                              };
                          };
                          $99.badCaptcha = true;
                          return $99;
                      }));
                  };
                  if (action instanceof GotFailure) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $102 = {};
                          for (var $103 in v1) {
                              if ({}.hasOwnProperty.call(v1, $103)) {
                                  $102[$103] = v1[$103];
                              };
                          };
                          $102.failure = new Data_Maybe.Just(action.value0);
                          return $102;
                      }));
                  };
                  if (action instanceof ClearBadCaptcha) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Base.liftBase(Control_Monad_Base.freeTMonadBase(Control_Monad_Base.affMonadBase)(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadAff)(Control_Coroutine.functorCoTransform))(Control_Monad_Aff.delay(12000.0)))(function () {
                          return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                              var $106 = {};
                              for (var $107 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $107)) {
                                      $106[$107] = v1[$107];
                                  };
                              };
                              $106.badCaptcha = false;
                              return $106;
                          }));
                      });
                  };
                  if (action instanceof ClearFailure) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Base.liftBase(Control_Monad_Base.freeTMonadBase(Control_Monad_Base.affMonadBase)(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadAff)(Control_Coroutine.functorCoTransform))(Control_Monad_Aff.delay(12000.0)))(function () {
                          return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                              var $109 = {};
                              for (var $110 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $110)) {
                                      $109[$110] = v1[$110];
                                  };
                              };
                              $109.failure = Data_Maybe.Nothing.value;
                              return $109;
                          }));
                      });
                  };
                  if (action instanceof ClearEmailSent) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Base.liftBase(Control_Monad_Base.freeTMonadBase(Control_Monad_Base.affMonadBase)(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadAff)(Control_Coroutine.functorCoTransform))(Control_Monad_Aff.delay(12000.0)))(function () {
                          return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                              var $112 = {};
                              for (var $113 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $113)) {
                                      $112[$113] = v1[$113];
                                  };
                              };
                              $112.emailSent = false;
                              return $112;
                          }));
                      });
                  };
                  if (action instanceof SubmitRegister) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $115 = {};
                          for (var $116 in v1) {
                              if ({}.hasOwnProperty.call(v1, $116)) {
                                  $115[$116] = v1[$116];
                              };
                          };
                          $115.pending = true;
                          return $115;
                      })))(function () {
                          var v1 = Text_Email_Validate.emailAddress(state.email);
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              if (state.reCaptcha instanceof Data_Maybe.Nothing) {
                                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
                              };
                              if (state.reCaptcha instanceof Data_Maybe.Just) {
                                  return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Base.liftBase(Control_Monad_Base.freeTMonadBase(Control_Monad_Base.affMonadBase)(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadAff)(Control_Coroutine.functorCoTransform))(Control_Bind.bind(Control_Monad_Aff.bindAff)(LocalCooking_Common_Password.hashPassword({
                                      password: state.password,
                                      salt: Types_Env.env.salt
                                  }))(function (v2) {
                                      return Queue_One_Aff.callAsync(v.registerQueues.init)({
                                          email: v1.value0,
                                          password: v2,
                                          reCaptcha: state.reCaptcha.value0
                                      });
                                  })))(function (v2) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v3) {
                                          var $122 = {};
                                          for (var $123 in v3) {
                                              if ({}.hasOwnProperty.call(v3, $123)) {
                                                  $122[$123] = v3[$123];
                                              };
                                          };
                                          $122.pending = false;
                                          return $122;
                                      })))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(Control_Monad_Eff_Console.log("received: " + Data_Show.show(Data_Maybe.showMaybe(Client_Dependencies_Register.showRegisterInitOut))(v2))))(function () {
                                              if (v2 instanceof Data_Maybe.Nothing) {
                                                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
                                              };
                                              if (v2 instanceof Data_Maybe.Just) {
                                                  if (v2.value0 instanceof Client_Dependencies_Register.RegisterInitOutEmailSent) {
                                                      return performAction(GotEmailSent.value)(props)(state);
                                                  };
                                                  if (v2.value0 instanceof Client_Dependencies_Register.RegisterInitOutBadCaptcha) {
                                                      return performAction(GotBadCaptcha.value)(props)(state);
                                                  };
                                                  if (v2.value0 instanceof Client_Dependencies_Register.RegisterInitOutDBError) {
                                                      return performAction(new GotFailure(v2.value0.value0))(props)(state);
                                                  };
                                                  throw new Error("Failed pattern match at Spec.Content.Register line 153, column 33 - line 156, column 87: " + [ v2.value0.constructor.name ]);
                                              };
                                              throw new Error("Failed pattern match at Spec.Content.Register line 151, column 15 - line 156, column 87: " + [ v2.constructor.name ]);
                                          });
                                      });
                                  });
                              };
                              throw new Error("Failed pattern match at Spec.Content.Register line 143, column 25 - line 156, column 87: " + [ state.reCaptcha.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Spec.Content.Register line 141, column 9 - line 156, column 87: " + [ v1.constructor.name ]);
                      });
                  };
                  throw new Error("Failed pattern match at Spec.Content.Register line 114, column 40 - line 156, column 87: " + [ action.constructor.name ]);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  };
  var initialState = {
      reCaptcha: Data_Maybe.Nothing.value,
      email: "",
      emailDirty: Data_Maybe.Nothing.value,
      emailConfirm: "",
      emailConfirmDirty: Data_Maybe.Nothing.value,
      password: "",
      passwordDirty: Data_Maybe.Nothing.value,
      passwordConfirm: "",
      passwordConfirmDirty: Data_Maybe.Nothing.value,
      pending: false,
      failure: Data_Maybe.Nothing.value,
      badCaptcha: false,
      emailSent: false
  };
  var register = function (params) {
      var v = Thermite.createReactSpec(spec(params))(initialState);
      return React.createElement(React.createClass(v.spec))(Data_Unit.unit)([  ]);
  };
  exports["initialState"] = initialState;
  exports["GotReCaptchaVerify"] = GotReCaptchaVerify;
  exports["ChangedEmail"] = ChangedEmail;
  exports["ChangedEmailConfirm"] = ChangedEmailConfirm;
  exports["EmailUnfocused"] = EmailUnfocused;
  exports["EmailConfirmUnfocused"] = EmailConfirmUnfocused;
  exports["ChangedPassword"] = ChangedPassword;
  exports["ChangedPasswordConfirm"] = ChangedPasswordConfirm;
  exports["PasswordUnfocused"] = PasswordUnfocused;
  exports["PasswordConfirmUnfocused"] = PasswordConfirmUnfocused;
  exports["SubmitRegister"] = SubmitRegister;
  exports["GotFailure"] = GotFailure;
  exports["ClearFailure"] = ClearFailure;
  exports["GotBadCaptcha"] = GotBadCaptcha;
  exports["ClearBadCaptcha"] = ClearBadCaptcha;
  exports["GotEmailSent"] = GotEmailSent;
  exports["ClearEmailSent"] = ClearEmailSent;
  exports["spec"] = spec;
  exports["register"] = register;
})(PS["Spec.Content.Register"] = PS["Spec.Content.Register"] || {});
(function(exports) {
    "use strict";

  var LocalShipping = require('material-ui-icons/LocalShipping').default;

  exports.localShippingIconImpl = LocalShipping;
})(PS["MaterialUI.Icons.LocalShipping"] = PS["MaterialUI.Icons.LocalShipping"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Icons.LocalShipping"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];        
  var localShippingIcon = React.createElement($foreign.localShippingIconImpl)(Data_Unit.unit)([  ]);
  exports["localShippingIcon"] = localShippingIcon;
})(PS["MaterialUI.Icons.LocalShipping"] = PS["MaterialUI.Icons.LocalShipping"] || {});
(function(exports) {
    "use strict";

  var PictureInPicture = require('material-ui-icons/PictureInPicture').default;

  exports.pictureInPictureIconImpl = PictureInPicture;
})(PS["MaterialUI.Icons.PictureInPicture"] = PS["MaterialUI.Icons.PictureInPicture"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Icons.PictureInPicture"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];        
  var pictureInPictureIcon = React.createElement($foreign.pictureInPictureIconImpl)(Data_Unit.unit)([  ]);
  exports["pictureInPictureIcon"] = pictureInPictureIcon;
})(PS["MaterialUI.Icons.PictureInPicture"] = PS["MaterialUI.Icons.PictureInPicture"] || {});
(function(exports) {
    "use strict";

  var Search = require('material-ui-icons/Search').default;

  exports.searchIconImpl = Search;
})(PS["MaterialUI.Icons.Search"] = PS["MaterialUI.Icons.Search"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Icons.Search"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];        
  var searchIcon = React.createElement($foreign.searchIconImpl)(Data_Unit.unit)([  ]);
  exports["searchIcon"] = searchIcon;
})(PS["MaterialUI.Icons.Search"] = PS["MaterialUI.Icons.Search"] || {});
(function(exports) {
    "use strict";

  var ShoppingCart = require('material-ui-icons/ShoppingCart').default;

  exports.shoppingCartIconImpl = ShoppingCart;
})(PS["MaterialUI.Icons.ShoppingCart"] = PS["MaterialUI.Icons.ShoppingCart"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Icons.ShoppingCart"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];        
  var shoppingCartIcon = React.createElement($foreign.shoppingCartIconImpl)(Data_Unit.unit)([  ]);
  exports["shoppingCartIcon"] = shoppingCartIcon;
})(PS["MaterialUI.Icons.ShoppingCart"] = PS["MaterialUI.Icons.ShoppingCart"] || {});
(function(exports) {
    "use strict";

  var Timelapse = require('material-ui-icons/Timelapse').default;

  exports.timelapseIconImpl = Timelapse;
})(PS["MaterialUI.Icons.Timelapse"] = PS["MaterialUI.Icons.Timelapse"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Icons.Timelapse"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];        
  var timelapseIcon = React.createElement($foreign.timelapseIconImpl)(Data_Unit.unit)([  ]);
  exports["timelapseIcon"] = timelapseIcon;
})(PS["MaterialUI.Icons.Timelapse"] = PS["MaterialUI.Icons.Timelapse"] || {});
(function(exports) {
    "use strict";

  var List = require('material-ui/List').default;

  exports.listImpl = List;
})(PS["MaterialUI.List"] = PS["MaterialUI.List"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.List"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var list = function (dictSubrow) {
      return React.createElement($foreign.listImpl);
  };
  exports["list"] = list;
})(PS["MaterialUI.List"] = PS["MaterialUI.List"] || {});
(function(exports) {
    "use strict";

  var ListItem = require('material-ui/List').ListItem;

  exports.listItemImpl = ListItem;
})(PS["MaterialUI.ListItem"] = PS["MaterialUI.ListItem"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.ListItem"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var listItem = function (dictSubrow) {
      return React.createElement($foreign.listItemImpl);
  };
  exports["listItem"] = listItem;
})(PS["MaterialUI.ListItem"] = PS["MaterialUI.ListItem"] || {});
(function(exports) {
    "use strict";

  var ListItemIcon = require('material-ui/List').ListItemIcon;

  exports.listItemIconImpl = ListItemIcon;
})(PS["MaterialUI.ListItemIcon"] = PS["MaterialUI.ListItemIcon"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.ListItemIcon"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var listItemIcon = function (dictSubrow) {
      return function (p) {
          return function ($2) {
              return React.createElement($foreign.listItemIconImpl)(p)($2);
          };
      };
  };
  exports["listItemIcon"] = listItemIcon;
})(PS["MaterialUI.ListItemIcon"] = PS["MaterialUI.ListItemIcon"] || {});
(function(exports) {
    "use strict";

  var ListItemText = require('material-ui/List').ListItemText;

  exports.listItemTextImpl = ListItemText;
})(PS["MaterialUI.ListItemText"] = PS["MaterialUI.ListItemText"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.ListItemText"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var listItemText = function (dictSubrow) {
      return function (p) {
          return React.createElement($foreign.listItemTextImpl)(p)([  ]);
      };
  };
  exports["listItemText"] = listItemText;
})(PS["MaterialUI.ListItemText"] = PS["MaterialUI.ListItemText"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var Desktop = (function () {
      function Desktop() {

      };
      Desktop.value = new Desktop();
      return Desktop;
  })();
  var Laptop = (function () {
      function Laptop() {

      };
      Laptop.value = new Laptop();
      return Laptop;
  })();
  var Tablet = (function () {
      function Tablet() {

      };
      Tablet.value = new Tablet();
      return Tablet;
  })();
  var Phone = (function () {
      function Phone() {

      };
      Phone.value = new Phone();
      return Phone;
  })();
  var Pager = (function () {
      function Pager() {

      };
      Pager.value = new Pager();
      return Pager;
  })();
  var widthToWindowSize = function (s) {
      if (s <= 480) {
          return Pager.value;
      };
      if (s <= 960) {
          return Phone.value;
      };
      if (s <= 1280) {
          return Tablet.value;
      };
      if (s <= 1600) {
          return Laptop.value;
      };
      if (Data_Boolean.otherwise) {
          return Desktop.value;
      };
      throw new Error("Failed pattern match at Window line 45, column 1 - line 45, column 39: " + [ s.constructor.name ]);
  };
  var genericWindowSize = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Window.Desktop" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Desktop.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Window.Laptop" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Laptop.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Window.Tablet" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Tablet.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Window.Phone" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Phone.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Window.Pager" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Pager.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Window.WindowSize", [ {
          sigConstructor: "Window.Desktop",
          sigValues: [  ]
      }, {
          sigConstructor: "Window.Laptop",
          sigValues: [  ]
      }, {
          sigConstructor: "Window.Tablet",
          sigValues: [  ]
      }, {
          sigConstructor: "Window.Phone",
          sigValues: [  ]
      }, {
          sigConstructor: "Window.Pager",
          sigValues: [  ]
      } ]);
  }, function (v) {
      if (v instanceof Desktop) {
          return new Data_Generic.SProd("Window.Desktop", [  ]);
      };
      if (v instanceof Laptop) {
          return new Data_Generic.SProd("Window.Laptop", [  ]);
      };
      if (v instanceof Tablet) {
          return new Data_Generic.SProd("Window.Tablet", [  ]);
      };
      if (v instanceof Phone) {
          return new Data_Generic.SProd("Window.Phone", [  ]);
      };
      if (v instanceof Pager) {
          return new Data_Generic.SProd("Window.Pager", [  ]);
      };
      throw new Error("Failed pattern match at Window line 15, column 8 - line 15, column 56: " + [ v.constructor.name ]);
  });                                                                            
  var eqWindowSize = new Data_Eq.Eq(Data_Generic.gEq(genericWindowSize));
  var ordWindowSize = new Data_Ord.Ord(function () {
      return eqWindowSize;
  }, function (x) {
      return function (y) {
          var $17 = Data_Eq.eq(eqWindowSize)(x)(y);
          if ($17) {
              return Data_Ordering.EQ.value;
          };
          var v = new Data_Tuple.Tuple(x, y);
          if (v.value0 instanceof Pager) {
              return Data_Ordering.LT.value;
          };
          if (v.value1 instanceof Desktop) {
              return Data_Ordering.LT.value;
          };
          if (v.value0 instanceof Desktop) {
              return Data_Ordering.GT.value;
          };
          if (v.value1 instanceof Pager) {
              return Data_Ordering.GT.value;
          };
          if (v.value0 instanceof Phone) {
              if (y instanceof Pager) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ordering.LT.value;
          };
          if (v.value0 instanceof Tablet) {
              if (y instanceof Pager) {
                  return Data_Ordering.GT.value;
              };
              if (y instanceof Phone) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ordering.LT.value;
          };
          if (v.value0 instanceof Laptop) {
              if (y instanceof Desktop) {
                  return Data_Ordering.LT.value;
              };
              return Data_Ordering.GT.value;
          };
          throw new Error("Failed pattern match at Window line 24, column 12 - line 38, column 18: " + [ v.constructor.name ]);
      };
  });
  exports["Desktop"] = Desktop;
  exports["Laptop"] = Laptop;
  exports["Tablet"] = Tablet;
  exports["Phone"] = Phone;
  exports["Pager"] = Pager;
  exports["widthToWindowSize"] = widthToWindowSize;
  exports["genericWindowSize"] = genericWindowSize;
  exports["eqWindowSize"] = eqWindowSize;
  exports["ordWindowSize"] = ordWindowSize;
})(PS["Window"] = PS["Window"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unit = PS["Data.Unit"];
  var IxSignal_Internal = PS["IxSignal.Internal"];
  var MaterialUI_Divider = PS["MaterialUI.Divider"];
  var MaterialUI_Grid = PS["MaterialUI.Grid"];
  var MaterialUI_Icons_LocalShipping = PS["MaterialUI.Icons.LocalShipping"];
  var MaterialUI_Icons_PictureInPicture = PS["MaterialUI.Icons.PictureInPicture"];
  var MaterialUI_Icons_Search = PS["MaterialUI.Icons.Search"];
  var MaterialUI_Icons_ShoppingCart = PS["MaterialUI.Icons.ShoppingCart"];
  var MaterialUI_Icons_Timelapse = PS["MaterialUI.Icons.Timelapse"];
  var MaterialUI_List = PS["MaterialUI.List"];
  var MaterialUI_ListItem = PS["MaterialUI.ListItem"];
  var MaterialUI_ListItemIcon = PS["MaterialUI.ListItemIcon"];
  var MaterialUI_ListItemText = PS["MaterialUI.ListItemText"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var MaterialUI_Typography = PS["MaterialUI.Typography"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var React_Signal_WhileMounted = PS["React.Signal.WhileMounted"];
  var Thermite = PS["Thermite"];
  var Window = PS["Window"];        
  var ChangedWindowSize = (function () {
      function ChangedWindowSize(value0) {
          this.value0 = value0;
      };
      ChangedWindowSize.create = function (value0) {
          return new ChangedWindowSize(value0);
      };
      return ChangedWindowSize;
  })();
  var paragraph3 = [ MaterialUI_Typography.typography(Data_Record_Class.srInst())({
      variant: MaterialUI_Typography.body1,
      align: MaterialUI_Typography.left
  })([ React_DOM.text("Every chef has a "), React_DOM.em([  ])([ React_DOM.text("bi-weekly") ]), React_DOM.text(" schedule, and every order must be filed at least two weeks in advance - each menu has its own shipping date, and each chef has their own planned schedule to fill their orders. This allows chefs to "), React_DOM.em([  ])([ React_DOM.text("care") ]), React_DOM.text(" about each meal and give their full attention to their craft, without having to worry about wasteful time constraints.") ]) ];
  var paragraph2 = MaterialUI_List.list(Data_Record_Class.srInst())({
      dense: true
  })([ MaterialUI_ListItem.listItem(Data_Record_Class.srInst())({})([ MaterialUI_ListItemIcon.listItemIcon(Data_Record_Class.srInst())({})(MaterialUI_Icons_Search.searchIcon), MaterialUI_ListItemText.listItemText(Data_Record_Class.srInst())({
      primary: "Browse our Chefs and Menus"
  }) ]), MaterialUI_ListItem.listItem(Data_Record_Class.srInst())({})([ MaterialUI_ListItemIcon.listItemIcon(Data_Record_Class.srInst())({})(MaterialUI_Icons_PictureInPicture.pictureInPictureIcon), MaterialUI_ListItemText.listItemText(Data_Record_Class.srInst())({
      primary: "View the details on specific meals - the ingredients, the culture and history, and how to prepare it"
  }) ]), MaterialUI_ListItem.listItem(Data_Record_Class.srInst())({})([ MaterialUI_ListItemIcon.listItemIcon(Data_Record_Class.srInst())({})(MaterialUI_Icons_ShoppingCart.shoppingCartIcon), MaterialUI_ListItemText.listItemText(Data_Record_Class.srInst())({
      primary: "Create an order of at least $100, at least two weeks in advance"
  }) ]), MaterialUI_ListItem.listItem(Data_Record_Class.srInst())({})([ MaterialUI_ListItemIcon.listItemIcon(Data_Record_Class.srInst())({})(MaterialUI_Icons_Timelapse.timelapseIcon), MaterialUI_ListItemText.listItemText(Data_Record_Class.srInst())({
      primary: "Checkout your cart, wait for updates on your order"
  }) ]), MaterialUI_ListItem.listItem(Data_Record_Class.srInst())({})([ MaterialUI_ListItemIcon.listItemIcon(Data_Record_Class.srInst())({})(MaterialUI_Icons_LocalShipping.localShippingIcon), MaterialUI_ListItemText.listItemText(Data_Record_Class.srInst())({
      primary: "Receive your delivery of frozen meals, store them, or prepare and enjoy!"
  }) ]) ]);
  var paragraph1 = [ MaterialUI_Typography.typography(Data_Record_Class.srInst())({
      variant: MaterialUI_Typography.body1,
      align: MaterialUI_Typography.left
  })([ React_DOM.text("We are a team of chefs dedicated to providing hand-made, healthy, creative meals to the public at competitive prices. Our platform allows chefs to debut "), React_DOM.em([  ])([ React_DOM.text("their own") ]), React_DOM.text(" menus and feature "), React_DOM.em([  ])([ React_DOM.text("their own") ]), React_DOM.text(" culinary artistry - search for a specific dish, or for a style of talent.") ]), MaterialUI_Typography.typography(Data_Record_Class.srInst())({
      variant: MaterialUI_Typography.body1,
      align: MaterialUI_Typography.left
  })([ React_DOM.text("Our chefs are paid by commission; they receive the majority of profit on every order, while our app gives them an opportunity to reach more customers, looking for their type of cuisine. We want to make the experience of ordering a hand-cooked meal"), React_DOM.em([  ])([ React_DOM.text("personal") ]), React_DOM.text(", yet "), React_DOM.em([  ])([ React_DOM.text("streamlined") ]), React_DOM.text(" enough to meet the needs of our modern world.") ]) ];
  var spec = (function () {
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ MaterialUI_Typography.typography(Data_Record_Class.srInst())({
                          variant: (function () {
                              var $4 = Data_Ord.lessThan(Window.ordWindowSize)(state.windowSize)(Window.Laptop.value);
                              if ($4) {
                                  return MaterialUI_Typography.headline;
                              };
                              return MaterialUI_Typography.display1;
                          })(),
                          align: MaterialUI_Typography.right,
                          color: MaterialUI_Typography.primary,
                          style: MaterialUI_Types.createStyles({
                              marginBottom: "1em"
                          })
                      })([ React_DOM.text("Locally Sourced, Affordable Cuisine for the Average Family") ]) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
                          var $5 = Data_Ord.lessThan(Window.ordWindowSize)(state.windowSize)(Window.Laptop.value);
                          if ($5) {
                              return paragraph1;
                          };
                          return [ MaterialUI_Grid.grid(Data_Record_Class.srInst())({
                              spacing: MaterialUI_Grid.spacing8,
                              container: true
                          })([ MaterialUI_Grid.grid(Data_Record_Class.srInst())({
                              xs: 9,
                              item: true
                          })(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ React_DOM.div([ React_DOM_Props.style({
                              marginTop: "1em"
                          }) ])([  ]) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(paragraph1)([ React_DOM.div([ React_DOM_Props.style({
                              marginBottom: "1em"
                          }) ])([  ]) ]))) ]) ];
                      })())(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ MaterialUI_Divider.divider(Data_Record_Class.srInst())({}), MaterialUI_Typography.typography(Data_Record_Class.srInst())({
                          variant: (function () {
                              var $6 = Data_Ord.lessThan(Window.ordWindowSize)(state.windowSize)(Window.Laptop.value);
                              if ($6) {
                                  return MaterialUI_Typography.headline;
                              };
                              return MaterialUI_Typography.display1;
                          })(),
                          align: MaterialUI_Typography.left,
                          color: MaterialUI_Typography.primary,
                          style: MaterialUI_Types.createStyles({
                              marginBottom: "1em",
                              marginTop: "1em"
                          })
                      })([ React_DOM.text("Simplified Ordering") ]), (function () {
                          var $7 = Data_Ord.lessThan(Window.ordWindowSize)(state.windowSize)(Window.Laptop.value);
                          if ($7) {
                              return paragraph2;
                          };
                          return MaterialUI_Grid.grid(Data_Record_Class.srInst())({
                              spacing: MaterialUI_Grid.spacing8,
                              container: true
                          })([ MaterialUI_Grid.grid(Data_Record_Class.srInst())({
                              xs: 3,
                              item: true
                          })([  ]), MaterialUI_Grid.grid(Data_Record_Class.srInst())({
                              xs: 9,
                              item: true
                          })([ React_DOM.div([ React_DOM_Props.style({
                              marginTop: "1em"
                          }) ])([  ]), paragraph2, React_DOM.div([ React_DOM_Props.style({
                              marginBottom: "1em"
                          }) ])([  ]) ]) ]);
                      })(), MaterialUI_Divider.divider(Data_Record_Class.srInst())({}), MaterialUI_Typography.typography(Data_Record_Class.srInst())({
                          variant: (function () {
                              var $8 = Data_Ord.lessThan(Window.ordWindowSize)(state.windowSize)(Window.Laptop.value);
                              if ($8) {
                                  return MaterialUI_Typography.headline;
                              };
                              return MaterialUI_Typography.display1;
                          })(),
                          align: MaterialUI_Typography.right,
                          color: MaterialUI_Typography.primary,
                          style: MaterialUI_Types.createStyles({
                              marginBottom: "1em",
                              marginTop: "1em"
                          })
                      })([ React_DOM.text("How Long Does it Take, and Why?") ]) ])((function () {
                          var $9 = Data_Ord.lessThan(Window.ordWindowSize)(state.windowSize)(Window.Laptop.value);
                          if ($9) {
                              return paragraph3;
                          };
                          return [ MaterialUI_Grid.grid(Data_Record_Class.srInst())({
                              spacing: MaterialUI_Grid.spacing8,
                              container: true
                          })([ MaterialUI_Grid.grid(Data_Record_Class.srInst())({
                              xs: 9,
                              item: true
                          })(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ React_DOM.div([ React_DOM_Props.style({
                              marginTop: "1em"
                          }) ])([  ]) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(paragraph3)([ React_DOM.div([ React_DOM_Props.style({
                              marginBottom: "1em"
                          }) ])([  ]) ]))) ]) ];
                      })())));
                  };
              };
          };
      };
      var performAction = function (action) {
          return function (props) {
              return function (state) {
                  return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v) {
                      var $11 = {};
                      for (var $12 in v) {
                          if ({}.hasOwnProperty.call(v, $12)) {
                              $11[$12] = v[$12];
                          };
                      };
                      $11.windowSize = action.value0;
                      return $11;
                  }));
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  var initialState = function (v) {
      return {
          windowSize: v.initWindowSize
      };
  };
  var root = function (v) {
      var init = {
          initWindowSize: Control_Monad_Eff_Unsafe.unsafePerformEff(IxSignal_Internal.get(v.windowSizeSignal))
      };
      var v1 = Thermite.createReactSpec(spec)(initialState(init));
      var reactSpec$prime = React_Signal_WhileMounted.whileMountedIxUUID(v.windowSizeSignal)(function ($$this) {
          return function (x) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)(new ChangedWindowSize(x)));
          };
      })(v1.spec);
      return React.createElement(React.createClass(reactSpec$prime))(Data_Unit.unit)([  ]);
  };
  exports["initialState"] = initialState;
  exports["ChangedWindowSize"] = ChangedWindowSize;
  exports["spec"] = spec;
  exports["root"] = root;
  exports["paragraph1"] = paragraph1;
  exports["paragraph2"] = paragraph2;
  exports["paragraph3"] = paragraph3;
})(PS["Spec.Content.Root"] = PS["Spec.Content.Root"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Client_Dependencies_Register = PS["Client.Dependencies.Register"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Crypto_Scrypt = PS["Crypto.Scrypt"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unit = PS["Data.Unit"];
  var IxSignal_Internal = PS["IxSignal.Internal"];
  var Links = PS["Links"];
  var MaterialUI_Paper = PS["MaterialUI.Paper"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var MaterialUI_Typography = PS["MaterialUI.Typography"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var React_Signal_WhileMounted = PS["React.Signal.WhileMounted"];
  var Spec_Content_Chefs = PS["Spec.Content.Chefs"];
  var Spec_Content_Meals = PS["Spec.Content.Meals"];
  var Spec_Content_Register = PS["Spec.Content.Register"];
  var Spec_Content_Root = PS["Spec.Content.Root"];
  var Thermite = PS["Thermite"];
  var Window = PS["Window"];        
  var ChangedCurrentPage = (function () {
      function ChangedCurrentPage(value0) {
          this.value0 = value0;
      };
      ChangedCurrentPage.create = function (value0) {
          return new ChangedCurrentPage(value0);
      };
      return ChangedCurrentPage;
  })();
  var ChangedWindowSize = (function () {
      function ChangedWindowSize(value0) {
          this.value0 = value0;
      };
      ChangedWindowSize.create = function (value0) {
          return new ChangedWindowSize(value0);
      };
      return ChangedWindowSize;
  })();
  var spec = function (v) {
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      return [ React_DOM.main([ React_DOM_Props.style({
                          marginTop: "4.5em"
                      }) ])([ MaterialUI_Paper.paper(Data_Record_Class.srInst())({
                          style: (function () {
                              var $7 = Data_Ord.lessThan(Window.ordWindowSize)(state.windowSize)(Window.Laptop.value);
                              if ($7) {
                                  return MaterialUI_Types.createStyles({
                                      width: "100%",
                                      position: "relative"
                                  });
                              };
                              return MaterialUI_Types.createStyles({
                                  maxWidth: "80em",
                                  width: "100%",
                                  marginLeft: "auto",
                                  marginRight: "auto",
                                  padding: "1em",
                                  position: "relative"
                              });
                          })()
                      })([ React_DOM.div([ React_DOM_Props.style({
                          minHeight: "30em",
                          padding: "1em"
                      }) ])([ (function () {
                          if (state.page instanceof Links.RootLink) {
                              return Spec_Content_Root.root({
                                  windowSizeSignal: v.windowSizeSignal
                              });
                          };
                          if (state.page instanceof Links.ChefsLink) {
                              return Spec_Content_Chefs.chefs;
                          };
                          if (state.page instanceof Links.MealsLink) {
                              return Spec_Content_Meals.meals;
                          };
                          if (state.page instanceof Links.RegisterLink) {
                              return Spec_Content_Register.register({
                                  registerQueues: v.registerQueues,
                                  toRoot: v.siteLinks(Links.RootLink.value)
                              });
                          };
                          throw new Error("Failed pattern match at Spec.Content line 94, column 15 - line 102, column 22: " + [ state.page.constructor.name ]);
                      })() ]), MaterialUI_Typography.typography(Data_Record_Class.srInst())({
                          variant: MaterialUI_Typography.caption,
                          style: MaterialUI_Types.createStyles({
                              marginTop: "5em",
                              textAlign: "center"
                          })
                      })([ React_DOM.text("Copyright \xa9 Local Cooking Inc. 2018, All rights reserved") ]) ]) ]) ];
                  };
              };
          };
      };
      var performAction = function (action) {
          return function (props) {
              return function (state) {
                  if (action instanceof ChangedCurrentPage) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $10 = {};
                          for (var $11 in v1) {
                              if ({}.hasOwnProperty.call(v1, $11)) {
                                  $10[$11] = v1[$11];
                              };
                          };
                          $10.page = action.value0;
                          return $10;
                      }));
                  };
                  if (action instanceof ChangedWindowSize) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $14 = {};
                          for (var $15 in v1) {
                              if ({}.hasOwnProperty.call(v1, $15)) {
                                  $14[$15] = v1[$15];
                              };
                          };
                          $14.windowSize = action.value0;
                          return $14;
                      }));
                  };
                  throw new Error("Failed pattern match at Spec.Content line 69, column 40 - line 73, column 50: " + [ action.constructor.name ]);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  };
  var initialState = function (v) {
      return {
          page: v.initSiteLinks,
          windowSize: v.initWindowSize
      };
  };
  var content = function (v) {
      var init = {
          initSiteLinks: Control_Monad_Eff_Unsafe.unsafePerformEff(IxSignal_Internal.get(v.currentPageSignal)),
          initWindowSize: Control_Monad_Eff_Unsafe.unsafePerformEff(IxSignal_Internal.get(v.windowSizeSignal))
      };
      var v1 = Thermite.createReactSpec(spec({
          registerQueues: v.registerQueues,
          windowSizeSignal: v.windowSizeSignal,
          siteLinks: v.siteLinks
      }))(initialState(init));
      var reactSpec$prime = React_Signal_WhileMounted.whileMountedIxUUID(v.currentPageSignal)(function ($$this) {
          return function (x) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)(new ChangedCurrentPage(x)));
          };
      })(React_Signal_WhileMounted.whileMountedIxUUID(v.windowSizeSignal)(function ($$this) {
          return function (x) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)(new ChangedWindowSize(x)));
          };
      })(v1.spec));
      return React.createElement(React.createClass(reactSpec$prime))(Data_Unit.unit)([  ]);
  };
  exports["initialState"] = initialState;
  exports["ChangedCurrentPage"] = ChangedCurrentPage;
  exports["ChangedWindowSize"] = ChangedWindowSize;
  exports["spec"] = spec;
  exports["content"] = content;
})(PS["Spec.Content"] = PS["Spec.Content"] || {});
(function(exports) {
    "use strict";

  var Dialog = require('material-ui/Dialog').default;

  exports.dialogImpl = Dialog;
})(PS["MaterialUI.Dialog"] = PS["MaterialUI.Dialog"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Dialog"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var dialog = function (dictSubrow) {
      return React.createElement($foreign.dialogImpl);
  };
  exports["dialog"] = dialog;
})(PS["MaterialUI.Dialog"] = PS["MaterialUI.Dialog"] || {});
(function(exports) {
    "use strict";

  var DialogActions = require('material-ui/Dialog').DialogActions;

  exports.dialogActionsImpl = DialogActions;
})(PS["MaterialUI.DialogActions"] = PS["MaterialUI.DialogActions"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.DialogActions"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var dialogActions = function (dictSubrow) {
      return React.createElement($foreign.dialogActionsImpl);
  };
  exports["dialogActions"] = dialogActions;
})(PS["MaterialUI.DialogActions"] = PS["MaterialUI.DialogActions"] || {});
(function(exports) {
    "use strict";

  var DialogContent = require('material-ui/Dialog').DialogContent;

  exports.dialogContentImpl = DialogContent;
})(PS["MaterialUI.DialogContent"] = PS["MaterialUI.DialogContent"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.DialogContent"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var dialogContent = function (dictSubrow) {
      return React.createElement($foreign.dialogContentImpl);
  };
  exports["dialogContent"] = dialogContent;
})(PS["MaterialUI.DialogContent"] = PS["MaterialUI.DialogContent"] || {});
(function(exports) {
    "use strict";

  var DialogTitle = require('material-ui/Dialog').DialogTitle;

  exports.dialogTitleImpl = DialogTitle;
})(PS["MaterialUI.DialogTitle"] = PS["MaterialUI.DialogTitle"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.DialogTitle"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var dialogTitle = function (dictSubrow) {
      return React.createElement($foreign.dialogTitleImpl);
  };
  exports["dialogTitle"] = dialogTitle;
})(PS["MaterialUI.DialogTitle"] = PS["MaterialUI.DialogTitle"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var preventDefault = function (e) {
      return function __do() {
          var v = e.stopPropagation();
          var v1 = e.nativeEvent.stopImmediatePropagation();
          var v2 = e.preventDefault();
          return Data_Unit.unit;
      };
  };
  exports["preventDefault"] = preventDefault;
})(PS["React.DOM.Props.PreventDefault"] = PS["React.DOM.Props.PreventDefault"] || {});
(function(exports) {
    "use strict";
  var fa =require("react-icons/lib/fa"); 

  exports.facebookImpl = fa.FaFacebook;
  exports.twitterImpl = fa.FaTwitter;
  exports.googleImpl = fa.FaGoogle;
})(PS["React.Icons"] = PS["React.Icons"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["React.Icons"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];        
  var twitterIcon = React.createElement($foreign.twitterImpl)(Data_Unit.unit)([  ]);
  var googleIcon = React.createElement($foreign.googleImpl)(Data_Unit.unit)([  ]);
  var facebookIcon = React.createElement($foreign.facebookImpl)(Data_Unit.unit)([  ]);
  exports["facebookIcon"] = facebookIcon;
  exports["twitterIcon"] = twitterIcon;
  exports["googleIcon"] = googleIcon;
})(PS["React.Icons"] = PS["React.Icons"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unit = PS["Data.Unit"];
  var IxQueue = PS["IxQueue"];
  var Prelude = PS["Prelude"];
  var Queue = PS["Queue"];
  var Queue_One = PS["Queue.One"];
  var Queue_Scope = PS["Queue.Scope"];
  var React = PS["React"];        
  var whileMountedOne = function (q) {
      return function (f) {
          return function (reactSpec) {
              var $6 = {};
              for (var $7 in reactSpec) {
                  if ({}.hasOwnProperty.call(reactSpec, $7)) {
                      $6[$7] = reactSpec[$7];
                  };
              };
              $6.componentDidMount = function ($$this) {
                  return function __do() {
                      Control_Monad_Eff_Unsafe.unsafeCoerceEff(Queue_One.onQueue(q)(f($$this)))();
                      return reactSpec.componentDidMount($$this)();
                  };
              };
              $6.componentWillUnmount = function ($$this) {
                  return function __do() {
                      Control_Monad_Eff_Unsafe.unsafeCoerceEff(Queue_One.delQueue(q))();
                      return reactSpec.componentWillUnmount($$this)();
                  };
              };
              return $6;
          };
      };
  };
  exports["whileMountedOne"] = whileMountedOne;
})(PS["React.Queue.WhileMounted"] = PS["React.Queue.WhileMounted"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Base = PS["Control.Monad.Base"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Crypto_Scrypt = PS["Crypto.Scrypt"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_URI = PS["Data.URI"];
  var Data_URI_Location = PS["Data.URI.Location"];
  var Data_URI_URI = PS["Data.URI.URI"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unit = PS["Data.Unit"];
  var Facebook_Call = PS["Facebook.Call"];
  var Facebook_State = PS["Facebook.State"];
  var IxSignal_Internal = PS["IxSignal.Internal"];
  var Links = PS["Links"];
  var LocalCooking_Common_Password = PS["LocalCooking.Common.Password"];
  var MaterialUI_Button = PS["MaterialUI.Button"];
  var MaterialUI_CircularProgress = PS["MaterialUI.CircularProgress"];
  var MaterialUI_Dialog = PS["MaterialUI.Dialog"];
  var MaterialUI_DialogActions = PS["MaterialUI.DialogActions"];
  var MaterialUI_DialogContent = PS["MaterialUI.DialogContent"];
  var MaterialUI_DialogTitle = PS["MaterialUI.DialogTitle"];
  var MaterialUI_Input = PS["MaterialUI.Input"];
  var MaterialUI_TextField = PS["MaterialUI.TextField"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var Queue_One = PS["Queue.One"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var React_DOM_Props_PreventDefault = PS["React.DOM.Props.PreventDefault"];
  var React_Icons = PS["React.Icons"];
  var React_Queue_WhileMounted = PS["React.Queue.WhileMounted"];
  var React_Signal_WhileMounted = PS["React.Signal.WhileMounted"];
  var Text_Email_Validate = PS["Text.Email.Validate"];
  var Thermite = PS["Thermite"];
  var Type_Row = PS["Type.Row"];
  var Types_Env = PS["Types.Env"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Window = PS["Window"];        
  var Open = (function () {
      function Open() {

      };
      Open.value = new Open();
      return Open;
  })();
  var Close = (function () {
      function Close() {

      };
      Close.value = new Close();
      return Close;
  })();
  var ChangedWindowSize = (function () {
      function ChangedWindowSize(value0) {
          this.value0 = value0;
      };
      ChangedWindowSize.create = function (value0) {
          return new ChangedWindowSize(value0);
      };
      return ChangedWindowSize;
  })();
  var ChangedPage = (function () {
      function ChangedPage(value0) {
          this.value0 = value0;
      };
      ChangedPage.create = function (value0) {
          return new ChangedPage(value0);
      };
      return ChangedPage;
  })();
  var ChangedEmail = (function () {
      function ChangedEmail(value0) {
          this.value0 = value0;
      };
      ChangedEmail.create = function (value0) {
          return new ChangedEmail(value0);
      };
      return ChangedEmail;
  })();
  var EmailUnfocused = (function () {
      function EmailUnfocused() {

      };
      EmailUnfocused.value = new EmailUnfocused();
      return EmailUnfocused;
  })();
  var ChangedPassword = (function () {
      function ChangedPassword(value0) {
          this.value0 = value0;
      };
      ChangedPassword.create = function (value0) {
          return new ChangedPassword(value0);
      };
      return ChangedPassword;
  })();
  var SubmitLogin = (function () {
      function SubmitLogin() {

      };
      SubmitLogin.value = new SubmitLogin();
      return SubmitLogin;
  })();
  var ClickedRegister = (function () {
      function ClickedRegister() {

      };
      ClickedRegister.value = new ClickedRegister();
      return ClickedRegister;
  })();
  var spec = function (v) {
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      return [ (function () {
                          var dialog$prime = (function () {
                              var $24 = Data_Ord.lessThan(Window.ordWindowSize)(state.windowSize)(Window.Laptop.value);
                              if ($24) {
                                  return MaterialUI_Dialog.dialog(Data_Record_Class.srInst())({
                                      open: state.open,
                                      fullScreen: true
                                  });
                              };
                              return MaterialUI_Dialog.dialog(Data_Record_Class.srInst())({
                                  open: state.open,
                                  fullWidth: true,
                                  onClose: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                                      return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(!state.pending)(dispatch(Close.value));
                                  })
                              });
                          })();
                          return dialog$prime([ MaterialUI_DialogTitle.dialogTitle(Data_Record_Class.srInst())({})([ React_DOM.text("Login") ]), MaterialUI_DialogContent.dialogContent(Data_Record_Class.srInst())({
                              style: MaterialUI_Types.createStyles({
                                  position: "relative"
                              })
                          })([ MaterialUI_TextField.textField(Data_Record_Class.srInst())()({
                              label: React_DOM.text("Email"),
                              fullWidth: true,
                              onChange: Control_Monad_Eff_Uncurried.mkEffFn1(function (e) {
                                  return dispatch(new ChangedEmail(e.target.value));
                              }),
                              onBlur: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                                  return dispatch(EmailUnfocused.value);
                              }),
                              error: (function () {
                                  var v1 = Text_Email_Validate.emailAddress(state.email);
                                  if (v1 instanceof Data_Maybe.Nothing) {
                                      return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(state.emailDirty)(new Data_Maybe.Just(true));
                                  };
                                  if (v1 instanceof Data_Maybe.Just) {
                                      return false;
                                  };
                                  throw new Error("Failed pattern match at Spec.Dialogs.Login line 161, column 26 - line 163, column 34: " + [ v1.constructor.name ]);
                              })(),
                              name: "login-email",
                              id: "login-email"
                          }), MaterialUI_TextField.textField(Data_Record_Class.srInst())()({
                              label: React_DOM.text("Password"),
                              fullWidth: true,
                              type: MaterialUI_Input.passwordType,
                              onChange: Control_Monad_Eff_Uncurried.mkEffFn1(function (p) {
                                  return dispatch(new ChangedPassword(p.target.value));
                              }),
                              name: "login-password",
                              id: "login-password"
                          }), React_DOM.div([ React_DOM_Props.style({
                              display: "flex",
                              justifyContent: "space-evenly",
                              paddingTop: "2em"
                          }) ])((function () {
                              var mkFab = function (mainColor) {
                                  return function (darkColor) {
                                      return function (icon) {
                                          return function (mLink) {
                                              return MaterialUI_Button.withStyles(Data_Record_Class.srInst())()(MaterialUI_Types.compileStylesCons(MaterialUI_Types.compileStylesNil))(Type_Row.listToRowCons(Type_Row.listToRowNil)())(function (theme) {
                                                  return {
                                                      root: MaterialUI_Types.createStyles({
                                                          backgroundColor: mainColor,
                                                          color: "#ffffff",
                                                          "&:hover": {
                                                              backgroundColor: darkColor
                                                          }
                                                      })
                                                  };
                                              })(function (v1) {
                                                  return MaterialUI_Button.button(Data_Record_Class.srInst())({
                                                      variant: MaterialUI_Button.fab,
                                                      classes: MaterialUI_Button.createClasses(Data_Record_Class.srInst())({
                                                          root: v1.classes.root
                                                      }),
                                                      disabled: (function () {
                                                          if (mLink instanceof Data_Maybe.Nothing) {
                                                              return true;
                                                          };
                                                          return false;
                                                      })(),
                                                      href: (function () {
                                                          if (mLink instanceof Data_Maybe.Nothing) {
                                                              return "";
                                                          };
                                                          if (mLink instanceof Data_Maybe.Just) {
                                                              return Data_URI_URI.print(Facebook_Call.facebookLoginLinkToURI(Facebook_State.encodeJsonFacebookLoginState)(mLink.value0));
                                                          };
                                                          throw new Error("Failed pattern match at Spec.Dialogs.Login line 193, column 39 - line 195, column 85: " + [ mLink.constructor.name ]);
                                                      })()
                                                  })([ icon ]);
                                              });
                                          };
                                      };
                                  };
                              };
                              return [ mkFab("#3b5998")("#1e3f82")(React_Icons.facebookIcon)(Data_Maybe.Just.create({
                                  redirectURL: v.toURI(Links.toLocation(Links.toLocationThirdPartyLoginReturnLinks)(Links.FacebookLoginReturn.value)),
                                  state: {
                                      origin: state.currentPage
                                  }
                              })), mkFab("#1da1f3")("#0f8cdb")(React_Icons.twitterIcon)(Data_Maybe.Nothing.value), mkFab("#dd4e40")("#c13627")(React_Icons.googleIcon)(Data_Maybe.Nothing.value) ];
                          })()), (function () {
                              if (state.pending) {
                                  return React_DOM.div([ React_DOM_Props.style({
                                      zIndex: 1000,
                                      position: "absolute",
                                      top: "0",
                                      left: "0",
                                      right: "0",
                                      bottom: "0",
                                      display: "flex",
                                      flexDirection: "column",
                                      alignItems: "center",
                                      justifyContent: "center",
                                      background: "rgba(255,255,255, 0.6)"
                                  }) ])([ MaterialUI_CircularProgress.circularProgress(Data_Record_Class.srInst())({
                                      size: 50
                                  }) ]);
                              };
                              return React_DOM.text("");
                          })() ]), MaterialUI_DialogActions.dialogActions(Data_Record_Class.srInst())({})([ MaterialUI_Button.button(Data_Record_Class.srInst())({
                              color: MaterialUI_Button.secondary,
                              onClick: Control_Monad_Eff_Uncurried.mkEffFn1(React_DOM_Props_PreventDefault.preventDefault),
                              onTouchTap: Control_Monad_Eff_Uncurried.mkEffFn1(function (e) {
                                  return function __do() {
                                      React_DOM_Props_PreventDefault.preventDefault(e)();
                                      return dispatch(ClickedRegister.value)();
                                  };
                              }),
                              href: Data_URI_URI.print(v.toURI(Links.toLocation(Links.toLocationSiteLinks)(Links.RegisterLink.value)))
                          })([ React_DOM.text("Register") ]), MaterialUI_Button.button(Data_Record_Class.srInst())({
                              color: MaterialUI_Button.primary,
                              disabled: (function () {
                                  var v1 = Text_Email_Validate.emailAddress(state.email);
                                  if (v1 instanceof Data_Maybe.Nothing) {
                                      return state.password === "";
                                  };
                                  if (v1 instanceof Data_Maybe.Just) {
                                      return false;
                                  };
                                  throw new Error("Failed pattern match at Spec.Dialogs.Login line 239, column 29 - line 241, column 34: " + [ v1.constructor.name ]);
                              })(),
                              onTouchTap: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                                  return dispatch(SubmitLogin.value);
                              })
                          })([ React_DOM.text("Submit") ]), MaterialUI_Button.button(Data_Record_Class.srInst())({
                              color: MaterialUI_Button["default"],
                              onTouchTap: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                                  return dispatch(Close.value);
                              })
                          })([ React_DOM.text("Cancel") ]) ]) ]);
                      })() ];
                  };
              };
          };
      };
      var performAction = function (action) {
          return function (props) {
              return function (state) {
                  if (action instanceof Open) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $36 = {};
                          for (var $37 in v1) {
                              if ({}.hasOwnProperty.call(v1, $37)) {
                                  $36[$37] = v1[$37];
                              };
                          };
                          $36.open = true;
                          return $36;
                      }));
                  };
                  if (action instanceof Close) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $39 = {};
                          for (var $40 in v1) {
                              if ({}.hasOwnProperty.call(v1, $40)) {
                                  $39[$40] = v1[$40];
                              };
                          };
                          $39.open = false;
                          $39.pending = false;
                          return $39;
                      })))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Base.liftBase(Control_Monad_Base.freeTMonadBase(Control_Monad_Base.affMonadBase)(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadAff)(Control_Coroutine.functorCoTransform))(Control_Monad_Aff.delay(2000.0)))(function () {
                              return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                                  var $42 = {};
                                  for (var $43 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $43)) {
                                          $42[$43] = v1[$43];
                                      };
                                  };
                                  $42.email = "";
                                  $42.password = "";
                                  return $42;
                              }));
                          });
                      });
                  };
                  if (action instanceof ChangedWindowSize) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $45 = {};
                          for (var $46 in v1) {
                              if ({}.hasOwnProperty.call(v1, $46)) {
                                  $45[$46] = v1[$46];
                              };
                          };
                          $45.windowSize = action.value0;
                          return $45;
                      }));
                  };
                  if (action instanceof ChangedPage) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $49 = {};
                          for (var $50 in v1) {
                              if ({}.hasOwnProperty.call(v1, $50)) {
                                  $49[$50] = v1[$50];
                              };
                          };
                          $49.currentPage = action.value0;
                          return $49;
                      }));
                  };
                  if (action instanceof ChangedEmail) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $53 = {};
                          for (var $54 in v1) {
                              if ({}.hasOwnProperty.call(v1, $54)) {
                                  $53[$54] = v1[$54];
                              };
                          };
                          $53.email = action.value0;
                          $53.emailDirty = new Data_Maybe.Just(false);
                          return $53;
                      }));
                  };
                  if (action instanceof ClickedRegister) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(v.toRegister))(function () {
                          return performAction(Close.value)(props)(state);
                      });
                  };
                  if (action instanceof EmailUnfocused) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $57 = {};
                          for (var $58 in v1) {
                              if ({}.hasOwnProperty.call(v1, $58)) {
                                  $57[$58] = v1[$58];
                              };
                          };
                          $57.emailDirty = new Data_Maybe.Just(true);
                          return $57;
                      }));
                  };
                  if (action instanceof ChangedPassword) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $60 = {};
                          for (var $61 in v1) {
                              if ({}.hasOwnProperty.call(v1, $61)) {
                                  $60[$61] = v1[$61];
                              };
                          };
                          $60.password = action.value0;
                          return $60;
                      }));
                  };
                  if (action instanceof SubmitLogin) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $64 = {};
                          for (var $65 in v1) {
                              if ({}.hasOwnProperty.call(v1, $65)) {
                                  $64[$65] = v1[$65];
                              };
                          };
                          $64.pending = true;
                          return $64;
                      })))(function () {
                          var v1 = Text_Email_Validate.emailAddress(state.email);
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(Control_Monad_Eff_Console.log("bad email!"));
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Base.liftBase(Control_Monad_Base.freeTMonadBase(Control_Monad_Base.affMonadBase)(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadAff)(Control_Coroutine.functorCoTransform))(Control_Bind.bind(Control_Monad_Aff.bindAff)(LocalCooking_Common_Password.hashPassword({
                                  salt: Types_Env.env.salt,
                                  password: state.password
                              }))(function (v2) {
                                  return v.login(v1.value0)(v2);
                              })))(function () {
                                  return performAction(Close.value)(props)(state);
                              });
                          };
                          throw new Error("Failed pattern match at Spec.Dialogs.Login line 128, column 9 - line 134, column 44: " + [ v1.constructor.name ]);
                      });
                  };
                  throw new Error("Failed pattern match at Spec.Dialogs.Login line 112, column 40 - line 134, column 44: " + [ action.constructor.name ]);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  };
  var initialState = function (v) {
      return {
          open: false,
          windowSize: v.initWindowSize,
          currentPage: v.initSiteLinks,
          email: "",
          emailDirty: Data_Maybe.Nothing.value,
          password: "",
          pending: false
      };
  };
  var loginDialog = function (v) {
      var init = {
          initSiteLinks: Control_Monad_Eff_Unsafe.unsafePerformEff(IxSignal_Internal.get(v.currentPageSignal)),
          initWindowSize: Control_Monad_Eff_Unsafe.unsafePerformEff(IxSignal_Internal.get(v.windowSizeSignal))
      };
      var v1 = Thermite.createReactSpec(spec({
          toURI: v.toURI,
          login: v.login,
          toRegister: v.toRegister
      }))(initialState(init));
      var reactSpecLogin = React_Signal_WhileMounted.whileMountedIxUUID(v.windowSizeSignal)(function ($$this) {
          return function (x) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)(new ChangedWindowSize(x)));
          };
      })(React_Signal_WhileMounted.whileMountedIxUUID(v.currentPageSignal)(function ($$this) {
          return function (x) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)(new ChangedPage(x)));
          };
      })(React_Queue_WhileMounted.whileMountedOne(v.openLoginSignal)(function ($$this) {
          return function (v2) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)(Open.value));
          };
      })(v1.spec)));
      return React.createElement(React.createClass(reactSpecLogin))(Data_Unit.unit)([  ]);
  };
  exports["initialState"] = initialState;
  exports["Open"] = Open;
  exports["Close"] = Close;
  exports["ChangedWindowSize"] = ChangedWindowSize;
  exports["ChangedPage"] = ChangedPage;
  exports["ChangedEmail"] = ChangedEmail;
  exports["EmailUnfocused"] = EmailUnfocused;
  exports["ChangedPassword"] = ChangedPassword;
  exports["SubmitLogin"] = SubmitLogin;
  exports["ClickedRegister"] = ClickedRegister;
  exports["spec"] = spec;
  exports["loginDialog"] = loginDialog;
})(PS["Spec.Dialogs.Login"] = PS["Spec.Dialogs.Login"] || {});
(function(exports) {
    "use strict";

  var Drawer = require('material-ui/Drawer').default;       

  exports.drawerImpl = Drawer;
})(PS["MaterialUI.Drawer"] = PS["MaterialUI.Drawer"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Drawer"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_Unit = PS["Data.Unit"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Type_Row = PS["Type.Row"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var drawer = function (dictSubrow) {
      return React.createElement($foreign.drawerImpl);
  };
  exports["drawer"] = drawer;
})(PS["MaterialUI.Drawer"] = PS["MaterialUI.Drawer"] || {});
(function(exports) {
    "use strict";

  var RestaurantMenu = require('material-ui-icons/RestaurantMenu').default;

  exports.restaurantMenuIconImpl = RestaurantMenu;
})(PS["MaterialUI.Icons.RestaurantMenu"] = PS["MaterialUI.Icons.RestaurantMenu"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Icons.RestaurantMenu"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];        
  var restaurantMenuIcon = React.createElement($foreign.restaurantMenuIconImpl)(Data_Unit.unit)([  ]);
  exports["restaurantMenuIcon"] = restaurantMenuIcon;
})(PS["MaterialUI.Icons.RestaurantMenu"] = PS["MaterialUI.Icons.RestaurantMenu"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Now = PS["Control.Monad.Eff.Now"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unit = PS["Data.Unit"];
  var IxSignal_Internal = PS["IxSignal.Internal"];
  var Links = PS["Links"];
  var MaterialUI_Divider = PS["MaterialUI.Divider"];
  var MaterialUI_Drawer = PS["MaterialUI.Drawer"];
  var MaterialUI_Icons_PersonPin = PS["MaterialUI.Icons.PersonPin"];
  var MaterialUI_Icons_RestaurantMenu = PS["MaterialUI.Icons.RestaurantMenu"];
  var MaterialUI_List = PS["MaterialUI.List"];
  var MaterialUI_ListItem = PS["MaterialUI.ListItem"];
  var MaterialUI_ListItemIcon = PS["MaterialUI.ListItemIcon"];
  var MaterialUI_ListItemText = PS["MaterialUI.ListItemText"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Queue_One = PS["Queue.One"];
  var React = PS["React"];
  var React_Queue_WhileMounted = PS["React.Queue.WhileMounted"];
  var Thermite = PS["Thermite"];
  var Window = PS["Window"];        
  var ChangedWindowSize = (function () {
      function ChangedWindowSize(value0) {
          this.value0 = value0;
      };
      ChangedWindowSize.create = function (value0) {
          return new ChangedWindowSize(value0);
      };
      return ChangedWindowSize;
  })();
  var Clicked = (function () {
      function Clicked(value0) {
          this.value0 = value0;
      };
      Clicked.create = function (value0) {
          return new Clicked(value0);
      };
      return Clicked;
  })();
  var Open = (function () {
      function Open() {

      };
      Open.value = new Open();
      return Open;
  })();
  var Close = (function () {
      function Close() {

      };
      Close.value = new Close();
      return Close;
  })();
  var spec = function (v) {
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      return [ MaterialUI_Drawer.drawer(Data_Record_Class.srInst())({
                          open: state.open,
                          onClose: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                              return dispatch(Close.value);
                          })
                      })([ MaterialUI_List.list(Data_Record_Class.srInst())({})((function () {
                          var item = function (x) {
                              return MaterialUI_ListItem.listItem(Data_Record_Class.srInst())({
                                  button: true,
                                  onClick: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                                      return dispatch(new Clicked(x));
                                  })
                              })([ MaterialUI_ListItemIcon.listItemIcon(Data_Record_Class.srInst())({})(MaterialUI_Icons_RestaurantMenu.restaurantMenuIcon), MaterialUI_ListItemText.listItemText(Data_Record_Class.srInst())({
                                  primary: (function (dictPartial) {
                                      var __unused = function (dictPartial1) {
                                          return function ($dollar14) {
                                              return $dollar14;
                                          };
                                      };
                                      return __unused(dictPartial)((function () {
                                          if (x instanceof Links.RootLink) {
                                              return "About";
                                          };
                                          if (x instanceof Links.MealsLink) {
                                              return "Meals";
                                          };
                                          if (x instanceof Links.ChefsLink) {
                                              return "Chefs";
                                          };
                                          throw new Error("Failed pattern match at Spec.Drawers.LeftMenu line 113, column 48 - line 117, column 21: " + [ x.constructor.name ]);
                                      })());
                                  })()
                              }) ]);
                          };
                          return [ item(Links.RootLink.value), MaterialUI_Divider.divider(Data_Record_Class.srInst())({}), item(Links.MealsLink.value), MaterialUI_Divider.divider(Data_Record_Class.srInst())({}), item(Links.ChefsLink.value) ];
                      })()) ]) ];
                  };
              };
          };
      };
      var lastOpen = Control_Monad_Eff_Unsafe.unsafePerformEff(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value));
      var performAction = function (action) {
          return function (props) {
              return function (state) {
                  if (action instanceof ChangedWindowSize) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $21 = {};
                          for (var $22 in v1) {
                              if ({}.hasOwnProperty.call(v1, $22)) {
                                  $21[$22] = v1[$22];
                              };
                          };
                          $21.windowSize = action.value0;
                          return $21;
                      }));
                  };
                  if (action instanceof Clicked) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(performAction(Close.value)(props)(state))(function () {
                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(v.siteLinks(action.value0));
                      });
                  };
                  if (action instanceof Open) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(function __do() {
                          var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_DateTime_Instant.unInstant)(Control_Monad_Eff_Now.now)();
                          return Control_Monad_Eff_Ref.writeRef(lastOpen)(new Data_Maybe.Just(v1))();
                      }))(function () {
                          return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                              var $27 = {};
                              for (var $28 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $28)) {
                                      $27[$28] = v1[$28];
                                  };
                              };
                              $27.open = true;
                              return $27;
                          }));
                      });
                  };
                  if (action instanceof Close) {
                      return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(function __do() {
                          var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_DateTime_Instant.unInstant)(Control_Monad_Eff_Now.now)();
                          var v2 = Control_Monad_Eff_Ref.readRef(lastOpen)();
                          if (v2 instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                          };
                          if (v2 instanceof Data_Maybe.Just) {
                              return Data_Maybe.Just.create(new Data_Tuple.Tuple(v1, v2.value0));
                          };
                          throw new Error("Failed pattern match at Spec.Drawers.LeftMenu line 87, column 11 - line 89, column 46: " + [ v2.constructor.name ]);
                      }))(function (v1) {
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              if (Data_Ord.greaterThan(Data_Time_Duration.ordMilliseconds)(Data_Ring.sub(Data_Time_Duration.ringMilliseconds)(v1.value0.value0)(v1.value0.value1))(1000.0)) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(Control_Monad_Eff_Ref.writeRef(lastOpen)(Data_Maybe.Nothing.value)))(function () {
                                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v2) {
                                          var $36 = {};
                                          for (var $37 in v2) {
                                              if ({}.hasOwnProperty.call(v2, $37)) {
                                                  $36[$37] = v2[$37];
                                              };
                                          };
                                          $36.open = false;
                                          return $36;
                                      }));
                                  });
                              };
                              if (Data_Boolean.otherwise) {
                                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
                              };
                          };
                          throw new Error("Failed pattern match at Spec.Drawers.LeftMenu line 90, column 9 - line 96, column 37: " + [ v1.constructor.name ]);
                      });
                  };
                  throw new Error("Failed pattern match at Spec.Drawers.LeftMenu line 73, column 40 - line 96, column 37: " + [ action.constructor.name ]);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  };
  var initialState = function (v) {
      return {
          open: false,
          windowSize: v.initWindowSize
      };
  };
  var leftMenu = function (v) {
      var init = {
          initWindowSize: Control_Monad_Eff_Unsafe.unsafePerformEff(IxSignal_Internal.get(v.windowSizeSignal))
      };
      var v1 = Thermite.createReactSpec(spec({
          siteLinks: v.siteLinks
      }))(initialState(init));
      var reactSpecLogin = React_Queue_WhileMounted.whileMountedOne(v.mobileDrawerOpenSignal)(function ($$this) {
          return function (v2) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)(Open.value));
          };
      })(v1.spec);
      return React.createElement(React.createClass(reactSpecLogin))(Data_Unit.unit)([  ]);
  };
  exports["initialState"] = initialState;
  exports["ChangedWindowSize"] = ChangedWindowSize;
  exports["Clicked"] = Clicked;
  exports["Open"] = Open;
  exports["Close"] = Close;
  exports["spec"] = spec;
  exports["leftMenu"] = leftMenu;
})(PS["Spec.Drawers.LeftMenu"] = PS["Spec.Drawers.LeftMenu"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Client_Dependencies_AuthToken = PS["Client.Dependencies.AuthToken"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Base = PS["Control.Monad.Base"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Unit = PS["Data.Unit"];
  var Login_Error = PS["Login.Error"];
  var MaterialUI_Snackbar = PS["MaterialUI.Snackbar"];
  var Prelude = PS["Prelude"];
  var Queue_One = PS["Queue.One"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_Queue_WhileMounted = PS["React.Queue.WhileMounted"];
  var Thermite = PS["Thermite"];        
  var GotAuthFailure = (function () {
      function GotAuthFailure(value0) {
          this.value0 = value0;
      };
      GotAuthFailure.create = function (value0) {
          return new GotAuthFailure(value0);
      };
      return GotAuthFailure;
  })();
  var ClearAuthFailure = (function () {
      function ClearAuthFailure() {

      };
      ClearAuthFailure.value = new ClearAuthFailure();
      return ClearAuthFailure;
  })();
  var GotAuthError = (function () {
      function GotAuthError(value0) {
          this.value0 = value0;
      };
      GotAuthError.create = function (value0) {
          return new GotAuthError(value0);
      };
      return GotAuthError;
  })();
  var ClearAuthError = (function () {
      function ClearAuthError() {

      };
      ClearAuthError.value = new ClearAuthError();
      return ClearAuthError;
  })();
  var spec = (function () {
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      return [ MaterialUI_Snackbar.snackbar(Data_Record_Class.srInst())({
                          open: (function () {
                              if (state.authFailure instanceof Data_Maybe.Nothing) {
                                  if (state.authError instanceof Data_Maybe.Nothing) {
                                      return false;
                                  };
                                  if (state.authError instanceof Data_Maybe.Just) {
                                      return true;
                                  };
                                  throw new Error("Failed pattern match at Spec.Snackbar line 67, column 24 - line 69, column 29: " + [ state.authError.constructor.name ]);
                              };
                              if (state.authFailure instanceof Data_Maybe.Just) {
                                  return true;
                              };
                              throw new Error("Failed pattern match at Spec.Snackbar line 66, column 17 - line 70, column 27: " + [ state.authFailure.constructor.name ]);
                          })(),
                          autoHideDuration: Data_Nullable.toNullable(Data_Maybe.Just.create(10000.0)),
                          onClose: Control_Monad_Eff_Uncurried.mkEffFn2(function (v) {
                              return function (v1) {
                                  return function __do() {
                                      dispatch(ClearAuthError.value)();
                                      return dispatch(ClearAuthFailure.value)();
                                  };
                              };
                          }),
                          message: React_DOM.div([  ])([ (function () {
                              if (state.authFailure instanceof Data_Maybe.Nothing) {
                                  return React_DOM.text("");
                              };
                              if (state.authFailure instanceof Data_Maybe.Just) {
                                  if (state.authFailure.value0 instanceof Client_Dependencies_AuthToken.BadPassword) {
                                      return React_DOM.text("Password incorrect, please try again.");
                                  };
                                  if (state.authFailure.value0 instanceof Client_Dependencies_AuthToken.EmailDoesntExist) {
                                      return React_DOM.text("Email address not found, please register.");
                                  };
                                  throw new Error("Failed pattern match at Spec.Snackbar line 79, column 25 - line 82, column 11: " + [ state.authFailure.value0.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Spec.Snackbar line 77, column 13 - line 82, column 11: " + [ state.authFailure.constructor.name ]);
                          })(), (function () {
                              if (state.authError instanceof Data_Maybe.Nothing) {
                                  return React_DOM.text("");
                              };
                              if (state.authError instanceof Data_Maybe.Just) {
                                  if (state.authError.value0 instanceof Login_Error.FBLoginReturnBad) {
                                      return React_DOM.text("Bad Facebook login response: " + (state.authError.value0.value0 + (", " + state.authError.value0.value1)));
                                  };
                                  if (state.authError.value0 instanceof Login_Error.FBLoginReturnDenied) {
                                      return React_DOM.text("Facebook login denied: " + state.authError.value0.value0);
                                  };
                                  if (state.authError.value0 instanceof Login_Error.FBLoginReturnBadParse) {
                                      return React_DOM.text("Internal error: Facebook login return unparsable.");
                                  };
                                  if (state.authError.value0 instanceof Login_Error.FBLoginReturnNoUser) {
                                      return React_DOM.text("Facebook user not recognized, please link your account.");
                                  };
                                  if (state.authError.value0 instanceof Login_Error.AuthExistsFailure) {
                                      return React_DOM.text("Warning: You've been logged out; your session expired.");
                                  };
                                  throw new Error("Failed pattern match at Spec.Snackbar line 84, column 25 - line 90, column 11: " + [ state.authError.value0.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Spec.Snackbar line 82, column 13 - line 90, column 11: " + [ state.authError.constructor.name ]);
                          })() ])
                      }) ];
                  };
              };
          };
      };
      var performAction = function (action) {
          return function (props) {
              return function (state) {
                  if (action instanceof GotAuthFailure) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v) {
                          var $22 = {};
                          for (var $23 in v) {
                              if ({}.hasOwnProperty.call(v, $23)) {
                                  $22[$23] = v[$23];
                              };
                          };
                          $22.authFailure = new Data_Maybe.Just(action.value0);
                          return $22;
                      }));
                  };
                  if (action instanceof ClearAuthFailure) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Base.liftBase(Control_Monad_Base.freeTMonadBase(Control_Monad_Base.affMonadBase)(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadAff)(Control_Coroutine.functorCoTransform))(Control_Monad_Aff.delay(Data_Time_Duration.Milliseconds(2000.0))))(function () {
                          return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v) {
                              var $26 = {};
                              for (var $27 in v) {
                                  if ({}.hasOwnProperty.call(v, $27)) {
                                      $26[$27] = v[$27];
                                  };
                              };
                              $26.authFailure = Data_Maybe.Nothing.value;
                              return $26;
                          }));
                      });
                  };
                  if (action instanceof GotAuthError) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v) {
                          var $29 = {};
                          for (var $30 in v) {
                              if ({}.hasOwnProperty.call(v, $30)) {
                                  $29[$30] = v[$30];
                              };
                          };
                          $29.authError = new Data_Maybe.Just(action.value0);
                          return $29;
                      }));
                  };
                  if (action instanceof ClearAuthError) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Base.liftBase(Control_Monad_Base.freeTMonadBase(Control_Monad_Base.affMonadBase)(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadAff)(Control_Coroutine.functorCoTransform))(Control_Monad_Aff.delay(Data_Time_Duration.Milliseconds(2000.0))))(function () {
                          return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v) {
                              var $33 = {};
                              for (var $34 in v) {
                                  if ({}.hasOwnProperty.call(v, $34)) {
                                      $33[$34] = v[$34];
                                  };
                              };
                              $33.authError = Data_Maybe.Nothing.value;
                              return $33;
                          }));
                      });
                  };
                  throw new Error("Failed pattern match at Spec.Snackbar line 53, column 40 - line 61, column 55: " + [ action.constructor.name ]);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  var initialState = {
      authFailure: Data_Maybe.Nothing.value,
      authError: Data_Maybe.Nothing.value
  };
  var messages = function (v) {
      var v1 = Thermite.createReactSpec(spec)(initialState);
      var reactSpec$prime = React_Queue_WhileMounted.whileMountedOne(v.authErrorSignal)(function ($$this) {
          return function (eX) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)((function () {
                  if (eX instanceof Data_Either.Left) {
                      return new GotAuthError(eX.value0);
                  };
                  if (eX instanceof Data_Either.Right) {
                      return new GotAuthFailure(eX.value0);
                  };
                  throw new Error("Failed pattern match at Spec.Snackbar line 104, column 60 - line 106, column 48: " + [ eX.constructor.name ]);
              })()));
          };
      })(v1.spec);
      return React.createElement(React.createClass(reactSpec$prime))(Data_Unit.unit)([  ]);
  };
  exports["initialState"] = initialState;
  exports["GotAuthFailure"] = GotAuthFailure;
  exports["ClearAuthFailure"] = ClearAuthFailure;
  exports["GotAuthError"] = GotAuthError;
  exports["ClearAuthError"] = ClearAuthError;
  exports["spec"] = spec;
  exports["messages"] = messages;
})(PS["Spec.Snackbar"] = PS["Spec.Snackbar"] || {});
(function(exports) {
    "use strict";

  var AppBar = require('material-ui/AppBar').default;       

  exports.appBarImpl = AppBar;
})(PS["MaterialUI.AppBar"] = PS["MaterialUI.AppBar"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.AppBar"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_Unit = PS["Data.Unit"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Type_Row = PS["Type.Row"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var fixed = "fixed";
  var $$default = "default";
  var appBar = function (dictSubrow) {
      return React.createElement($foreign.appBarImpl);
  };
  exports["appBar"] = appBar;
  exports["default"] = $$default;
  exports["fixed"] = fixed;
})(PS["MaterialUI.AppBar"] = PS["MaterialUI.AppBar"] || {});
(function(exports) {
    "use strict";

  var IconButton = require('material-ui/IconButton').default;

  exports.iconButtonImpl = IconButton;
})(PS["MaterialUI.IconButton"] = PS["MaterialUI.IconButton"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.IconButton"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var inherit = "inherit";
  var iconButton = function (dictSubrow) {
      return function (p) {
          return function ($2) {
              return React.createElement($foreign.iconButtonImpl)(p)($2);
          };
      };
  };
  exports["iconButton"] = iconButton;
  exports["inherit"] = inherit;
})(PS["MaterialUI.IconButton"] = PS["MaterialUI.IconButton"] || {});
(function(exports) {
    "use strict";

  var Menu = require('material-ui-icons/Menu').default;

  exports.menuIconImpl = Menu;
})(PS["MaterialUI.Icons.Menu"] = PS["MaterialUI.Icons.Menu"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Icons.Menu"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];        
  var menuIcon = React.createElement($foreign.menuIconImpl)(Data_Unit.unit)([  ]);
  exports["menuIcon"] = menuIcon;
})(PS["MaterialUI.Icons.Menu"] = PS["MaterialUI.Icons.Menu"] || {});
(function(exports) {
    "use strict";

  var Toolbar = require('material-ui/Toolbar').default;

  exports.toolbarImpl = Toolbar;
})(PS["MaterialUI.Toolbar"] = PS["MaterialUI.Toolbar"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["MaterialUI.Toolbar"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var toolbar = function (dictSubrow) {
      return React.createElement($foreign.toolbarImpl);
  };
  exports["toolbar"] = toolbar;
})(PS["MaterialUI.Toolbar"] = PS["MaterialUI.Toolbar"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_URI = PS["Data.URI"];
  var Data_URI_Location = PS["Data.URI.Location"];
  var Data_URI_URI = PS["Data.URI.URI"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unit = PS["Data.Unit"];
  var IxSignal_Internal = PS["IxSignal.Internal"];
  var Links = PS["Links"];
  var MaterialUI_AppBar = PS["MaterialUI.AppBar"];
  var MaterialUI_Button = PS["MaterialUI.Button"];
  var MaterialUI_IconButton = PS["MaterialUI.IconButton"];
  var MaterialUI_Icons_Menu = PS["MaterialUI.Icons.Menu"];
  var MaterialUI_Toolbar = PS["MaterialUI.Toolbar"];
  var MaterialUI_Types = PS["MaterialUI.Types"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Queue_One = PS["Queue.One"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var React_DOM_Props_PreventDefault = PS["React.DOM.Props.PreventDefault"];
  var React_Signal_WhileMounted = PS["React.Signal.WhileMounted"];
  var Thermite = PS["Thermite"];
  var Window = PS["Window"];        
  var OpenLogin = (function () {
      function OpenLogin() {

      };
      OpenLogin.value = new OpenLogin();
      return OpenLogin;
  })();
  var ClickedMobileMenuButton = (function () {
      function ClickedMobileMenuButton() {

      };
      ClickedMobileMenuButton.value = new ClickedMobileMenuButton();
      return ClickedMobileMenuButton;
  })();
  var ChangedWindowSize = (function () {
      function ChangedWindowSize(value0) {
          this.value0 = value0;
      };
      ChangedWindowSize.create = function (value0) {
          return new ChangedWindowSize(value0);
      };
      return ChangedWindowSize;
  })();
  var ChangedCurrentPage = (function () {
      function ChangedCurrentPage(value0) {
          this.value0 = value0;
      };
      ChangedCurrentPage.create = function (value0) {
          return new ChangedCurrentPage(value0);
      };
      return ChangedCurrentPage;
  })();
  var Clicked = (function () {
      function Clicked(value0) {
          this.value0 = value0;
      };
      Clicked.create = function (value0) {
          return new Clicked(value0);
      };
      return Clicked;
  })();
  var spec = function (v) {
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      return [ MaterialUI_AppBar.appBar(Data_Record_Class.srInst())({
                          color: MaterialUI_AppBar["default"],
                          position: MaterialUI_AppBar.fixed
                      })([ MaterialUI_Toolbar.toolbar(Data_Record_Class.srInst())({
                          style: MaterialUI_Types.createStyles({
                              display: "flex"
                          })
                      })(Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
                          var $17 = Data_Ord.lessThan(Window.ordWindowSize)(state.windowSize)(Window.Laptop.value);
                          if ($17) {
                              return [ MaterialUI_IconButton.iconButton(Data_Record_Class.srInst())({
                                  color: MaterialUI_IconButton.inherit,
                                  onTouchTap: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                                      return dispatch(ClickedMobileMenuButton.value);
                                  })
                              })(MaterialUI_Icons_Menu.menuIcon) ];
                          };
                          var mkButton = function (x) {
                              return MaterialUI_Button.button(Data_Record_Class.srInst())({
                                  color: (function (dictPartial) {
                                      var __unused = function (dictPartial1) {
                                          return function ($dollar8) {
                                              return $dollar8;
                                          };
                                      };
                                      return __unused(dictPartial)((function () {
                                          if (x instanceof Links.RootLink) {
                                              return MaterialUI_Button.inherit;
                                          };
                                          if (x instanceof Links.MealsLink) {
                                              return MaterialUI_Button.primary;
                                          };
                                          if (x instanceof Links.ChefsLink) {
                                              return MaterialUI_Button.secondary;
                                          };
                                          throw new Error("Failed pattern match at Spec.Topbar line 101, column 46 - line 104, column 55: " + [ x.constructor.name ]);
                                      })());
                                  })(),
                                  disabled: Data_Eq.eq(Links.eqSiteLinks)(state.currentPage)(x),
                                  onClick: Control_Monad_Eff_Uncurried.mkEffFn1(React_DOM_Props_PreventDefault.preventDefault),
                                  onTouchTap: Control_Monad_Eff_Uncurried.mkEffFn1(function (e) {
                                      return function __do() {
                                          React_DOM_Props_PreventDefault.preventDefault(e)();
                                          return dispatch(new Clicked(x))();
                                      };
                                  }),
                                  href: Data_URI_URI.print(v.toURI(Links.toLocation(Links.toLocationSiteLinks)(x))),
                                  variant: (function () {
                                      if (x instanceof Links.RootLink) {
                                          return MaterialUI_Button.flat;
                                      };
                                      return MaterialUI_Button.raised;
                                  })()
                              })([ React_DOM.text((function (dictPartial) {
                                  var __unused = function (dictPartial1) {
                                      return function ($dollar10) {
                                          return $dollar10;
                                      };
                                  };
                                  return __unused(dictPartial)((function () {
                                      if (x instanceof Links.RootLink) {
                                          return "About";
                                      };
                                      if (x instanceof Links.MealsLink) {
                                          return "Meals";
                                      };
                                      if (x instanceof Links.ChefsLink) {
                                          return "Chefs";
                                      };
                                      throw new Error("Failed pattern match at Spec.Topbar line 114, column 50 - line 118, column 23: " + [ x.constructor.name ]);
                                  })());
                              })()) ]);
                          };
                          return [ React_DOM.img([ React_DOM_Props.src(Data_URI_URI.print(v.toURI(Links.toLocation(Links.toLocationLogoLinks)(Links.Logo40Png.value)))), React_DOM_Props.style({
                              height: "2.5em",
                              border: 0
                          }) ])([  ]), mkButton(Links.RootLink.value), mkButton(Links.MealsLink.value), mkButton(Links.ChefsLink.value) ];
                      })())([ React_DOM.div([ React_DOM_Props.style({
                          flex: 1,
                          display: "flex",
                          flexDirection: "row-reverse"
                      }) ])([ MaterialUI_Button.button(Data_Record_Class.srInst())({
                          color: MaterialUI_Button.inherit,
                          onTouchTap: Control_Monad_Eff_Uncurried.mkEffFn1(function (v1) {
                              return dispatch(OpenLogin.value);
                          })
                      })([ React_DOM.text("Login") ]) ]) ])) ]) ];
                  };
              };
          };
      };
      var performAction = function (action) {
          return function (props) {
              return function (state) {
                  if (action instanceof OpenLogin) {
                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(Queue_One.putQueue(v.openLoginSignal)(Data_Unit.unit));
                  };
                  if (action instanceof ClickedMobileMenuButton) {
                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(Queue_One.putQueue(v.mobileMenuButtonSignal)(Data_Unit.unit));
                  };
                  if (action instanceof ChangedWindowSize) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $22 = {};
                          for (var $23 in v1) {
                              if ({}.hasOwnProperty.call(v1, $23)) {
                                  $22[$23] = v1[$23];
                              };
                          };
                          $22.windowSize = action.value0;
                          return $22;
                      }));
                  };
                  if (action instanceof ChangedCurrentPage) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $26 = {};
                          for (var $27 in v1) {
                              if ({}.hasOwnProperty.call(v1, $27)) {
                                  $26[$27] = v1[$27];
                              };
                          };
                          $26.currentPage = action.value0;
                          return $26;
                      }));
                  };
                  if (action instanceof Clicked) {
                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(v.siteLinks(action.value0));
                  };
                  throw new Error("Failed pattern match at Spec.Topbar line 81, column 40 - line 86, column 41: " + [ action.constructor.name ]);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  };
  var initialState = function (v) {
      return {
          windowSize: v.initWindowSize,
          currentPage: v.initSiteLinks
      };
  };
  var topbar = function (v) {
      var init = {
          initSiteLinks: Control_Monad_Eff_Unsafe.unsafePerformEff(IxSignal_Internal.get(v.currentPageSignal)),
          initWindowSize: Control_Monad_Eff_Unsafe.unsafePerformEff(IxSignal_Internal.get(v.windowSizeSignal))
      };
      var v1 = Thermite.createReactSpec(spec({
          toURI: v.toURI,
          openLoginSignal: v.openLoginSignal,
          siteLinks: v.siteLinks,
          mobileMenuButtonSignal: v.mobileMenuButtonSignal
      }))(initialState(init));
      var reactSpec$prime = React_Signal_WhileMounted.whileMountedIxUUID(v.windowSizeSignal)(function ($$this) {
          return function (x) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)(new ChangedWindowSize(x)));
          };
      })(React_Signal_WhileMounted.whileMountedIxUUID(v.currentPageSignal)(function ($$this) {
          return function (x) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)(new ChangedCurrentPage(x)));
          };
      })(v1.spec));
      return React.createElement(React.createClass(reactSpec$prime))(Data_Unit.unit)([  ]);
  };
  exports["initialState"] = initialState;
  exports["OpenLogin"] = OpenLogin;
  exports["ClickedMobileMenuButton"] = ClickedMobileMenuButton;
  exports["ChangedWindowSize"] = ChangedWindowSize;
  exports["ChangedCurrentPage"] = ChangedCurrentPage;
  exports["Clicked"] = Clicked;
  exports["spec"] = spec;
  exports["topbar"] = topbar;
})(PS["Spec.Topbar"] = PS["Spec.Topbar"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Browser_WebStorage = PS["Browser.WebStorage"];
  var Client_Dependencies_AuthToken = PS["Client.Dependencies.AuthToken"];
  var Client_Dependencies_Register = PS["Client.Dependencies.Register"];
  var Colors = PS["Colors"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Base = PS["Control.Monad.Base"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Now = PS["Control.Monad.Eff.Now"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Timer = PS["Control.Monad.Eff.Timer"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Crypto_Scrypt = PS["Crypto.Scrypt"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Record_Class = PS["Data.Record.Class"];
  var Data_URI = PS["Data.URI"];
  var Data_URI_Location = PS["Data.URI.Location"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unit = PS["Data.Unit"];
  var IxSignal_Internal = PS["IxSignal.Internal"];
  var Links = PS["Links"];
  var LocalCooking_Common_AuthToken = PS["LocalCooking.Common.AuthToken"];
  var Login_Error = PS["Login.Error"];
  var Login_Storage = PS["Login.Storage"];
  var MaterialUI_CssBaseline = PS["MaterialUI.CssBaseline"];
  var MaterialUI_MuiThemeProvider = PS["MaterialUI.MuiThemeProvider"];
  var Prelude = PS["Prelude"];
  var Queue = PS["Queue"];
  var Queue_One = PS["Queue.One"];
  var Queue_One_Aff = PS["Queue.One.Aff"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_Signal_WhileMounted = PS["React.Signal.WhileMounted"];
  var Spec_Content = PS["Spec.Content"];
  var Spec_Dialogs_Login = PS["Spec.Dialogs.Login"];
  var Spec_Drawers_LeftMenu = PS["Spec.Drawers.LeftMenu"];
  var Spec_Snackbar = PS["Spec.Snackbar"];
  var Spec_Topbar = PS["Spec.Topbar"];
  var Thermite = PS["Thermite"];
  var Window = PS["Window"];        
  var GotAuthToken = (function () {
      function GotAuthToken(value0) {
          this.value0 = value0;
      };
      GotAuthToken.create = function (value0) {
          return new GotAuthToken(value0);
      };
      return GotAuthToken;
  })();
  var CallAuthToken = (function () {
      function CallAuthToken(value0) {
          this.value0 = value0;
      };
      CallAuthToken.create = function (value0) {
          return new CallAuthToken(value0);
      };
      return CallAuthToken;
  })();
  var spec = function (v) {
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      var template = function (content) {
                          return [ MaterialUI_CssBaseline.cssBaseline, MaterialUI_MuiThemeProvider.muiThemeProvider({
                              theme: MaterialUI_MuiThemeProvider.createMuiTheme(Data_Record_Class.srInst())(Data_Record_Class.srInst())({
                                  palette: Colors.palette
                              })
                          })(React_DOM.div([  ])(content)) ];
                      };
                      var openLoginSignal = Control_Monad_Eff_Unsafe.unsafePerformEff(Queue_One.newQueue);
                      var mobileMenuButtonSignal = Control_Monad_Eff_Unsafe.unsafePerformEff(Queue_One.newQueue);
                      return template([ Spec_Topbar.topbar({
                          toURI: v.toURI,
                          openLoginSignal: Queue_One.writeOnly(openLoginSignal),
                          windowSizeSignal: v.windowSizeSignal,
                          siteLinks: v.siteLinks,
                          mobileMenuButtonSignal: Queue_One.writeOnly(mobileMenuButtonSignal),
                          currentPageSignal: v.currentPageSignal
                      }), Spec_Content.content({
                          currentPageSignal: v.currentPageSignal,
                          registerQueues: v.registerQueues,
                          windowSizeSignal: v.windowSizeSignal,
                          siteLinks: v.siteLinks
                      }), Spec_Dialogs_Login.loginDialog({
                          openLoginSignal: Queue_One.readOnly(openLoginSignal),
                          windowSizeSignal: v.windowSizeSignal,
                          toURI: v.toURI,
                          currentPageSignal: v.currentPageSignal,
                          login: function (email) {
                              return function (password) {
                                  return Control_Monad_Aff.makeAff(function (resolve) {
                                      return function __do() {
                                          Control_Monad_Eff_Unsafe.unsafeCoerceEff(dispatch(CallAuthToken.create(new Client_Dependencies_AuthToken.AuthTokenInitInLogin({
                                              email: email,
                                              password: password
                                          }))))();
                                          Queue_One.onQueue(v.loginPendingSignal)(function (v1) {
                                              return resolve(new Data_Either.Right(Data_Unit.unit));
                                          })();
                                          return Control_Monad_Aff.nonCanceler;
                                      };
                                  });
                              };
                          },
                          toRegister: v.siteLinks(Links.RegisterLink.value)
                      }), Spec_Drawers_LeftMenu.leftMenu({
                          mobileDrawerOpenSignal: Queue_One.readOnly(mobileMenuButtonSignal),
                          siteLinks: v.siteLinks,
                          windowSizeSignal: v.windowSizeSignal
                      }), Spec_Snackbar.messages({
                          authErrorSignal: Queue_One.readOnly(v.authErrorSignal)
                      }) ]);
                  };
              };
          };
      };
      var performAction = function (action) {
          return function (props) {
              return function (state) {
                  if (action instanceof GotAuthToken) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v1) {
                          var $9 = {};
                          for (var $10 in v1) {
                              if ({}.hasOwnProperty.call(v1, $10)) {
                                  $9[$10] = v1[$10];
                              };
                          };
                          $9.authToken = action.value0;
                          return $9;
                      }));
                  };
                  if (action instanceof CallAuthToken) {
                      return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Base.liftBase(Control_Monad_Base.freeTMonadBase(Control_Monad_Base.affMonadBase)(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadAff)(Control_Coroutine.functorCoTransform))(Queue_One_Aff.callAsync(v.authTokenQueues.init)(action.value0)))(function (v1) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))((function () {
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(Queue_One.putQueue(v.authErrorSignal)(new Data_Either.Left(Login_Error.AuthExistsFailure.value)));
                              };
                              if (v1 instanceof Data_Maybe.Just) {
                                  if (v1.value0 instanceof Client_Dependencies_AuthToken.AuthTokenInitOutSuccess) {
                                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(function __do() {
                                          Login_Storage.storeAuthToken(v1.value0.value0)();
                                          return IxSignal_Internal.set(new Data_Maybe.Just(v1.value0.value0))(v.authTokenSignal)();
                                      });
                                  };
                                  if (v1.value0 instanceof Client_Dependencies_AuthToken.AuthTokenInitOutFailure) {
                                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(Queue_One.putQueue(v.authErrorSignal)(new Data_Either.Right(v1.value0.value0)));
                                  };
                                  throw new Error("Failed pattern match at Spec line 120, column 13 - line 126, column 65: " + [ v1.value0.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Spec line 116, column 9 - line 126, column 65: " + [ v1.constructor.name ]);
                          })())(function () {
                              return Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))(Queue_One.putQueue(v.loginPendingSignal)(Data_Unit.unit));
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Spec line 112, column 40 - line 127, column 55: " + [ action.constructor.name ]);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  };
  var initialState = {
      authToken: Data_Maybe.Nothing.value
  };
  var app = function (v) {
      var loginPendingSignal = Control_Monad_Eff_Unsafe.unsafePerformEff(Queue_One.newQueue);
      var authTokenSignal = Control_Monad_Eff_Unsafe.unsafePerformEff(IxSignal_Internal.make(Data_Maybe.Nothing.value));
      var authErrorSignal = Control_Monad_Eff_Unsafe.unsafePerformEff(Queue_One.newQueue);
      var v1 = Thermite.createReactSpec(spec({
          toURI: v.toURI,
          windowSizeSignal: v.windowSizeSignal,
          currentPageSignal: v.currentPageSignal,
          siteLinks: v.siteLinks,
          development: v.development,
          authTokenQueues: v.authTokenQueues,
          registerQueues: v.registerQueues,
          authErrorSignal: authErrorSignal,
          loginPendingSignal: loginPendingSignal,
          authTokenSignal: authTokenSignal
      }))(initialState);
      var reactSpec$prime = React_Signal_WhileMounted.whileMountedIxUUID(authTokenSignal)(function ($$this) {
          return function (x) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)(new GotAuthToken(x)));
          };
      })((function () {
          var $37 = {};
          for (var $38 in v1.spec) {
              if ({}.hasOwnProperty.call(v1.spec, $38)) {
                  $37[$38] = v1["spec"][$38];
              };
          };
          $37.componentWillMount = function ($$this) {
              return function __do() {
                  (function () {
                      if (v.preliminaryAuthToken instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                      };
                      if (v.preliminaryAuthToken instanceof Data_Maybe.Just) {
                          if (v.preliminaryAuthToken.value0 instanceof Data_Either.Right) {
                              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(v1.dispatcher($$this)(CallAuthToken.create(new Client_Dependencies_AuthToken.AuthTokenInitInExists({
                                  exists: v.preliminaryAuthToken.value0.value0
                              }))));
                          };
                          if (v.preliminaryAuthToken.value0 instanceof Data_Either.Left) {
                              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(Queue_One.putQueue(authErrorSignal)(new Data_Either.Left(v.preliminaryAuthToken.value0.value0)));
                          };
                          throw new Error("Failed pattern match at Spec line 228, column 49 - line 234, column 72: " + [ v.preliminaryAuthToken.value0.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Spec line 226, column 11 - line 234, column 72: " + [ v.preliminaryAuthToken.constructor.name ]);
                  })()();
                  return v1.spec.componentWillMount($$this)();
              };
          };
          return $37;
      })());
      return {
          spec: reactSpec$prime,
          dispatcher: v1.dispatcher
      };
  };
  exports["initialState"] = initialState;
  exports["GotAuthToken"] = GotAuthToken;
  exports["CallAuthToken"] = CallAuthToken;
  exports["spec"] = spec;
  exports["app"] = app;
})(PS["Spec"] = PS["Spec"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Browser_WebStorage = PS["Browser.WebStorage"];
  var Client_Dependencies_AuthToken = PS["Client.Dependencies.AuthToken"];
  var Client_Dependencies_Register = PS["Client.Dependencies.Register"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Execution_Immediate = PS["Control.Execution.Immediate"];
  var Control_Monad_Base = PS["Control.Monad.Base"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Now = PS["Control.Monad.Eff.Now"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Timer = PS["Control.Monad.Eff.Timer"];
  var Control_Monad_Trans_Control = PS["Control.Monad.Trans.Control"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Crypto_Scrypt = PS["Crypto.Scrypt"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Document = PS["DOM.HTML.Document"];
  var DOM_HTML_Location = PS["DOM.HTML.Location"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Singleton = PS["Data.Functor.Singleton"];
  var Data_Int_Parse = PS["Data.Int.Parse"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_URI = PS["Data.URI"];
  var Data_URI_Authority = PS["Data.URI.Authority"];
  var Data_URI_Host = PS["Data.URI.Host"];
  var Data_URI_Location = PS["Data.URI.Location"];
  var Data_URI_Port = PS["Data.URI.Port"];
  var Data_URI_Scheme = PS["Data.URI.Scheme"];
  var Data_UUID = PS["Data.UUID"];
  var Data_Unit = PS["Data.Unit"];
  var IxSignal_Internal = PS["IxSignal.Internal"];
  var Links = PS["Links"];
  var Login_Error = PS["Login.Error"];
  var Login_Storage = PS["Login.Storage"];
  var MaterialUI_InjectTapEvent = PS["MaterialUI.InjectTapEvent"];
  var Network_HTTP_Affjax = PS["Network.HTTP.Affjax"];
  var Prelude = PS["Prelude"];
  var Queue = PS["Queue"];
  var Queue_One = PS["Queue.One"];
  var React = PS["React"];
  var ReactDOM = PS["ReactDOM"];
  var Signal_DOM = PS["Signal.DOM"];
  var Signal_Internal = PS["Signal.Internal"];
  var Signal_Time = PS["Signal.Time"];
  var Sparrow_Client = PS["Sparrow.Client"];
  var Sparrow_Client_Queue = PS["Sparrow.Client.Queue"];
  var Sparrow_Client_Types = PS["Sparrow.Client.Types"];
  var Sparrow_Types = PS["Sparrow.Types"];
  var Spec = PS["Spec"];
  var Types_Env = PS["Types.Env"];
  var WebSocket = PS["WebSocket"];
  var Window = PS["Window"];        
  var main = function __do() {
      Control_Monad_Eff_Console.log("Starting Local Cooking frontend...")();
      MaterialUI_InjectTapEvent.injectTapEvent();
      var v = Control_Execution_Immediate.registerShim();
      var v1 = DOM_HTML.window();
      var v2 = DOM_HTML_Window.location(v1)();
      var v3 = DOM_HTML_Window.history(v1)();
      var v4 = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($58) {
          return Data_Maybe.Just.create(Data_URI_Scheme.Scheme(Data_String.takeWhile(function (c) {
              return c !== ":";
          })($58)));
      })(DOM_HTML_Location.protocol(v2))();
      var v5 = (function __do() {
          var v5 = DOM_HTML_Location.hostname(v2)();
          var v6 = DOM_HTML_Location.port(v2)();
          var v7 = (function () {
              var v7 = Data_Int_Parse["parseInt"](v6)(Data_Int_Parse.toRadix(10));
              if (v7 instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Maybe.Nothing.value);
              };
              if (v7 instanceof Data_Maybe.Just) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Maybe.Just(v7.value0));
              };
              throw new Error("Failed pattern match at Main line 92, column 10 - line 94, column 37: " + [ v7.constructor.name ]);
          })()();
          return new Data_URI_Authority.Authority(Data_Maybe.Nothing.value, [ new Data_Tuple.Tuple(new Data_URI_Host.NameAddress(v5), v7) ]);
      })();
      var v6 = (function __do() {
          var v6 = Links.initSiteLinks();
          var v7 = IxSignal_Internal.make(v6)();
          Links.onPopState(function (siteLink) {
              return IxSignal_Internal.set(siteLink)(v7);
          })(v1)();
          return v7;
      })();
      var v7 = (function __do() {
          var v7 = Queue_One.newQueue();
          Queue_One.onQueue(v7)(function (v8) {
              return function __do() {
                  var v9 = IxSignal_Internal.get(v6)();
                  return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(Data_Eq.notEq(Links.eqSiteLinks)(v9)(v8))(function __do() {
                      Links["pushState'"](v8)(v3)();
                      return IxSignal_Internal.set(v8)(v6)();
                  })();
              };
          })();
          return Queue_One.writeOnly(v7);
      })();
      var v8 = (function __do() {
          var v8 = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Signal_Time.debounce(100.0))(Signal_DOM.windowDimensions)();
          var v9 = Data_Functor.map(Control_Monad_Eff.functorEff)(function (w$prime) {
              return w$prime.w;
          })(Signal_Internal.get(v8))();
          var v10 = Control_Monad_Eff_Ref.newRef(v9)();
          var initWindowSize = Window.widthToWindowSize(v9);
          var v11 = IxSignal_Internal.make(initWindowSize)();
          Data_Function.flip(Signal_Internal.subscribe)(v8)(function (w$prime) {
              return function __do() {
                  var v12 = Control_Monad_Eff_Ref.readRef(v10)();
                  return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(w$prime.w !== v12)(function __do() {
                      Control_Monad_Eff_Ref.writeRef(v10)(w$prime.w)();
                      var size = Window.widthToWindowSize(w$prime.w);
                      return IxSignal_Internal.set(size)(v11)();
                  })();
              };
          })();
          return v11;
      })();
      var v9 = Sparrow_Client_Queue.newSparrowClientQueues();
      var v10 = Sparrow_Client_Queue.newSparrowClientQueues();
      Sparrow_Client.allocateDependencies(Control_Monad_Base.effMonadBase)(Control_Monad_Trans_Control.effMonadBaseControl)(Data_Functor_Singleton.singletonFunctorIdentity)(Data_Eq.eq(Data_Maybe.eqMaybe(Data_URI_Scheme.eqScheme))(v4)(new Data_Maybe.Just("https")))(v5)(Control_Bind.discard(Control_Bind.discardUnit)(Sparrow_Client_Types.bindSparrowClientT(Control_Monad_Eff.bindEff))(Sparrow_Client.unpackClient(Control_Monad_Trans_Control.effMonadBaseControl)(Data_Functor_Singleton.singletonFunctorIdentity)(Client_Dependencies_AuthToken.encodeJsonAuthTokenInitIn)(Client_Dependencies_AuthToken.decodeJsonAuthTokenInitOut)(Client_Dependencies_AuthToken.encodeJsonAuthTokenDeltaIn)(Client_Dependencies_AuthToken.decodeJsonAuthTokenDeltaOut)([ "authToken" ])(Sparrow_Client_Queue.sparrowClientQueues(Control_Monad_Eff_Class.monadEffEff)(Control_Monad_Trans_Control.effMonadBaseControl)(Data_Functor_Singleton.singletonFunctorIdentity)(v9)))(function () {
          return Sparrow_Client.unpackClient(Control_Monad_Trans_Control.effMonadBaseControl)(Data_Functor_Singleton.singletonFunctorIdentity)(Client_Dependencies_Register.encodeJsonRegisterInitIn)(Client_Dependencies_Register.decodeJsonRegisterInitOut)(Client_Dependencies_Register.encodeJsonRegisterDeltaIn)(Client_Dependencies_Register.decodeJsonRegisterDeltaOut)([ "register" ])(Sparrow_Client_Queue.sparrowClientQueues(Control_Monad_Eff_Class.monadEffEff)(Control_Monad_Trans_Control.effMonadBaseControl)(Data_Functor_Singleton.singletonFunctorIdentity)(v10));
      }))();
      var v11 = Data_Functor.map(Control_Monad_Eff.functorEff)(Login_Error.PreliminaryAuthToken)((function () {
          if (Types_Env.env.authToken instanceof Data_Maybe.Nothing) {
              return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create))(Login_Storage.getStoredAuthToken);
          };
          if (Types_Env.env.authToken instanceof Data_Maybe.Just) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Maybe.Just(Types_Env.env.authToken.value0));
          };
          throw new Error("Failed pattern match at Main line 150, column 37 - line 152, column 61: " + [ Types_Env.env.authToken.constructor.name ]);
      })())();
      var v12 = Spec.app({
          toURI: function (location) {
              return Data_URI_Location.toURI({
                  scheme: v4,
                  authority: new Data_Maybe.Just(v5),
                  location: location
              });
          },
          windowSizeSignal: v8,
          currentPageSignal: v6,
          siteLinks: Queue_One.putQueue(v7),
          development: Types_Env.env.development,
          preliminaryAuthToken: v11,
          authTokenQueues: v9,
          registerQueues: v10
      });
      var component = React.createClass(v12.spec);
      return Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function ($59) {
          return ReactDOM.render(React.createFactory(component)(Data_Unit.unit))(DOM_HTML_Types.htmlElementToElement($59));
      }))(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Document.body)(DOM_HTML_Window.document(v1)))();
  };
  exports["main"] = main;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
